{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the workspace."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location in which to create the workspace."
            }
        },
        "dataRetention": {
            "type": "int",
            "defaultValue": 30,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days to retain data."
            }
        },
        "emailAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Short name up to 12 characters for the Action group."
            }
        }
    },
    "variables": {
        "intervalSeconds": 60,
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
        "actionGroupName": "ag-arc-servers",
        "alertsSeverity": 2,
        "windowSize": "PT5M",
        "evaluationFrequency": "PT5M",
        "convertRuleTag": "hidden-link:",
        "singlequote": "'",
        "LogAnalyticsContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
        "mmaWindowsPolicyDefinitionID": "/providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203",
        "mmaWindowsPolicyAssignmentName": "[guid(variables('mmaWindowsPolicyDefinitionID'), parameters('workspaceName'))]",
        "mmaWindowsPolicyAssignmentDisplayName": "(jumpstart) Configure Log Analytics extension on Azure Arc-enabled Windows servers",
        "mmaLinuxPolicyDefinitionID": "/providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf",
        "mmaLinuxPolicyAssignmentName": "[guid(variables('mmaLinuxPolicyDefinitionID'), parameters('workspaceName'))]",
        "mmaLinuxPolicyAssignmentDisplayName": "(jumpstart) Configure Log Analytics extension on Azure Arc-enabled Linux servers",
        "depAgentWindowsPolicyDefinitionID": "/providers/Microsoft.Authorization/policyDefinitions/91cb9edd-cd92-4d2f-b2f2-bdd8d065a3d4",
        "depAgentWindowsPolicyAssignmentName": "[guid(variables('depAgentWindowsPolicyDefinitionID'), parameters('workspaceName'))]",
        "depAgentWindowsPolicyAssignmentDisplayName": "(jumpstart) Configure Dependency agent on Azure Arc-enabled Windows servers",
        "depAgentLinuxPolicyDefinitionID": "/providers/Microsoft.Authorization/policyDefinitions/deacecc0-9f84-44d2-bb82-46f32d766d43",
        "depAgentLinuxPolicyAssignmentName": "[guid(variables('depAgentLinuxPolicyDefinitionID'), parameters('workspaceName'))]",
        "depAgentLinuxPolicyAssignmentDisplayName": "(jumpstart) Configure Dependency agent on Azure Arc-enabled Linux servers",
        "azureDashboardName": "Azure Arc-enabled servers",
        "windowsEventsWorkbookName": "Windows Event Logs",
        "osPerformanceWorkbookName": "OS Performance and Capacity",
        "alertsConsoleWorkbookName": "Azure Monitor Alerts",
        "windowsEventsWorkbookContent": {
            "version": "Notebook/1.0",
            "items": [
                {
                    "type": 1,
                    "content": {
                        "json": "# Event Logs"
                    },
                    "name": "text - 7"
                },
                {
                    "type": 9,
                    "content": {
                        "version": "KqlParameterItem/1.0",
                        "crossComponentResources": [
                            "value::all"
                        ],
                        "parameters": [
                            {
                                "id": "2cf5311e-e4c3-4cbd-91d9-94f2e139ed50",
                                "version": "KqlParameterItem/1.0",
                                "name": "TimeRange",
                                "type": 4,
                                "value": {
                                    "durationMs": 604800000
                                },
                                "typeSettings": {
                                    "selectableValues": [
                                        {
                                            "durationMs": 3600000
                                        },
                                        {
                                            "durationMs": 86400000
                                        },
                                        {
                                            "durationMs": 604800000
                                        },
                                        {
                                            "durationMs": 2592000000
                                        }
                                    ]
                                },
                                "timeContext": {
                                    "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange"
                            },
                            {
                                "id": "b31e4dd2-f34c-4455-86e7-9d7785586ba2",
                                "version": "KqlParameterItem/1.0",
                                "name": "Workspace",
                                "type": 5,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name\r\n",
                                "crossComponentResources": [
                                    "value::all"
                                ],
                                "value": [
                                    "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                ],
                                "typeSettings": {
                                    "additionalResourceOptions": []
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                            }
                        ],
                        "style": "pills",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                    },
                    "name": "parameters - 2"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "Event\r\n|  where EventLog in (\"System\",\"Application\",\"Operations Manager\")\r\n| project EventLog,EventLevelName\r\n| evaluate pivot(EventLevelName)",
                        "size": 1,
                        "showAnalytics": true,
                        "title": "Windows Events - Summary",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "exportFieldName": "EventLog",
                        "exportParameterName": "EventLog",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Information",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "showIcon": true,
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "info",
                                                "text": "{0}{1}"
                                            }
                                        ],
                                        "aggregation": "Unique"
                                    },
                                    "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Warning",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "showIcon": true,
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "warning",
                                                "text": "{0}{1}"
                                            }
                                        ],
                                        "aggregation": "Unique"
                                    },
                                    "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Error",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "showIcon": true,
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "3",
                                                "text": "{0}{1}"
                                            }
                                        ],
                                        "aggregation": "Unique"
                                    },
                                    "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "customWidth": "50",
                    "showPin": true,
                    "name": "query - 0"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventID != 0\r\n| summarize count() by bin(TimeGenerated, 1h),EventLevelName\r\n| sort by TimeGenerated desc\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Events count hourly distribution",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "areachart",
                        "chartSettings": {
                            "seriesLabelSettings": [
                                {
                                    "seriesName": "Information",
                                    "color": "blue"
                                },
                                {
                                    "seriesName": "Warning",
                                    "color": "yellow"
                                },
                                {
                                    "seriesName": "Error",
                                    "color": "red"
                                }
                            ]
                        }
                    },
                    "customWidth": "50",
                    "showPin": true,
                    "name": "query - 6"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"Error\"\r\n| summarize Count=count() by Computer, EventLog, EventLevelName\r\n| sort by Count\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Error Events",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "exportedParameters": [
                            {
                                "fieldName": "Computer",
                                "parameterName": "Computer",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "EventLog",
                                "parameterName": "EventLog",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "Count",
                                "parameterName": "Count",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "EventLevelName",
                                "parameterName": "EventLevelName",
                                "parameterType": 1
                            }
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "EventLog",
                                    "formatter": 5,
                                    "formatOptions": {
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "EventLevelName",
                                    "formatter": 5,
                                    "formatOptions": {
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "Count",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "palette": "red",
                                        "showIcon": true
                                    }
                                }
                            ]
                        }
                    },
                    "customWidth": "33",
                    "showPin": true,
                    "name": "query - 3"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"Warning\"\r\n| summarize Count=count() by Computer, EventLog,EventLevelName\r\n| sort by Count\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Warning Events",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "exportedParameters": [
                            {
                                "fieldName": "Computer",
                                "parameterName": "Computer",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "EventLog",
                                "parameterName": "EventLog",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "Count",
                                "parameterName": "Count",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "EventLevelName",
                                "parameterName": "EventLevelName",
                                "parameterType": 1
                            }
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "EventLog",
                                    "formatter": 5,
                                    "formatOptions": {
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "EventLevelName",
                                    "formatter": 5,
                                    "formatOptions": {
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "Count",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "palette": "yellow",
                                        "showIcon": true
                                    }
                                }
                            ]
                        }
                    },
                    "customWidth": "34",
                    "showPin": true,
                    "name": "query - 2"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"Information\"\r\n| summarize Count=count() by Computer, EventLog,EventLevelName\r\n| sort by Count\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Information Events",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "exportedParameters": [
                            {
                                "fieldName": "Computer",
                                "parameterName": "Computer",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "EventLog",
                                "parameterName": "EventLog",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "Count",
                                "parameterName": "Count",
                                "parameterType": 1
                            },
                            {
                                "fieldName": "EventLevelName",
                                "parameterName": "EventLevelName",
                                "parameterType": 1
                            }
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "EventLog",
                                    "formatter": 5,
                                    "formatOptions": {
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "EventLevelName",
                                    "formatter": 5,
                                    "formatOptions": {
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "Count",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "palette": "blue",
                                        "showIcon": true
                                    }
                                }
                            ]
                        }
                    },
                    "customWidth": "33",
                    "showPin": true,
                    "name": "query - 4"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"{EventLevelName}\" and Computer == \"{Computer}\" and EventID != 0\r\n| project TimeGenerated,Computer, EventLog, [\"Level\"]=EventLevelName, [\"Rendered Description\"]=RenderedDescription\r\n| sort by Computer, EventLog, [\"Level\"]\r\n\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Event ID Description",
                        "timeContext": {
                            "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Level",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "showIcon": true,
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Error",
                                                "representation": "error",
                                                "text": "{0}{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{0}{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Information",
                                                "representation": "info",
                                                "text": "{0}{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "success",
                                                "text": "{0}{1}"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "tileSettings": {
                            "showBorder": false
                        },
                        "graphSettings": {
                            "type": 0
                        }
                    },
                    "showPin": true,
                    "name": "query - 5"
                }
            ],
            "isLocked": false,
            "fallbackResourceIds": [
                "Azure Monitor"
            ]
        },
        "osPerformanceWorkbookContent": {
            "version": "Notebook/1.0",
            "items": [
                {
                    "type": 1,
                    "content": {
                        "json": "# Operating System - Performance and capacity"
                    },
                    "name": "text - 0"
                },
                {
                    "type": 9,
                    "content": {
                        "version": "KqlParameterItem/1.0",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "parameters": [
                            {
                                "id": "b82b64ff-f991-4f44-ac88-aee7c086cc48",
                                "version": "KqlParameterItem/1.0",
                                "name": "TimeRange",
                                "type": 4,
                                "isRequired": true,
                                "value": {
                                    "durationMs": 86400000
                                },
                                "typeSettings": {
                                    "selectableValues": [
                                        {
                                            "durationMs": 3600000
                                        },
                                        {
                                            "durationMs": 43200000
                                        },
                                        {
                                            "durationMs": 86400000
                                        },
                                        {
                                            "durationMs": 259200000
                                        },
                                        {
                                            "durationMs": 604800000
                                        },
                                        {
                                            "durationMs": 1209600000
                                        },
                                        {
                                            "durationMs": 2592000000
                                        }
                                    ],
                                    "allowCustom": true
                                }
                            },
                            {
                                "id": "e1ecac91-1691-4f48-b4c0-803e39e00f43",
                                "version": "KqlParameterItem/1.0",
                                "name": "Workspace",
                                "type": 5,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name\r\n",
                                "crossComponentResources": [
                                    "value::all"
                                ],
                                "value": [
                                    "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                ],
                                "typeSettings": {
                                    "additionalResourceOptions": []
                                },
                                "timeContext": {
                                    "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                            },
                            {
                                "id": "fb251a5f-fd61-44fe-853b-d31624075420",
                                "version": "KqlParameterItem/1.0",
                                "name": "ComputerFilter",
                                "type": 1,
                                "isHiddenWhenLocked": true,
                                "timeContext": {
                                    "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange",
                                "value": ""
                            },
                            {
                                "id": "787717b8-68fe-4d5a-a57d-ed900f7d8981",
                                "version": "KqlParameterItem/1.0",
                                "name": "Counter",
                                "type": 2,
                                "isRequired": true,
                                "query": "Perf\r\n| where TimeGenerated {TimeRange}\r\n| summarize by CounterName, ObjectName, CounterText = CounterName\r\n| order by ObjectName asc, CounterText asc\r\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName",
                                "crossComponentResources": [
                                    "{Workspace}"
                                ],
                                "isHiddenWhenLocked": true,
                                "typeSettings": {
                                    "additionalResourceOptions": []
                                },
                                "queryType": 0,
                                "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                                "id": "852b924f-41bc-4081-a0b6-c758873e702d",
                                "version": "KqlParameterItem/1.0",
                                "name": "Order",
                                "type": 2,
                                "isRequired": true,
                                "isHiddenWhenLocked": true,
                                "typeSettings": {
                                    "additionalResourceOptions": []
                                },
                                "jsonData": "[[\r\n    { \"value\":\"asc\", \"label\":\"asc\", \"selected\": false },\r\n    { \"value\":\"desc\", \"label\":\"desc\", \"selected\": true }\r\n]",
                                "timeContext": {
                                    "durationMs": 0
                                },
                                "timeContextFromParameter": "TimeRange"
                            }
                        ],
                        "style": "pills",
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                    },
                    "name": "parameters - 1"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = ( Heartbeat\r\n    | make-series InternalTrend=iff(count() > 0, 1, 0) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 15m by Computer\r\n    | extend Trend=array_slice(InternalTrend, array_length(InternalTrend) - 30, array_length(InternalTrend)-1)); \r\n\r\nlet PerfCPU = (Perf\r\n    | where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" and InstanceName==\"_Total\"\r\n    | summarize AvgCPU=round(avg(CounterValue),2), MaxCPU=round(max(CounterValue),2) by Computer\r\n    | extend StatusCPU = case (\r\n                  AvgCPU > 80, 2,\r\n                  AvgCPU > 50, 1,\r\n                  AvgCPU <= 50, 0, -1\r\n                )\r\n    );\r\n\r\nlet PerfMemory = (Perf\r\n    | where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\")\r\n    | summarize AvgMEM=round(avg(CounterValue/1024),2), MaxMEM=round(max(CounterValue/1024),2) by Computer\r\n    | extend StatusMEM = case (\r\n                  AvgMEM > 4, 0,\r\n                  AvgMEM >= 1, 1,\r\n                  AvgMEM < 1, 2, -1\r\n            )\r\n    );\r\n\r\nlet PerfDisk = (Perf\r\n    | where (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\") and CounterName == \"Free Megabytes\" and (InstanceName =~ \"C:\" or InstanceName == \"/\")\r\n    | summarize AvgDisk=round(avg(CounterValue),2), (TimeGenerated,LastDisk)=arg_max(TimeGenerated,round(CounterValue,2)) by Computer\r\n    | extend StatusDisk = case (\r\n                  AvgDisk < 5000, 2,\r\n                  AvgDisk < 30000, 1,\r\n                  AvgDisk >= 30000, 0,-1\r\n)\r\n    | project Computer, AvgDisk , LastDisk ,StatusDisk\r\n    );\r\nPerfCPU\r\n| join (PerfMemory) on Computer\r\n| join (PerfDisk) on Computer\r\n| join (trend) on Computer\r\n| project Computer,StatusCPU, AvgCPU,MaxCPU,StatusMEM,AvgMEM,MaxMEM,StatusDisk,AvgDisk,LastDisk, Trend\r\n| sort by Computer ",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Top servers (data aggregated based on TimeRange)",
                        "timeContextFromParameter": "TimeRange",
                        "exportFieldName": "Computer",
                        "exportParameterName": "Computer",
                        "exportDefaultValue": "All",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "StatusCPU",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "0",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "1",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "2",
                                                "representation": "4",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "Unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "AvgCPU",
                                    "formatter": 2,
                                    "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "MaxCPU",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "StatusMEM",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "0",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "1",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "2",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "AvgMEM",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 5,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "MaxMEM",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 39,
                                        "options": {
                                            "style": "decimal",
                                            "maximumFractionDigits": 2
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "StatusDisk",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "0",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "1",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "2",
                                                "representation": "4",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "success",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "AvgDisk",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 38,
                                        "options": {
                                            "style": "decimal",
                                            "maximumFractionDigits": 2
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "LastDisk",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                            "style": "decimal",
                                            "maximumFractionDigits": 2
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 10,
                                    "formatOptions": {
                                        "palette": "blue"
                                    }
                                },
                                {
                                    "columnMatch": "Max",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "palette": "yellowOrangeRed"
                                    },
                                    "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal",
                                            "useGrouping": false
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Min",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "palette": "yellowOrangeRed",
                                        "aggregation": "Min"
                                    },
                                    "numberFormat": {
                                        "unit": 0,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                }
                            ],
                            "sortBy": [
                                {
                                    "itemKey": "$gen_number_AvgCPU_2",
                                    "sortOrder": 2
                                }
                            ],
                            "labelSettings": [
                                {
                                    "columnId": "StatusCPU",
                                    "label": "CPU"
                                },
                                {
                                    "columnId": "AvgCPU",
                                    "label": "CPU (avg)"
                                },
                                {
                                    "columnId": "MaxCPU",
                                    "label": "CPU (max)"
                                },
                                {
                                    "columnId": "StatusMEM",
                                    "label": "Memory"
                                },
                                {
                                    "columnId": "AvgMEM",
                                    "label": "Memory (avg)"
                                },
                                {
                                    "columnId": "MaxMEM",
                                    "label": "Memory (max)"
                                },
                                {
                                    "columnId": "StatusDisk",
                                    "label": "Disk"
                                },
                                {
                                    "columnId": "AvgDisk",
                                    "label": "Disk (avg)"
                                },
                                {
                                    "columnId": "LastDisk",
                                    "label": "Disk (last)"
                                }
                            ]
                        },
                        "sortBy": [
                            {
                                "itemKey": "$gen_number_AvgCPU_2",
                                "sortOrder": 2
                            }
                        ]
                    },
                    "showPin": true,
                    "name": "query - 2",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 1,
                    "content": {
                        "json": "# Top Performance"
                    },
                    "name": "text - 8"
                },
                {
                    "type": 1,
                    "content": {
                        "json": "## Processor(_Total)\\% Processor Time"
                    },
                    "name": "text - 10"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopComputers = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == 'Processor' and CounterName == '% Processor Time' and InstanceName == '_Total' \r\n| summarize AvgCPU = avg(CounterValue) by Computer \r\n| top 10 by AvgCPU desc\r\n| project Computer; \r\nPerf \r\n| where Computer in (TopComputers) \r\n| where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" and InstanceName == \"_Total\" \r\n| summarize Used_CPU = round(avg(CounterValue),1) by Computer, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart",
                        "size": 0,
                        "aggregation": 3,
                        "showAnalytics": true,
                        "title": "% Processor Time - Top 10 Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "chartSettings": {
                            "showLegend": true,
                            "ySettings": {
                                "numberFormatSettings": {
                                    "unit": 1,
                                    "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                    }
                                }
                            }
                        }
                    },
                    "customWidth": "50",
                    "name": "query - 4",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" and InstanceName == \"_Total\" \r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan('00:30:00') by Computer     \r\n| project Computer, ['Trend'] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" and InstanceName == \"_Total\" \r\n| summarize Average=round(avg(CounterValue),3) by Computer\r\n| join (trend) on Computer\r\n| extend Status = case (\r\n                  Average > 80, \"Critical\",\r\n                  Average > 50, \"Warning\",\r\n                  Average <= 50, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project Status, Computer, Average, Trend\r\n| sort by Average ",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Thresholds (Warning>50; Critical>80) - All Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Status",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Critical",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                    },
                                    "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 21,
                                    "formatOptions": {
                                        "palette": "green"
                                    }
                                }
                            ]
                        },
                        "sortBy": []
                    },
                    "customWidth": "50",
                    "name": "query - 9",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 1,
                    "content": {
                        "json": "## Memory: _Available MBytes_ and _% Committed Bytes in Use_"
                    },
                    "name": "text - 11"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopComputers = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| summarize AvailableGBytes = round(avg(CounterValue)/1024,2) by Computer\r\n| top 10 by AvailableGBytes asc\r\n| project Computer; \r\nPerf \r\n| where Computer in (TopComputers) \r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| summarize AvailableGBytes = round(avg(CounterValue)/1024,2) by Computer, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart",
                        "size": 0,
                        "aggregation": 3,
                        "showAnalytics": true,
                        "title": "Available MBytes - Top 10 Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "timechart",
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "AvailableMBytes",
                                    "formatter": 0,
                                    "formatOptions": {
                                        "showIcon": true
                                    },
                                    "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                            "style": "decimal",
                                            "useGrouping": false
                                        }
                                    }
                                }
                            ]
                        },
                        "chartSettings": {
                            "createOtherGroup": 0,
                            "showLegend": true,
                            "ySettings": {
                                "unit": 5,
                                "min": null,
                                "max": null
                            }
                        }
                    },
                    "customWidth": "50",
                    "name": "query - 5",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan('00:30:00') by Computer     \r\n| project Computer, ['Trend'] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| summarize [\"Available GBytes\"]=round(avg(CounterValue)/1024,2) by Computer\r\n| join (trend) on Computer\r\n| extend Status = case (\r\n                  [\"Available GBytes\"] > 4, \"Healthy\",\r\n                  [\"Available GBytes\"] >= 1, \"Warning\",\r\n                  [\"Available GBytes\"] < 1, \"Critical\", \"Unknown\"\r\n)\r\n| project Status, Computer, [\"Available GBytes\"], Trend\r\n| sort by [\"Available GBytes\"] asc",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Thresholds (Warning < 4 GB; Critical < 1 GB) - All Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Status",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Critical",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "Unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "Available GBytes",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 5,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 21,
                                    "formatOptions": {
                                        "palette": "green"
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "palette": "blue"
                                    },
                                    "numberFormat": {
                                        "unit": 5,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                }
                            ],
                            "labelSettings": [
                                {
                                    "columnId": "Available GBytes",
                                    "label": "Average"
                                }
                            ]
                        },
                        "sortBy": []
                    },
                    "customWidth": "50",
                    "name": "query - 9 - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopComputers = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\"  or CounterName == \"% Used Memory\")\r\n| summarize PctCommittedBytes = round(avg(CounterValue),2) by Computer\r\n| top 10 by PctCommittedBytes desc\r\n| project Computer; \r\nPerf \r\n| where Computer in (TopComputers) \r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\"  or CounterName == \"% Used Memory\")\r\n| summarize PctCommittedBytes = round(avg(CounterValue),2) by Computer, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart",
                        "size": 0,
                        "aggregation": 3,
                        "showAnalytics": true,
                        "title": "% Committed Bytes In Use - Top 10 Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "chartSettings": {
                            "group": "Computer",
                            "createOtherGroup": 0,
                            "showLegend": true,
                            "ySettings": {
                                "unit": 1,
                                "min": 0,
                                "max": 100
                            }
                        }
                    },
                    "customWidth": "50",
                    "name": "query - 9",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\" or CounterName==\"% Used Memory\")\r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan('00:30:00') by Computer     \r\n| project Computer, ['Trend'] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\" or CounterName==\"% Used Memory\") \r\n| summarize Average=round(avg(CounterValue),3) by Computer\r\n| join (trend) on Computer\r\n| extend Status = case (\r\n                  Average > 90, \"Critical\",\r\n                  Average > 60, \"Warning\",\r\n                  Average <= 60, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project Status, Computer, Average, Trend\r\n| sort by Average ",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Thresholds (Warning>60; Critical>90) - All Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Status",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Critical",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "greenRed"
                                    },
                                    "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 21,
                                    "formatOptions": {
                                        "palette": "green"
                                    }
                                }
                            ],
                            "sortBy": [
                                {
                                    "itemKey": "$gen_heatmap_Average_2",
                                    "sortOrder": 2
                                }
                            ]
                        },
                        "sortBy": [
                            {
                                "itemKey": "$gen_heatmap_Average_2",
                                "sortOrder": 2
                            }
                        ]
                    },
                    "customWidth": "50",
                    "name": "query - 9 - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 1,
                    "content": {
                        "json": "## Logical Disk: _Free Megabytes_ and _Avg read/write per sec_ "
                    },
                    "name": "text - 12"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopDiscos = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize FreeSpace = round(avg(CounterValue),2) by Disco\r\n| top 10 by FreeSpace asc\r\n| project Disco; \r\nPerf \r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer)\r\n| where Disco in (TopDiscos) \r\n| summarize FreeSpace = round(avg(CounterValue),2) by Disco, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n\r\n\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "showAnalytics": true,
                        "title": "Free Megabytes - Top 10 Computers-Volumes",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "timechart",
                        "chartSettings": {
                            "showLegend": true,
                            "ySettings": {
                                "numberFormatSettings": {
                                    "unit": 4,
                                    "options": {
                                        "style": "decimal",
                                        "useGrouping": true
                                    }
                                }
                            }
                        }
                    },
                    "customWidth": "50",
                    "name": "query - 6",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan('00:30:00') by Disco     \r\n| project Disco, ['Trend'] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize Average=round(avg(CounterValue),2) by Disco,Computer,InstanceName\r\n| join (trend) on Disco\r\n| extend Status = case (\r\n                  Average <5000, \"Critical\",\r\n                  Average < 30000, \"Warning\",\r\n                  Average >= 30000, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project Status, Computer,Disk=InstanceName, Average, Trend\r\n| sort by Average asc ",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Thresholds (Warning < 30GB; Critical < 5GB) - All Computers-Volumes",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Status",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Critical",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 0,
                                    "numberFormat": {
                                        "unit": 4,
                                        "options": {
                                            "style": "decimal",
                                            "useGrouping": false,
                                            "minimumFractionDigits": 2,
                                            "maximumFractionDigits": 2
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 21,
                                    "formatOptions": {
                                        "palette": "green"
                                    }
                                }
                            ]
                        },
                        "sortBy": []
                    },
                    "customWidth": "50",
                    "name": "query - 9 - Copy - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopDiscos = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Reads/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or ( InstanceName == \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGReads = avg(CounterValue) by Disco\r\n| top 10 by AVGReads desc\r\n| project Disco; \r\nPerf \r\n| where CounterName == \"Disk Reads/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or ( InstanceName == \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| where Disco in (TopDiscos) \r\n| summarize AVGReads = avg(CounterValue) by Disco, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart\r\n\r\n\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "showAnalytics": true,
                        "title": "Disk Reads/sec - Top 10 Computers-Volumes",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "timechart",
                        "chartSettings": {
                            "group": "Disco",
                            "createOtherGroup": 22,
                            "showLegend": true
                        }
                    },
                    "customWidth": "50",
                    "name": "query - 6 - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\") and CounterName == \"Disk Reads/sec\" and ((strlen(InstanceName) == 2 and InstanceName contains \":\") or (InstanceName == \"/\"))\r\n| extend Disco = strcat(InstanceName, \" - \",Computer)\r\n| make-series AVGReads = round(avg(CounterValue),2) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan('00:30:00') by Disco     \r\n| project Disco, ['Trend'] = AVGReads; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\") and CounterName == \"Disk Reads/sec\" and ((strlen(InstanceName) == 2 and InstanceName contains \":\") or (InstanceName == \"/\"))\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGReads=round(avg(CounterValue),2) by Disco,Computer,InstanceName\r\n| join (trend) on Disco\r\n| extend Status = case (\r\n                  AVGReads > 25, \"Critical\",\r\n                  AVGReads > 15, \"Warning\",\r\n                  AVGReads <= 15, \"Healthy\", \"Unknown\"\r\n)\r\n| project  Status, Computer,Disk=InstanceName, [\"Reads\"]=AVGReads, Trend\r\n| sort by [\"Reads\"] desc ",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Thresholds (Warning > 15Reads/sec; Critical > 25Reads/sec) - All Computers-Volumes",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Status",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Critical",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 21,
                                    "formatOptions": {
                                        "palette": "green"
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "blue"
                                    }
                                }
                            ],
                            "sortBy": [
                                {
                                    "itemKey": "Reads",
                                    "sortOrder": 2
                                }
                            ],
                            "labelSettings": [
                                {
                                    "columnId": "Reads",
                                    "label": "Average"
                                }
                            ]
                        },
                        "sortBy": [
                            {
                                "itemKey": "Reads",
                                "sortOrder": 2
                            }
                        ]
                    },
                    "customWidth": "50",
                    "name": "query - 9 - Copy - Copy - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopDiscos= Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGWrites = avg(CounterValue) by Disco\r\n| top 10 by AVGWrites desc\r\n| project Disco; \r\nPerf \r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| where Disco in (TopDiscos) \r\n| summarize AVGWrites = avg(CounterValue) by Disco, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart\r\n\r\n\r\n",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Disk Writes/sec - Top 10 Computers-Volumes",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "timechart",
                        "chartSettings": {
                            "group": "Disco",
                            "createOtherGroup": 22,
                            "showLegend": true
                        }
                    },
                    "customWidth": "50",
                    "name": "query - 6 - Copy - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\"  or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| make-series AVGWrites = round(avg(CounterValue),2) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan('00:30:00') by Disco     \r\n| project Disco, ['Trend'] = AVGWrites; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGWrites=round(avg(CounterValue),2) by Disco,Computer,InstanceName\r\n| join (trend) on Disco\r\n| extend Status = case (\r\n                  AVGWrites > 25, \"Critical\",\r\n                  AVGWrites > 15, \"Warning\",\r\n                  AVGWrites <= 15, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project  Status, Computer,Disk=InstanceName, [\"Writes\"]=AVGWrites, Trend\r\n| sort by [\"Writes\"] desc ",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Thresholds (Warning > 15Writes/sec; Critical > 25Writes/sec) - All Computers-Volumes",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Status",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Critical",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 21,
                                    "formatOptions": {
                                        "palette": "green"
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "blue"
                                    }
                                }
                            ],
                            "sortBy": [
                                {
                                    "itemKey": "Writes",
                                    "sortOrder": 2
                                }
                            ],
                            "labelSettings": [
                                {
                                    "columnId": "Writes",
                                    "label": "Average"
                                }
                            ]
                        },
                        "sortBy": [
                            {
                                "itemKey": "Writes",
                                "sortOrder": 2
                            }
                        ]
                    },
                    "customWidth": "50",
                    "name": "query - 9 - Copy - Copy - Copy - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopDiscos = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Current Disk Queue Length\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGQueue = avg(CounterValue) by Disco\r\n| top 10 by AVGQueue desc\r\n| project Disco; \r\nPerf \r\n| where CounterName == \"Current Disk Queue Length\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| where Disco in (TopDiscos) \r\n| summarize AVGQueue = avg(CounterValue) by Disco, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart\r\n\r\n\r\n",
                        "size": 0,
                        "aggregation": 3,
                        "showAnalytics": true,
                        "title": "Current Disk Queue Length - Top 10 Computers-Volumes",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "visualization": "timechart",
                        "chartSettings": {
                            "group": "Disco",
                            "createOtherGroup": 22,
                            "showLegend": true
                        }
                    },
                    "customWidth": "50",
                    "name": "query - 6 - Copy - Copy - Copy",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Current Disk Queue Length\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| make-series AVGQueue = round(avg(CounterValue),2) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan('00:30:00') by Disco     \r\n| project Disco, ['Trend'] = AVGQueue; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGQueue=round(avg(CounterValue),2) by Disco,Computer,InstanceName\r\n| join (trend) on Disco\r\n| extend Status = case (\r\n                  AVGQueue > 4, \"Critical\",\r\n                  AVGQueue > 1, \"Warning\",\r\n                  AVGQueue <= 1, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project  Status, Computer, Disk=InstanceName, [\"Queue\"]=AVGQueue, Trend\r\n| sort by [\"Queue\"] desc ",
                        "size": 0,
                        "showAnalytics": true,
                        "title": "Thresholds (Warning > 1; Critical > 4) - All Computers-Volumes",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "{Workspace}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Status",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Healthy",
                                                "representation": "success",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Warning",
                                                "representation": "2",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Critical",
                                                "representation": "critical",
                                                "text": "{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "unknown",
                                                "text": "{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "Trend",
                                    "formatter": 21,
                                    "formatOptions": {
                                        "palette": "green"
                                    }
                                },
                                {
                                    "columnMatch": "Average",
                                    "formatter": 8,
                                    "formatOptions": {
                                        "min": 0,
                                        "max": 100,
                                        "palette": "blue"
                                    }
                                }
                            ],
                            "labelSettings": [
                                {
                                    "columnId": "Queue",
                                    "label": "Average"
                                }
                            ]
                        },
                        "sortBy": []
                    },
                    "customWidth": "50",
                    "name": "query - CDQL",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 1,
                    "content": {
                        "json": "## %CPU Usage by Process (Windows)"
                    },
                    "customWidth": "50",
                    "name": "text - 21"
                },
                {
                    "type": 1,
                    "content": {
                        "json": "## Network Usage by Process (VMConnection)"
                    },
                    "customWidth": "50",
                    "name": "text - 25"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let WindowsComputer = Heartbeat\r\n    | where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n    | where OSType == \"Windows\"\r\n    | distinct Computer;\r\nlet TopComputers = Perf \r\n    | where Computer in (WindowsComputer)\r\n    | where ObjectName == 'Processor' and CounterName == '% Processor Time' and InstanceName == '_Total' \r\n    | summarize AggregatedValue = avg(CounterValue) by Computer \r\n    | top 5 by AggregatedValue desc\r\n    | project Computer; \r\nlet FindCPU = Perf\r\n| where Computer in (TopComputers)\r\n    | where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" \r\n    | where InstanceName != \"_Total\"\r\n    | summarize CPUs=dcount(InstanceName) by Computer;\r\nlet ProcessUsage = Perf\r\n| where Computer in (TopComputers)\r\n    | where ObjectName == \"Process\" and CounterName == \"% Processor Time\"\r\n    | where InstanceName != \"_Total\" and InstanceName != \"Idle\"\r\n    | extend Process = iff(InstanceName has \"#\",substring(InstanceName,0,indexof(InstanceName,\"#\",0)),InstanceName)\r\n    | extend newTimeGenerated = format_datetime(TimeGenerated, \"yyyy-MM-dd HH:mm:ss\")\r\n    | summarize TotalCPU = sum(CounterValue) by Computer, newTimeGenerated, Process\r\n    | summarize average = avg(TotalCPU) by Computer, Process;\r\nlet ProcessUsageByCPU = ProcessUsage \r\n| join kind= inner (\r\n    FindCPU\r\n) on Computer\r\n| project Computer, Process, AvgUsage = average/CPUs; \r\nProcessUsageByCPU\r\n| extend Name = strcat('🎫 ', Process)\r\n| project ParentId = Computer, Id = strcat(Process,\"-\",Computer), AvgUsage, Name\r\n| union (\r\nProcessUsageByCPU\r\n| summarize AvgUsage = sum(AvgUsage) by Id = Computer\r\n| extend ParentId = '', Name = strcat('💻 ', Id))\r\n| project Name, AvgUsage = round(AvgUsage, 2) , Id, ParentId\r\n| order by AvgUsage",
                        "size": 0,
                        "title": "%CPU Usage by Process (Windows) - Top 5 Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "AvgUsage",
                                    "formatter": 3,
                                    "formatOptions": {
                                        "palette": "blue",
                                        "customColumnWidthSetting": "617px"
                                    },
                                    "numberFormat": {
                                        "unit": 1,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Id",
                                    "formatter": 5
                                },
                                {
                                    "columnMatch": "ParentId",
                                    "formatter": 5
                                }
                            ],
                            "rowLimit": 500,
                            "hierarchySettings": {
                                "idColumn": "Id",
                                "parentColumn": "ParentId",
                                "treeType": 0,
                                "expanderColumn": "Name",
                                "expandTopLevel": true
                            }
                        }
                    },
                    "customWidth": "50",
                    "showPin": true,
                    "name": "query - 22",
                    "styleSettings": {
                        "showBorder": true
                    }
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "let TopComputers = VMConnection\r\n| summarize AggregatedValue = (sum(BytesSent)+sum(BytesReceived)) by Computer\r\n| top 5 by AggregatedValue desc\r\n| project Computer; \r\nVMConnection\r\n| where Computer in (TopComputers)\r\n| extend Name = strcat('🎫 ', iff(isnotempty(ProcessName), ProcessName, \"unknown\"))\r\n| summarize [\"Total Traffic\"] = (sum(BytesSent)+sum(BytesReceived))  by ParentId = Computer, Id = strcat(Name,\"-\", Computer), Name\r\n| union (\r\n        VMConnection\r\n        | where Computer in (TopComputers)\r\n        | where isnotempty(ProcessName)\r\n        | summarize [\"Total Traffic\"] = (sum(BytesSent)+sum(BytesReceived)) by Id = Computer\r\n        | extend ParentId = '', Name = strcat('💻 ', Id)\r\n    )\r\n    | project Name, [\"Total Traffic\"], Id, ParentId\r\n    | order by [\"Total Traffic\"]",
                        "size": 0,
                        "title": "Amount of Network Traffic by Process (VMConnection) - Top 5 Computers",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                            "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "Total",
                                    "formatter": 3,
                                    "formatOptions": {
                                        "palette": "blue",
                                        "customColumnWidthSetting": "617px"
                                    },
                                    "numberFormat": {
                                        "unit": 2,
                                        "options": {
                                            "style": "decimal"
                                        }
                                    }
                                },
                                {
                                    "columnMatch": "Id",
                                    "formatter": 5
                                },
                                {
                                    "columnMatch": "ParentId",
                                    "formatter": 5
                                }
                            ],
                            "rowLimit": 500,
                            "hierarchySettings": {
                                "idColumn": "Id",
                                "parentColumn": "ParentId",
                                "treeType": 0,
                                "expanderColumn": "Name",
                                "expandTopLevel": true
                            }
                        },
                        "sortBy": []
                    },
                    "customWidth": "50",
                    "name": "query - 26"
                }
            ],
            "isLocked": false,
            "fallbackResourceIds": [
                "azure monitor"
            ]
        },
        "alertsConsoleWorkbookContent": {
            "version": "Notebook/1.0",
            "items": [
                {
                    "type": 9,
                    "content": {
                        "version": "KqlParameterItem/1.0",
                        "crossComponentResources": [
                            "{Subscription}"
                        ],
                        "parameters": [
                            {
                                "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                                "version": "KqlParameterItem/1.0",
                                "name": "Subscription",
                                "label": "Subscriptions",
                                "type": 6,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "value": [
                                    "[subscription().id]"
                                ],
                                "typeSettings": {
                                    "additionalResourceOptions": [
                                        "value::all"
                                    ],
                                    "includeAll": false,
                                    "showDefault": false
                                }
                            },
                            {
                                "id": "b616a3a3-4271-4208-b1a9-a92a78efed08",
                                "version": "KqlParameterItem/1.0",
                                "name": "ResourceGroups",
                                "label": "Resource groups",
                                "type": 2,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "Resources\r\n| summarize by resourceGroup\r\n| order by resourceGroup asc\r\n| project id=resourceGroup, resourceGroup",
                                "crossComponentResources": [
                                    "{Subscription}"
                                ],
                                "value": [
                                    "value::all"
                                ],
                                "typeSettings": {
                                    "additionalResourceOptions": [
                                        "value::all"
                                    ],
                                    "selectAllValue": "*"
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                            },
                            {
                                "id": "0e85e0e4-a7e8-4ea8-b291-e444c317843a",
                                "version": "KqlParameterItem/1.0",
                                "name": "ResourceTypes",
                                "label": "Resource types",
                                "type": 7,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "where \"*\" in ({ResourceGroups}) or resourceGroup in ({ResourceGroups})\r\n| summarize by type\r\n| project type, label=type\r\n",
                                "crossComponentResources": [
                                    "{Subscription}"
                                ],
                                "value": [
                                    "value::all"
                                ],
                                "typeSettings": {
                                    "additionalResourceOptions": [
                                        "value::all"
                                    ],
                                    "selectAllValue": "*"
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                            },
                            {
                                "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
                                "version": "KqlParameterItem/1.0",
                                "name": "Resources",
                                "type": 5,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "Resources\r\n| where \"*\" in ({ResourceTypes}) or type in~({ResourceTypes})\r\n| where '*' in~({ResourceGroups}) or resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = name, selected = Rank <= 10, group = resourceGroup",
                                "crossComponentResources": [
                                    "{Subscription}"
                                ],
                                "value": [
                                    "value::all"
                                ],
                                "typeSettings": {
                                    "additionalResourceOptions": [
                                        "value::all"
                                    ],
                                    "selectAllValue": "*",
                                    "defaultItemsText": "First 10"
                                },
                                "queryType": 1,
                                "resourceType": "microsoft.resourcegraph/resources"
                            },
                            {
                                "id": "015d1a5e-357f-4e01-ac77-598e7b493db0",
                                "version": "KqlParameterItem/1.0",
                                "name": "timeRange",
                                "label": "Time Range",
                                "type": 4,
                                "isRequired": true,
                                "value": {
                                    "durationMs": 2592000000
                                },
                                "typeSettings": {
                                    "selectableValues": [
                                        {
                                            "durationMs": 300000
                                        },
                                        {
                                            "durationMs": 900000
                                        },
                                        {
                                            "durationMs": 1800000
                                        },
                                        {
                                            "durationMs": 3600000
                                        },
                                        {
                                            "durationMs": 14400000
                                        },
                                        {
                                            "durationMs": 43200000
                                        },
                                        {
                                            "durationMs": 86400000
                                        },
                                        {
                                            "durationMs": 172800000
                                        },
                                        {
                                            "durationMs": 259200000
                                        },
                                        {
                                            "durationMs": 604800000
                                        },
                                        {
                                            "durationMs": 1209600000
                                        },
                                        {
                                            "durationMs": 2419200000
                                        },
                                        {
                                            "durationMs": 2592000000
                                        }
                                    ],
                                    "allowCustom": true
                                }
                            },
                            {
                                "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                                "version": "KqlParameterItem/1.0",
                                "name": "State",
                                "type": 2,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                                "crossComponentResources": [
                                    "{Subscription}"
                                ],
                                "value": [
                                    "value::all"
                                ],
                                "typeSettings": {
                                    "additionalResourceOptions": [
                                        "value::all"
                                    ],
                                    "selectAllValue": "*",
                                    "showDefault": false
                                },
                                "queryType": 8
                            }
                        ],
                        "style": "above",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                    },
                    "name": "parameters"
                },
                {
                    "type": 3,
                    "content": {
                        "version": "KqlItem/1.0",
                        "query": "AlertsManagementResources \r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where properties.essentials.startDateTime {timeRange}  \r\n| where properties.essentials.actionStatus.isSuppressed == false\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend comp = properties.context.context.condition.allOf[0].dimensions\r\n| mvexpand comp\r\n| where comp.name == 'Computer'\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Name=name, Severity, State=tostring(properties.essentials.alertState), MonitorCondition=tostring(properties.essentials.monitorCondition), SignalType=tostring(properties.essentials.signalType), TargetResource = split(comp.value, '.')[0]\r\n| order by StartTime desc\r\n",
                        "size": 0,
                        "title": "Azure Monitor alerts",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                            "{Subscription}"
                        ],
                        "gridSettings": {
                            "formatters": [
                                {
                                    "columnMatch": "AlertId",
                                    "formatter": 5
                                },
                                {
                                    "columnMatch": "StartTime",
                                    "formatter": 6
                                },
                                {
                                    "columnMatch": "Name",
                                    "formatter": 1,
                                    "formatOptions": {
                                        "linkTarget": "OpenBlade",
                                        "linkIsContextBlade": true,
                                        "bladeOpenContext": {
                                            "bladeName": "AlertDetailsTemplateBlade",
                                            "extensionName": "Microsoft_Azure_Monitoring",
                                            "bladeParameters": [
                                                {
                                                    "name": "alertId",
                                                    "source": "column",
                                                    "value": "AlertId"
                                                },
                                                {
                                                    "name": "alertName",
                                                    "source": "column",
                                                    "value": "Name"
                                                },
                                                {
                                                    "name": "invokedFrom",
                                                    "source": "static",
                                                    "value": "Workbooks"
                                                }
                                            ]
                                        }
                                    },
                                    "tooltipFormat": {
                                        "tooltip": "View alert details"
                                    }
                                },
                                {
                                    "columnMatch": "Severity",
                                    "formatter": 11
                                },
                                {
                                    "columnMatch": "State",
                                    "formatter": 1
                                },
                                {
                                    "columnMatch": "MonitorCondition",
                                    "formatter": 18,
                                    "formatOptions": {
                                        "thresholdsOptions": "icons",
                                        "thresholdsGrid": [
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Fired",
                                                "representation": "Fired",
                                                "text": "{0}{1}"
                                            },
                                            {
                                                "operator": "==",
                                                "thresholdValue": "Resolved",
                                                "representation": "Resolved",
                                                "text": "{0}{1}"
                                            },
                                            {
                                                "operator": "Default",
                                                "thresholdValue": null,
                                                "representation": "success",
                                                "text": "{0}{1}"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "columnMatch": "TargetResource",
                                    "formatter": 13,
                                    "formatOptions": {
                                        "linkTarget": null,
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "ResourceType",
                                    "formatter": 16,
                                    "formatOptions": {
                                        "showIcon": true
                                    }
                                },
                                {
                                    "columnMatch": "Resource Type",
                                    "formatter": 11
                                },
                                {
                                    "columnMatch": "essentials",
                                    "formatter": 5
                                }
                            ]
                        }
                    },
                    "showPin": true,
                    "name": "query - 3"
                }
            ],
            "isLocked": false,
            "fallbackResourceIds": [
                "azure monitor"
            ]
        }
    },
    "resources": [
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "Name": "pergb2018"
                },
                "retentionInDays": "[parameters('dataRetention')]",
                "features": {
                    "searchVersion": 1,
                    "legacy": 0
                }
            },
            "resources": []
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsEventsSystem')]",
            "kind": "WindowsEvent",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "eventLogName": "System",
                "eventTypes": [
                    {
                        "eventType": "Error"
                    },
                    {
                        "eventType": "Warning"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsEventsApplication')]",
            "kind": "WindowsEvent",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "eventLogName": "Application",
                "eventTypes": [
                    {
                        "eventType": "Error"
                    },
                    {
                        "eventType": "Warning"
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfProcessorPercentage')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Processor",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "% Processor Time"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfProcessPercentage')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Process",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "% Processor Time"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogicDiskFreeSpace')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "% Free Space"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogicDiskAvgDiskSecRead')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Avg. Disk sec/Read"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogicDiskAvgDiskSecWrite')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Avg. Disk sec/Write"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogicDiskCurrentDiskQueueLength')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Current Disk Queue Length"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogicDiskDiskReadsSec')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Disk Reads/sec"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogicDiskTransfersSec')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Disk Transfers/sec"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogicDiskWritesSec')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Disk Writes/sec"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfLogiDiskFreeMegabytes')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "LogicalDisk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Free Megabytes"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfMemoryCommittedBytesInUse')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "% Committed Bytes In Use"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfMemoryAvailableMBytes')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Available MBytes"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfMemoryPagesSec')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Pages/sec"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfNetworkAdapterBytesReceivedSec')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Network Adapter",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Bytes Received/sec"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfNetworkAdapterBytesSentSec')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Network Adapter",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Bytes Sent/sec"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfNetworkAdapterBytesTotatSec')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Network Adapter",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Bytes Total/sec"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'WindowsPerfSystemProcessorQueueLength')]",
            "kind": "WindowsPerformanceCounter",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "System",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "counterName": "Processor Queue Length"
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'LinuxPerformanceLogicalDisk')]",
            "kind": "LinuxPerformanceObject",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Logical Disk",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "performanceCounters": [
                    {
                        "counterName": "% Used Inodes"
                    },
                    {
                        "counterName": "Free Megabytes"
                    },
                    {
                        "counterName": "% Used Space"
                    },
                    {
                        "counterName": "Disk Transfers/sec"
                    },
                    {
                        "counterName": "Disk Reads/sec"
                    },
                    {
                        "counterName": "Disk Writes/sec"
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'LinuxPerformanceMemory')]",
            "kind": "LinuxPerformanceObject",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Memory",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "performanceCounters": [
                    {
                        "counterName": "% Used Memory"
                    },
                    {
                        "counterName": "% Used Swap Space"
                    },
                    {
                        "counterName": "Available MBytes Memory"
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'LinuxPerformanceNetwork')]",
            "kind": "LinuxPerformanceObject",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Network",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "performanceCounters": [
                    {
                        "counterName": "Total Bytes Received"
                    },
                    {
                        "counterName": "Total Bytes Transmitted"
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-08-01",
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "name": "[concat(parameters('workspaceName'), '/', 'LinuxPerformanceProcessor')]",
            "kind": "LinuxPerformanceObject",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "objectName": "Processor",
                "instanceName": "*",
                "intervalSeconds": "[variables('intervalSeconds')]",
                "performanceCounters": [
                    {
                        "counterName": "% Privileged Time"
                    },
                    {
                        "counterName": "% Processor Time"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaceName'), '/', 'SyslogKern')]",
            "kind": "LinuxSyslog",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "syslogName": "kern",
                "syslogSeverities": [
                    {
                        "severity": "emerg"
                    },
                    {
                        "severity": "alert"
                    },
                    {
                        "severity": "crit"
                    },
                    {
                        "severity": "err"
                    },
                    {
                        "severity": "warning"
                    },
                    {
                        "severity": "notice"
                    },
                    {
                        "severity": "info"
                    },
                    {
                        "severity": "debug"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/datasources",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaceName'), '/', 'SyslogDaemon')]",
            "kind": "LinuxSyslog",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "syslogName": "daemon",
                "syslogSeverities": [
                    {
                        "severity": "emerg"
                    },
                    {
                        "severity": "alert"
                    },
                    {
                        "severity": "crit"
                    },
                    {
                        "severity": "err"
                    },
                    {
                        "severity": "warning"
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-11-01-preview",
            "type": "Microsoft.OperationsManagement/solutions",
            "location": "[parameters('location')]",
            "name": "[concat('VMInsights', '(', split(variables('workspaceResourceId'),'/')[8], ')')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "workspaceResourceId": "[variables('workspaceResourceId')]"
            },
            "plan": {
                "name": "[concat('VMInsights', '(', split(variables('workspaceResourceId'),'/')[8], ')')]",
                "product": "[concat('OMSGallery/', 'VMInsights')]",
                "promotionCode": "",
                "publisher": "Microsoft"
            }
        },
        {
            "type": "Microsoft.Insights/actionGroups",
            "apiVersion": "2018-03-01",
            "name": "[variables('actionGroupName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "agarcservers",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "ArcServersEmail",
                        "emailAddress": "[parameters('emailAddress')]",
                        "useCommonAlertSchema": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "Processor Time Percent",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "Processor Time Percent",
                "description": "Monitor Alert for Processor Time Percent",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_% Processor Time",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Processor"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Processor Time Percent",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','Processor Time Percent')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for Processor Time Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "80",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_% Processor Time",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Processor"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "Memory Available MBytes",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "Memory Available MBytes",
                "description": "Monitor alert for Memory Available MBytes",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_Available MBytes",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Memory"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Memory Available MBytes",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','Memory Available MBytes')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor alert for Memory Available MBytes",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "1500",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_Available MBytes",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Memory"
                                    ]
                                }
                            ],
                            "operator": "LessThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "Memory Commited Bytes in use Percent",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "Memory Commited Bytes in use Percent",
                "description": "Monitor Alert for Memory Commited Bytes in use Percent",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_% Committed Bytes In Use",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Memory"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Memory Commited Bytes in use Percent",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','Memory Commited Bytes in use Percent')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for Memory Commited Bytes in use Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "80",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_% Committed Bytes In Use",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Memory"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "Memory Pages per Sec",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "Memory Pages per Sec",
                "description": "Monitor Alert for Memory Pages per Sec",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_Pages/sec",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Memory"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Memory Pages per Sec",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','Memory Pages per Sec')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for Memory Pages per Sec",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "5000",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_Pages/sec",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "Memory"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "LogicalDisk Avg. Disk sec per Read",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "LogicalDisk Avg. Disk sec per Read",
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Read",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_Avg. Disk sec/Read",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "LogicalDisk Avg. Disk sec per Read",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','LogicalDisk Avg. Disk sec per Read')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Read",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "0.04",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_Avg. Disk sec/Read",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "LogicalDisk Avg. Disk sec per Write",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "LogicalDisk Avg. Disk sec per Write",
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Write",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_Avg. Disk sec/Write",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "LogicalDisk Avg. Disk sec per Write",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','LogicalDisk Avg. Disk sec per Write')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Write",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "0.04",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_Avg. Disk sec/Write",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "LogicalDisk Current Queue Length",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "LogicalDisk Current Queue Length",
                "description": "Monitor Alert for LogicalDisk Current Queue Length",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_Current Disk Queue Length",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "LogicalDisk Current Queue Length",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','LogicalDisk Current Queue Length')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for LogicalDisk Current Queue Length",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "2",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_Current Disk Queue Length",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Total",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "LogicalDisk Free Space Percent",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "LogicalDisk Free Space Percent",
                "description": "Monitor Alert for LogicalDisk Free Space Percent",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_% Free Space",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "LogicalDisk Free Space Percent",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','LogicalDisk Free Space Percent')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for LogicalDisk Free Space Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "10",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_% Free Space",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ],
                            "operator": "LessThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "LogicalDisk Idle Time Percent",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "LogicalDisk Idle Time Percent",
                "description": "Monitor Alert for LogicalDisk Idle Time Percent",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Average_% Idle Time",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "LogicalDisk Idle Time Percent",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'LogicalDisk Idle Time Percent')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for LogicalDisk Idle Time Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "20",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Average_% Idle Time",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "ObjectName",
                                    "operator": "Include",
                                    "values": [
                                        "LogicalDisk"
                                    ]
                                }
                            ],
                            "operator": "LessThan",
                            "timeAggregation": "Average",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "apiVersion": "2021-02-01-preview",
            "name": "Heartbeat Missed",
            "location": "[parameters('location')]",
            "tags": {
                "[concat(variables('convertRuleTag'),resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName')))]": "Resource"
            },
            "kind": "LogToMetric",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "displayName": "Heartbeat Missed",
                "description": "Monitor Alert for Heartbeat Missed",
                "enabled": "true",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Heartbeat",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Heartbeat Missed",
            "location": "global",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules','Heartbeat Missed')]",
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "description": "Monitor Alert for Heartbeat Missed",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": "0",
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                            "metricName": "Heartbeat",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                }
                            ],
                            "operator": "LessThanOrEqual",
                            "timeAggregation": "Total",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2021-08-01",
            "name": "Unexpected System Shutdown",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
            ],
            "properties": {
                "displayName": "Unexpected System Shutdown",
                "description": "Monitor Alert for Unexpected System Shutdown",
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces',parameters('workspaceName'))]"
                ],
                "targetResourceTypes": [
                    "Microsoft.OperationalInsights/workspaces"
                ],
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                    "allOf": [
                        {
                            "query": "Event | where (EventID == 6008 and Source ==\"EventLog\") or (EventID == 1074 and Source == \"User32\" and (RenderedDescription has \"shutdown\" or RenderedDescription has \"power off\")) \n",
                            "timeAggregation": "Count",
                            "dimensions": [
                                {
                                    "name": "Computer",
                                    "operator": "Include",
                                    "values": [
                                        "*"
                                    ]
                                }
                            ],
                            "resourceIdColumn": "_ResourceId",
                            "operator": "GreaterThan",
                            "threshold": "0",
                            "failingPeriods": {
                                "numberOfEvaluationPeriods": "1",
                                "minFailingPeriodsToAlert": "1"
                            }
                        }
                    ]
                },
                "autoMitigate": false,
                "actions": {
                    "actionGroups": [
                        "[resourceId('microsoft.insights/actiongroups',variables('actionGroupName'))]"
                    ]
                }
            }
        },
        {
            "name": "[guid(variables('windowsEventsWorkbookName'))]",
            "type": "microsoft.insights/workbooks",
            "location": "[parameters('location')]",
            "apiVersion": "2021-03-08",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "kind": "shared",
            "properties": {
                "displayName": "[variables('windowsEventsWorkbookName')]",
                "serializedData": "[string(variables('windowsEventsWorkbookContent'))]",
                "version": "1.0",
                "sourceId": "azure monitor",
                "category": "workbook"
            }
        },
        {
            "name": "[guid(variables('osPerformanceWorkbookName'))]",
            "type": "microsoft.insights/workbooks",
            "location": "[parameters('location')]",
            "apiVersion": "2021-03-08",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "kind": "shared",
            "properties": {
                "displayName": "[variables('osPerformanceWorkbookName')]",
                "serializedData": "[string(variables('osPerformanceWorkbookContent'))]",
                "version": "1.0",
                "sourceId": "azure monitor",
                "category": "workbook"
            }
        },
        {
            "name": "[guid(variables('alertsConsoleWorkbookName'))]",
            "type": "microsoft.insights/workbooks",
            "location": "[parameters('location')]",
            "apiVersion": "2021-03-08",
            "dependsOn": [],
            "kind": "shared",
            "properties": {
                "displayName": "[variables('alertsConsoleWorkbookName')]",
                "serializedData": "[string(variables('alertsConsoleWorkbookContent'))]",
                "version": "1.0",
                "sourceId": "azure monitor",
                "category": "workbook"
            }
        },
        {
            "type": "Microsoft.Portal/dashboards",
            "apiVersion": "2015-08-01-preview",
            "name": "[guid(variables('azureDashboardName'))]",
            "location": "[parameters('location')]",
            "tags": {
                "hidden-title": "[variables('azureDashboardName')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "lenses": {
                    "0": {
                        "order": 0,
                        "parts": {
                            "0": {
                                "position": {
                                    "x": 0,
                                    "y": 0,
                                    "colSpan": 17,
                                    "rowSpan": 4
                                },
                                "metadata": {
                                    "inputs": [
                                        {
                                            "name": "ComponentId",
                                            "value": "azure monitor",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "TimeContext",
                                            "value": null,
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ResourceIds",
                                            "value": [
                                                "azure monitor"
                                            ],
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ConfigurationId",
                                            "value": "[resourceId('Microsoft.Insights/workbooks/', guid(variables('osPerformanceWorkbookName')))]",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "Type",
                                            "value": "workbook",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "GalleryResourceType",
                                            "value": "azure monitor",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "PinName",
                                            "value": "[variables('osPerformanceWorkbookName')]",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "StepSettings",
                                            "value": "{\"version\":\"KqlItem/1.0\",\"query\":\"let trend = ( Heartbeat\\r\\n    | make-series InternalTrend=iff(count() > 0, 1, 0) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 15m by Computer\\r\\n    | extend Trend=array_slice(InternalTrend, array_length(InternalTrend) - 30, array_length(InternalTrend)-1)); \\r\\n\\r\\nlet PerfCPU = (Perf\\r\\n    | where ObjectName == \\\"Processor\\\" and CounterName == \\\"% Processor Time\\\" and InstanceName==\\\"_Total\\\"\\r\\n    | summarize AvgCPU=round(avg(CounterValue),2), MaxCPU=round(max(CounterValue),2) by Computer\\r\\n    | extend StatusCPU = case (\\r\\n                  AvgCPU > 80, 2,\\r\\n                  AvgCPU > 50, 1,\\r\\n                  AvgCPU <= 50, 0, -1\\r\\n                )\\r\\n    );\\r\\n\\r\\nlet PerfMemory = (Perf\\r\\n    | where ObjectName == \\\"Memory\\\" and (CounterName == \\\"Available MBytes\\\" or CounterName == \\\"Available MBytes Memory\\\")\\r\\n    | summarize AvgMEM=round(avg(CounterValue/1024),2), MaxMEM=round(max(CounterValue/1024),2) by Computer\\r\\n    | extend StatusMEM = case (\\r\\n                  AvgMEM > 4, 0,\\r\\n                  AvgMEM >= 1, 1,\\r\\n                  AvgMEM < 1, 2, -1\\r\\n            )\\r\\n    );\\r\\n\\r\\nlet PerfDisk = (Perf\\r\\n    | where (ObjectName == \\\"LogicalDisk\\\" or ObjectName == \\\"Logical Disk\\\") and CounterName == \\\"Free Megabytes\\\" and (InstanceName =~ \\\"C:\\\" or InstanceName == \\\"/\\\")\\r\\n    | summarize AvgDisk=round(avg(CounterValue),2), (TimeGenerated,LastDisk)=arg_max(TimeGenerated,round(CounterValue,2)) by Computer\\r\\n    | extend StatusDisk = case (\\r\\n                  AvgDisk < 5000, 2,\\r\\n                  AvgDisk < 30000, 1,\\r\\n                  AvgDisk >= 30000, 0,-1\\r\\n)\\r\\n    | project Computer, AvgDisk , LastDisk ,StatusDisk\\r\\n    );\\r\\nPerfCPU\\r\\n| join (PerfMemory) on Computer\\r\\n| join (PerfDisk) on Computer\\r\\n| join (trend) on Computer\\r\\n| project Computer,StatusCPU, AvgCPU,MaxCPU,StatusMEM,AvgMEM,MaxMEM,StatusDisk,AvgDisk,LastDisk, Trend\\r\\n| sort by Computer \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top servers (data aggregated based on TimeRange)\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Computer\",\"exportParameterName\":\"Computer\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"StatusCPU\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"success\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"2\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"2\",\"representation\":\"4\",\"text\":\"{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Unknown\",\"text\":\"{1}\"}]}},{\"columnMatch\":\"AvgCPU\",\"formatter\":2,\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"MaxCPU\",\"formatter\":0,\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"StatusMEM\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"success\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"2\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"2\",\"representation\":\"critical\",\"text\":\"{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"unknown\",\"text\":\"{1}\"}]}},{\"columnMatch\":\"AvgMEM\",\"formatter\":0,\"numberFormat\":{\"unit\":5,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"MaxMEM\",\"formatter\":0,\"numberFormat\":{\"unit\":39,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},{\"columnMatch\":\"StatusDisk\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"success\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"2\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"2\",\"representation\":\"4\",\"text\":\"{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{1}\"}]}},{\"columnMatch\":\"AvgDisk\",\"formatter\":0,\"numberFormat\":{\"unit\":38,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},{\"columnMatch\":\"LastDisk\",\"formatter\":0,\"numberFormat\":{\"unit\":4,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Max\",\"formatter\":0,\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Average\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}},{\"columnMatch\":\"Min\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowOrangeRed\",\"aggregation\":\"Min\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}}],\"sortBy\":[{\"itemKey\":\"$gen_number_AvgCPU_2\",\"sortOrder\":2}],\"labelSettings\":[{\"columnId\":\"StatusCPU\",\"label\":\"CPU\"},{\"columnId\":\"AvgCPU\",\"label\":\"CPU (avg)\"},{\"columnId\":\"MaxCPU\",\"label\":\"CPU (max)\"},{\"columnId\":\"StatusMEM\",\"label\":\"Memory\"},{\"columnId\":\"AvgMEM\",\"label\":\"Memory (avg)\"},{\"columnId\":\"MaxMEM\",\"label\":\"Memory (max)\"},{\"columnId\":\"StatusDisk\",\"label\":\"Disk\"},{\"columnId\":\"AvgDisk\",\"label\":\"Disk (avg)\"},{\"columnId\":\"LastDisk\",\"label\":\"Disk (last)\"}]},\"sortBy\":[{\"itemKey\":\"$gen_number_AvgCPU_2\",\"sortOrder\":2}]}",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ParameterValues",
                                            "value": {
                                                "TimeRange": {
                                                    "type": 4,
                                                    "value": {
                                                        "durationMs": 86400000
                                                    },
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "Last 24 hours",
                                                    "displayName": "TimeRange",
                                                    "formattedValue": "Last 24 hours"
                                                },
                                                "Workspace": {
                                                    "type": 5,
                                                    "value": [
                                                        "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                                    ],
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                                                    "displayName": "Workspace",
                                                    "formattedValue": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                                },
                                                "ComputerFilter": {
                                                    "type": 1,
                                                    "value": "",
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "<unset>",
                                                    "displayName": "ComputerFilter",
                                                    "formattedValue": ""
                                                },
                                                "Counter": {
                                                    "type": 2,
                                                    "value": "{\"counter\":\"% Free Space\",\"object\":\"LogicalDisk\"}",
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "% Free Space",
                                                    "displayName": "Counter",
                                                    "formattedValue": "{\"counter\":\"% Free Space\",\"object\":\"LogicalDisk\"}"
                                                },
                                                "Order": {
                                                    "type": 2,
                                                    "value": "desc",
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "desc",
                                                    "displayName": "Order",
                                                    "formattedValue": "desc"
                                                }
                                            },
                                            "isOptional": true
                                        },
                                        {
                                            "name": "Location",
                                            "value": "[parameters('location')]",
                                            "isOptional": true
                                        }
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/PinnedNotebookQueryPart"
                                }
                            },
                            "1": {
                                "position": {
                                    "x": 0,
                                    "y": 4,
                                    "colSpan": 12,
                                    "rowSpan": 4
                                },
                                "metadata": {
                                    "inputs": [
                                        {
                                            "name": "ComponentId",
                                            "value": "Azure Monitor",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "TimeContext",
                                            "value": null,
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ResourceIds",
                                            "value": [
                                                "Azure Monitor"
                                            ],
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ConfigurationId",
                                            "value": "[resourceId('Microsoft.Insights/workbooks/', guid(variables('alertsConsoleWorkbookName')))]",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "Type",
                                            "value": "workbook",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "GalleryResourceType",
                                            "value": "Azure Monitor",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "PinName",
                                            "value": "[variables('alertsConsoleWorkbookName')]",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "StepSettings",
                                            "value": "{\"version\":\"KqlItem/1.0\",\"query\":\"AlertsManagementResources \\r\\n| where type =~ 'microsoft.alertsmanagement/alerts'\\r\\n| where properties.essentials.startDateTime {timeRange}  \\r\\n| where properties.essentials.actionStatus.isSuppressed == false\\r\\n| extend Severity=tostring(properties.essentials.severity)\\r\\n| extend State=tostring(properties.essentials.alertState)\\r\\n| extend comp = properties.context.context.condition.allOf[0].dimensions\\r\\n| mvexpand comp\\r\\n| where comp.name == 'Computer' or comp.name == 'TestConfigurationName' or isnull(comp)\\r\\n| where \\\"*\\\" in ({State}) or State in ({State})\\r\\n| where \\\"*\\\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\\r\\n| where \\\"*\\\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\\r\\n| where \\\"*\\\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\\r\\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Name=name, Severity, State=tostring(properties.essentials.alertState), MonitorCondition=tostring(properties.essentials.monitorCondition), SignalType=tostring(properties.essentials.signalType), TargetResource = split(comp.value, '.')[0]\\r\\n| order by StartTime desc\\r\\n\",\"size\":0,\"title\":\"Azure Monitor alerts\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertId\",\"formatter\":5},{\"columnMatch\":\"StartTime\",\"formatter\":6},{\"columnMatch\":\"Name\",\"formatter\":1,\"formatOptions\":{\"linkTarget\":\"OpenBlade\",\"linkIsContextBlade\":true,\"bladeOpenContext\":{\"bladeName\":\"AlertDetailsTemplateBlade\",\"extensionName\":\"Microsoft_Azure_Monitoring\",\"bladeParameters\":[{\"name\":\"alertId\",\"source\":\"column\",\"value\":\"AlertId\"},{\"name\":\"alertName\",\"source\":\"column\",\"value\":\"Name\"},{\"name\":\"invokedFrom\",\"source\":\"static\",\"value\":\"Workbooks\"}]}},\"tooltipFormat\":{\"tooltip\":\"View alert details\"}},{\"columnMatch\":\"Severity\",\"formatter\":11},{\"columnMatch\":\"State\",\"formatter\":1},{\"columnMatch\":\"MonitorCondition\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Fired\",\"representation\":\"Fired\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Resolved\",\"representation\":\"Resolved\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"TargetResource\",\"formatter\":13,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true}},{\"columnMatch\":\"ResourceType\",\"formatter\":16,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Resource Type\",\"formatter\":11},{\"columnMatch\":\"essentials\",\"formatter\":5}]}}",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ParameterValues",
                                            "value": {
                                                "Subscription": {
                                                    "type": 6,
                                                    "value": [
                                                        "[subscription().id]"
                                                    ],
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "[subscription().displayName]",
                                                    "displayName": "Subscriptions",
                                                    "formattedValue": "[concat(variables('singlequote'), subscription().id, variables('singlequote'))]"
                                                },
                                                "ResourceGroups": {
                                                    "type": 2,
                                                    "value": [
                                                        "[resourceGroup().name]"
                                                    ],
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "[resourceGroup().name]",
                                                    "displayName": "Resource groups",
                                                    "formattedValue": "[concat(variables('singlequote'), resourceGroup().name, variables('singlequote'))]"
                                                },
                                                "ResourceTypes": {
                                                    "type": 7,
                                                    "value": [
                                                        "*"
                                                    ],
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "All",
                                                    "displayName": "Resource types",
                                                    "specialValue": [
                                                        "value::all"
                                                    ],
                                                    "formattedValue": "'*'"
                                                },
                                                "Resources": {
                                                    "type": 5,
                                                    "value": [
                                                        "*"
                                                    ],
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "All",
                                                    "displayName": "Resources",
                                                    "specialValue": [
                                                        "value::all"
                                                    ],
                                                    "formattedValue": "'*'"
                                                },
                                                "timeRange": {
                                                    "type": 4,
                                                    "value": {
                                                        "durationMs": 2592000000
                                                    },
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "Last 30 days",
                                                    "displayName": "Time Range",
                                                    "formattedValue": "Last 30 days"
                                                },
                                                "State": {
                                                    "type": 2,
                                                    "value": [
                                                        "*"
                                                    ],
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "All",
                                                    "displayName": "State",
                                                    "specialValue": [
                                                        "value::all"
                                                    ],
                                                    "formattedValue": "'*'"
                                                }
                                            },
                                            "isOptional": true
                                        },
                                        {
                                            "name": "Location",
                                            "value": "[parameters('location')]",
                                            "isOptional": true
                                        }
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/PinnedNotebookQueryPart"
                                }
                            },
                            "2": {
                                "position": {
                                    "x": 12,
                                    "y": 4,
                                    "colSpan": 5,
                                    "rowSpan": 4
                                },
                                "metadata": {
                                    "inputs": [
                                        {
                                            "name": "ComponentId",
                                            "value": "Azure Monitor",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "TimeContext",
                                            "value": null,
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ResourceIds",
                                            "value": [
                                                "Azure Monitor"
                                            ],
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ConfigurationId",
                                            "value": "[resourceId('Microsoft.Insights/workbooks/', guid(variables('windowsEventsWorkbookName')))]",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "Type",
                                            "value": "workbook",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "GalleryResourceType",
                                            "value": "Azure Monitor",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "PinName",
                                            "value": "[variables('windowsEventsWorkbookName')]",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "StepSettings",
                                            "value": "{\"version\":\"KqlItem/1.0\",\"query\":\"Event\\r\\n|  where EventLog in (\\\"System\\\",\\\"Application\\\",\\\"Operations Manager\\\")\\r\\n| project EventLog,EventLevelName\\r\\n| evaluate pivot(EventLevelName)\",\"size\":1,\"showAnalytics\":true,\"title\":\"Windows Events - Summary\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EventLog\",\"exportParameterName\":\"EventLog\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Information\",\"formatter\":18,\"formatOptions\":{\"showIcon\":true,\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"info\",\"text\":\"{0}{1}\"}],\"aggregation\":\"Unique\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Warning\",\"formatter\":18,\"formatOptions\":{\"showIcon\":true,\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"warning\",\"text\":\"{0}{1}\"}],\"aggregation\":\"Unique\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Error\",\"formatter\":18,\"formatOptions\":{\"showIcon\":true,\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"3\",\"text\":\"{0}{1}\"}],\"aggregation\":\"Unique\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}}]}}",
                                            "isOptional": true
                                        },
                                        {
                                            "name": "ParameterValues",
                                            "value": {
                                                "TimeRange": {
                                                    "type": 4,
                                                    "value": {
                                                        "durationMs": 604800000
                                                    },
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "Last 7 days",
                                                    "displayName": "TimeRange",
                                                    "formattedValue": "Last 7 days"
                                                },
                                                "Workspace": {
                                                    "type": 5,
                                                    "value": [
                                                        "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                                    ],
                                                    "isPending": false,
                                                    "isWaiting": false,
                                                    "isFailed": false,
                                                    "isGlobal": false,
                                                    "labelValue": "[parameters('workspaceName')]",
                                                    "displayName": "Workspace",
                                                    "formattedValue": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                                                }
                                            },
                                            "isOptional": true
                                        },
                                        {
                                            "name": "Location",
                                            "value": "[parameters('location')]",
                                            "isOptional": true
                                        }
                                    ],
                                    "type": "Extension/AppInsightsExtension/PartType/PinnedNotebookQueryPart"
                                }
                            }
                        }
                    }
                },
                "metadata": {
                    "model": {
                        "timeRange": {
                            "value": {
                                "relative": {
                                    "duration": 24,
                                    "timeUnit": 1
                                }
                            },
                            "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
                        },
                        "filterLocale": {
                            "value": "en-us"
                        },
                        "filters": {
                            "value": {
                                "MsPortalFx_TimeRange": {
                                    "model": {
                                        "format": "utc",
                                        "granularity": "auto",
                                        "relative": "24h"
                                    },
                                    "displayCache": {
                                        "name": "UTC Time",
                                        "value": "Past 24 hours"
                                    },
                                    "filteredPartIds": [
                                        "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c6028516",
                                        "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c6028518",
                                        "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c602851a",
                                        "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c602851c"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2021-06-01",
            "name": "[variables('mmaWindowsPolicyAssignmentName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "policyDefinitionId": "[variables('mmaWindowsPolicyDefinitionID')]",
                "notScopes": [],
                "description": "",
                "displayName": "[variables('mmaWindowsPolicyAssignmentDisplayName')]",
                "enforcementMode": "Default",
                "metadata": {},
                "nonComplianceMessages": [],
                "parameters": {
                    "logAnalytics": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(concat(variables('mmaWindowsPolicyAssignmentName'),resourceGroup().id))]",
            "properties": {
                "roleDefinitionId": "[variables('LogAnalyticsContributor')]",
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('mmaWindowsPolicyAssignmentName')),'2019-09-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', variables('mmaWindowsPolicyAssignmentName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2021-06-01",
            "name": "[variables('mmaLinuxPolicyAssignmentName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "policyDefinitionId": "[variables('mmaLinuxPolicyDefinitionID')]",
                "notScopes": [],
                "description": "",
                "displayName": "[variables('mmaLinuxPolicyAssignmentDisplayName')]",
                "enforcementMode": "Default",
                "metadata": {},
                "nonComplianceMessages": [],
                "parameters": {
                    "logAnalytics": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(concat(variables('mmaLinuxPolicyAssignmentName'),resourceGroup().id))]",
            "properties": {
                "roleDefinitionId": "[variables('LogAnalyticsContributor')]",
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('mmaLinuxPolicyAssignmentName')),'2019-09-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', variables('mmaLinuxPolicyAssignmentName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2021-06-01",
            "name": "[variables('depAgentWindowsPolicyAssignmentName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "policyDefinitionId": "[variables('depAgentWindowsPolicyDefinitionID')]",
                "notScopes": [],
                "description": "",
                "displayName": "[variables('depAgentWindowsPolicyAssignmentDisplayName')]",
                "enforcementMode": "Default",
                "metadata": {},
                "nonComplianceMessages": [],
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(concat(variables('depAgentWindowsPolicyAssignmentName'), resourceGroup().id, variables('LogAnalyticsContributor')))]",
            "properties": {
                "roleDefinitionId": "[variables('LogAnalyticsContributor')]",
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('depAgentWindowsPolicyAssignmentName')),'2019-09-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', variables('depAgentWindowsPolicyAssignmentName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2021-06-01",
            "name": "[variables('depAgentLinuxPolicyAssignmentName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "policyDefinitionId": "[variables('depAgentLinuxPolicyDefinitionID')]",
                "notScopes": [],
                "description": "",
                "displayName": "[variables('depAgentLinuxPolicyAssignmentDisplayName')]",
                "enforcementMode": "Default",
                "metadata": {},
                "nonComplianceMessages": [],
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(concat(variables('depAgentLinuxPolicyAssignmentName'), resourceGroup().id ,variables('LogAnalyticsContributor')))]",
            "properties": {
                "roleDefinitionId": "[variables('LogAnalyticsContributor')]",
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('depAgentLinuxPolicyAssignmentName')),'2019-09-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', variables('depAgentLinuxPolicyAssignmentName'))]"
            ]
        }
    ]
}