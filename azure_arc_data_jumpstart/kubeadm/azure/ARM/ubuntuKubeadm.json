{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "Arc-Data-Kubeadm-MGMT",
            "metadata": {
                "description": "The name of you Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "arcdemo",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "sshRSAPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key for the Virtual Machine. SSH key is recommended over password."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "20_04-lts-gen2",
            "allowedValues": [
                "20_04-lts-gen2"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version"
            }
        },
        "azureLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v4",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "Arc-Data-VNet",
            "metadata": {
                "description": "Name of the VNet"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Arc-Data-Kubeadm-Subnet",
            "metadata": {
                "description": "Name of the subnet in the virtual network"
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "Arc-Data-Kubeadm-MGMT-NSG",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "Project": "jumpstart_azure_arc_data_services"
            }
        },
        "spnClientId": {
            "type": "string",
            "metadata": {
                "description": "Azure service principal client id"
            }
        },
        "spnClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Azure service principal client secret"
            }
        },
        "spnTenantId": {
            "type": "string",
            "metadata": {
                "description": "Azure AD tenant id for your service principal"
            }
        },
        "stagingStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name for the staging storage account using to hold kubeconfig. This value is passed into the template as an output from mgmtStagingStorage.json"
            }
        },
        "templateBaseUrl": {
            "type": "string",
            "metadata": {
                "description": "Base URL for ARM template"
            }
        },
        "bastionSubnetPrefix": {
            "type": "string",
            "metadata": {
                "description": "bastion Subnet Prefix"
            }
        },
        "hostname": {
            "type": "string",
            "metadata": {
                "description": "hostname used by the Kubeadm Cluster Endpoint"
            }
        },
        "deployBastion": {
            "type": "bool",
            "metadata": {
                "description": "Choice to deploy Bastion to connect to the client VM"
            },
            "defaultValue": false
        }
    },
    "variables": {
        "vmName": "[concat(parameters('vmName'), '-Master' )]",
        "vmNameWorker": "[concat(parameters('vmName'), '-Worker' )]",
        "publicIpAddressName": "[concat(variables('vmName'), '-PIP' )]",
        "publicIpAddressNameWorker": "[concat(variables('vmNameWorker'), '-PIP' )]",
        "networkInterfaceName": "[concat(variables('vmName'),'-NIC')]",
        "networkInterfaceNameWorker": "[concat(variables('vmNameWorker'),'-NIC')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "osDiskType": "Premium_LRS",
        "bastionSubnetPrefix": "[concat(parameters('bastionSubnetPrefix'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-05-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-05-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('azureLocation')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "kubeadmWeb",
                        "properties": {
                            "priority": 1001,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "6443"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2022-05-01",
            "name": "[concat(parameters('networkSecurityGroupName'),'/allow_SSH_22')]",
            "condition": "[parameters('deployBastion')]",
            "dependsOn": [ "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]" ],
            "properties": {
                "priority": 1002,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[variables('bastionSubnetPrefix')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2021-05-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('azureLocation')]",
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('hostname')]"
                }
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('azureLocation')]",
            "tags": "[parameters('resourceTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmName'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshRSAPublicKey')]"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/installscript_kubeadm')]",
            "apiVersion": "2021-11-01",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash installKubeadm.sh', ' ', parameters('adminUsername'), ' ', parameters('spnClientId'), ' ', parameters('spnClientSecret'), ' ', parameters('spnTenantId'), ' ', parameters('azureLocation'), ' ', parameters('stagingStorageAccountName'), ' ', parameters('hostname'), ' ', parameters('virtualNetworkName'), ' ', parameters('subnetName'), ' ', parameters('networkSecurityGroupName'), ' ',parameters('templateBaseUrl'))]",
                    "fileUris": [
                        "[uri(parameters('templateBaseUrl'), 'artifacts/installKubeadm.sh')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-05-01",
            "name": "[variables('networkInterfaceNameWorker')]",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressNameWorker'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressNameWorker'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2021-05-01",
            "name": "[variables('publicIpAddressNameWorker')]",
            "location": "[parameters('azureLocation')]",
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('vmNameWorker')]",
            "location": "[parameters('azureLocation')]",
            "tags": "[parameters('resourceTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceNameWorker'))]"

            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmNameWorker'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceNameWorker'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmNameWorker')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshRSAPublicKey')]"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmNameWorker'),'/installscript_kubeadm_worker')]",
            "apiVersion": "2021-11-01",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmNameWorker'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash installKubeadmWorker.sh', ' ', parameters('adminUsername'), ' ', parameters('spnClientId'), ' ', parameters('spnClientSecret'), ' ', parameters('spnTenantId'), ' ', parameters('stagingStorageAccountName'), ' ',parameters('templateBaseUrl'))]",
                    "fileUris": [
                        "[uri(parameters('templateBaseUrl'), 'artifacts/installKubeadmWorker.sh')]"
                    ]
                }
            }
        }
    ]
}