$env:windows_username='${windows_username}'
$env:windows_password='${windows_password}'

[System.Environment]::SetEnvironmentVariable('windows_username', $env:windows_username,[System.EnvironmentVariableTarget]::Machine)
[System.Environment]::SetEnvironmentVariable('windows_password', $env:windows_password,[System.EnvironmentVariableTarget]::Machine)

$osversion = (Get-CimInstance Win32_OperatingSystem).Version 
$version = $osversion.split(".")[0] 
 
if ($version -eq 10) { 
    Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Value "0" 
} ElseIf ($Version -eq 6) { 
    $sub = $version.split(".")[1] 
    if ($sub -eq 1 -or $sub -eq 0) { 
        Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "EnableLUA" -Value "0" 
    } Else { 
        Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Value "0" 
    } 
} ElseIf ($Version -eq 5) { 
    Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "EnableLUA" -Value "0" 
} Else { 
    Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -Name "ConsentPromptBehaviorAdmin" -Value "0" 
}

New-Item -Path "C:\" -Name "tmp" -ItemType "directory" -Force

$CreateUser = @'
$SecurePassword=ConvertTo-SecureString $env:windows_password -AsPlainText -Force
New-LocalUser -Name $env:windows_username -Password $SecurePassword -PasswordNeverExpires 
Add-LocalGroupMember -Group "Administrators" -Member $env:windows_username
Enable-PSRemoting -Force
'@ > C:\tmp\CreateUser.ps1

$CreateUserScriptPath = "C:\tmp\CreateUser.ps1"
Start-Process powershell -Verb RunAs -ArgumentList "-file $CreateUserScriptPath"

$WinRM = @'
write-output "Running User Data Script"
write-host "(host) Running User Data Script"

Set-ExecutionPolicy Unrestricted -Scope LocalMachine -Force -ErrorAction Ignore

# Don't set this before Set-ExecutionPolicy as it throws an error
$ErrorActionPreference = "stop"

# Remove HTTP listener
Remove-Item -Path WSMan:\Localhost\listener\listener* -Recurse

# WinRM
write-output "Setting up WinRM"
write-host "(host) setting up WinRM"

cmd.exe /c winrm quickconfig -q
cmd.exe /c winrm quickconfig '-transport:http'
cmd.exe /c winrm set "winrm/config" '@{MaxTimeoutms="1800000"}'
cmd.exe /c winrm set "winrm/config/winrs" '@{MaxMemoryPerShellMB="1024"}'
cmd.exe /c winrm set "winrm/config/service" '@{AllowUnencrypted="true"}'
cmd.exe /c winrm set "winrm/config/client" '@{AllowUnencrypted="true"}'
cmd.exe /c winrm set "winrm/config/service/auth" '@{Basic="true"}'
cmd.exe /c winrm set "winrm/config/client/auth" '@{Basic="true"}'
cmd.exe /c winrm set "winrm/config/service/auth" '@{CredSSP="true"}'
cmd.exe /c winrm set "winrm/config/listener?Address=*+Transport=HTTP" '@{Port="5985"}'
cmd.exe /c netsh advfirewall firewall set rule group="remote administration" new enable=yes
cmd.exe /c netsh firewall add portopening TCP 5985 "Port 5985"
cmd.exe /c net stop winrm
cmd.exe /c sc config winrm start= auto
cmd.exe /c net start winrm
cmd.exe /c wmic useraccount where "name='Administrator'" set PasswordExpires=FALSE
'@ > C:\tmp\WinRM.ps1

$WinRMScriptPath = "C:\tmp\WinRM.ps1"
Start-Process powershell -Verb RunAs -ArgumentList "-file $WinRMScriptPath"
