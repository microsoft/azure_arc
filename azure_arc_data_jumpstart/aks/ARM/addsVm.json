{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "addsDomainName": {
      "type": "string",
      "defaultValue": "jumpstart.local",
      "metadata": {
        "description": "The FQDN of the domain"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "Arc-Data-ADDS",
      "metadata": {
        "description": "The name of your Virtual Machine"
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "arcdemo",
      "metadata": {
        "description": "Username for the Virtual Machine"
      }
    },
    "windowsAdminPassword": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 123,
      "defaultValue": "ArcPassword123!!",
      "metadata": {
        "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long."
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2022-datacenter-g2",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version"
      }
    },
    "azureLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v4",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "Arc-Data-VNet",
      "metadata": {
        "description": "Name of the VNET"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Arc-Data-Subnet",
      "metadata": {
        "description": "Name of the subnet in the virtual network"
      }
    },
    "addsPrivateIPAddress": {
      "type": "string",
      "defaultValue": "172.16.1.100",
      "metadata": {
        "description": "Static private IP for domain controller"
      }
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "Project": "jumpstart_azure_arc_data_services"
      }
    },
    "templateBaseUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Base URL for ARM template"
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "Arc-Data-ADDS-NSG",
      "metadata": {
        "description": "Name of the Network Security Group"
      }
    },
    "bastionSubnetPrefix": {
      "type": "string",
      "defaultValue": "172.16.2.64/26",
      "metadata": {
        "description": "Azure Bastion subnet IP prefix"
      }
    },
    "deployBastion": {
      "type": "bool",
      "metadata": {
        "description": "Choice to deploy Bastion to connect to the client VM"
      },
      "defaultValue": false
    }
  },
  "variables": {
    "vmName": "[concat(parameters('vmName'))]",
    "networkInterfaceName": "[concat(parameters('vmName'),'-NIC')]",
    "osDiskType": "Premium_LRS",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "nsgRef": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('networkSecurityGroupName'))]",
    "networkInterfaceRef": "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-08-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('azureLocation')]",
      "dependsOn": [
        "[variables('nsgRef')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('addsPrivateIPAddress')]"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgRef')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[variables('vmName')]",
      "location": "[parameters('azureLocation')]",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[variables('networkInterfaceRef')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(variables('vmName'),'-OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            },
            "diskSizeGB": 1024
          },
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('networkInterfaceRef')]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('windowsAdminUsername')]",
          "adminPassword": "[parameters('windowsAdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": false
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/DeployADDS')]",
      "apiVersion": "2021-11-01",
      "location": "[parameters('azureLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(parameters('templateBaseUrl'), 'artifacts/SetupADDS.ps1')]"
          ],
          "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Bypass -File SetupADDS.ps1', ' -domainName ', parameters('addsDomainName'), ' -domainAdminUsername ', parameters('windowsAdminUsername'), ' -domainAdminPassword ', parameters('windowsAdminPassword'), ' -templateBaseUrl ', parameters('templateBaseUrl'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-08-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('azureLocation')]"
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2022-05-01",
      "condition": "[parameters('deployBastion')]",
      "dependsOn": [ "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]" ],
      "name": "[concat(parameters('networkSecurityGroupName'),'/allow_RDP_3389')]",
      "properties": {
        "priority": 1001,
        "protocol": "TCP",
        "access": "Allow",
        "direction": "Inbound",
        "sourceAddressPrefix": "[parameters('bastionSubnetPrefix')]",
        "sourcePortRange": "*",
        "destinationAddressPrefix": "*",
        "destinationPortRange": "3389"
      }
    }
  ],
  "outputs": {
    "scriptfile": {
      "type": "string",
      "value": "[uri(parameters('templateBaseUrl'), 'artifacts/SetupADDS.ps1')]"
    }
  }
}
