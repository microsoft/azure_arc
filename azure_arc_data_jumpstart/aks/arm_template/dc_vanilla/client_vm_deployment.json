{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "Arc-Data-Client",
            "metadata": {
                "description": "The name of you Virtual Machine"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "arcdemo",
            "metadata": {
                "description": "Username for the Virtual Machine"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "ArcPassword123!!",
            "metadata": {
                "description": "Windows password for the Virtual Machine"
            }
        },       
        "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "metadata": {
            "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D8s_v3",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "SPN_CLIENT_ID": {
            "type": "string",
            "metadata": {
                "description": "Unique SPN app ID"
            }
        },
        "SPN_CLIENT_SECRET": {
            "type": "string",
            "metadata": {
                "description": "Unique SPN password"
            }
        },
        "SPN_TENANT_ID": {
            "type": "string",
            "metadata": {
                "description": "Unique SPN tenant ID"
            }
        },
        "SPN_AUTHORITY": {
            "type": "string",
            "metadata": {
                "description": "The Service Principal authority"
            }
        },
        "resourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Target AKS cluster resource group"
            }
        },
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "Target AKS cluster"
            }
        },
        "AZDATA_USERNAME": {
            "type": "string",
            "metadata": {
                "description": "Arc Data Controller Username"
            }
        },
        "AZDATA_PASSWORD": {
            "type": "string",
            "metadata": {
                "description": "Arc Data Controller Password"
            }
        },
        "ACCEPT_EULA": {
            "type": "string",
            "defaultValue":"yes",
            "metadata": {
                "description": "azdata CLI EULA"
            }
        },
        "REGISTRY_USERNAME": {
            "type": "string",
            "metadata": {
                "description": "Private Azure Arc Data Container Registry Username"
            }
        },
        "REGISTRY_PASSWORD": {
            "type": "string",
            "metadata": {
                "description": "Private Azure Arc Data Container Registry Password"
            }
        },
        "ARC_DC_NAME": {
            "type": "string",
            "metadata": {
                "description": "Arc Data Controller name"
            }
        },
        "ARC_DC_SUBSCRIPTION": {
            "type": "string",
            "metadata": {
                "description": "Arc Data Controller subscription ID"
            }
        },
        "ARC_DC_REGION": {
            "type": "string",
            "metadata": {
                "description": "Arc Data Controller Region"
            }
        },
        "DOCKER_REGISTRY": {
            "type": "string",
            "metadata": {
                "description": "Private Azure Arc Data Container Registry"
            }
        },
        "DOCKER_REPOSITORY": {
            "type": "string",
            "metadata": {
                "description": "Private Azure Arc Data Container Registry Repository"
            }
        },
        "DOCKER_TAG": {
            "type": "string",
            "metadata": {
                "description": "Private Azure Arc Data Container Image Tag"
            }
        },                              
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "Arc-Data-Client-VNET",
            "metadata": {
                "description": "Name of the VNET"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Name of the subnet in the virtual network"
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "Arc-Data-Client-NSG",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "Project": "jumpstart_azure_arc_data"
            }
        }        
    },
    "variables": {
        "vmName": "[concat(parameters('vmName'))]",
        "publicIpAddressName": "[concat(parameters('vmName'), '-PIP' )]",
        "networkInterfaceName": "[concat(parameters('vmName'),'-NIC')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "osDiskType": "Premium_LRS",
        "subnetAddressPrefix": "10.1.0.0/24",
        "addressPrefix": "10.1.0.0/16"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_RDP_3389",
                        "properties": {
                            "priority": 1001,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "allow_SQL_1433",
                        "properties": {
                            "priority": 1002,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "1443"
                        }
                    }                                                                                                                                  
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",            
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmName'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                }
            }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmName'),'/ClientTools')]",
          "apiVersion": "2019-07-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
          ],
          "tags": {
              "displayName": "config-choco"
          },          
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.10",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://raw.githubusercontent.com/microsoft/azure_arc/main/azure_arc_data_jumpstart/aks/arm_template/dc_vanilla/scripts/ClientTools.ps1"
              ],
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Bypass -File ClientTools.ps1', ' -SPN_CLIENT_ID ', parameters('SPN_CLIENT_ID'), ' -SPN_CLIENT_SECRET ', parameters('SPN_CLIENT_SECRET'), ' -SPN_AUTHORITY ', parameters ('SPN_AUTHORITY'), ' -adminUsername ', parameters('adminUsername'), ' -SPN_TENANT_ID ', parameters('SPN_TENANT_ID'), ' -resourceGroup ', parameters('resourceGroup'), ' -clusterName ', parameters('clusterName'), ' -AZDATA_USERNAME ', parameters('AZDATA_USERNAME'), ' -AZDATA_PASSWORD ', parameters('AZDATA_PASSWORD'), ' -ACCEPT_EULA ', parameters('ACCEPT_EULA'), ' -REGISTRY_USERNAME ', parameters('REGISTRY_USERNAME'), ' -REGISTRY_PASSWORD ', parameters('REGISTRY_PASSWORD'), ' -ARC_DC_NAME ', parameters('ARC_DC_NAME'), ' -ARC_DC_SUBSCRIPTION ', parameters('ARC_DC_SUBSCRIPTION'), ' -ARC_DC_REGION ', parameters('ARC_DC_REGION'), ' -DOCKER_REGISTRY ', parameters('DOCKER_REGISTRY'), ' -DOCKER_REPOSITORY ', parameters('DOCKER_REPOSITORY'), ' -DOCKER_TAG ', parameters('DOCKER_TAG'))]" 
            }            
          }
        }                        
    ],

    
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "publicIP": {
            "type": "string",
            "value": "[concat(reference(variables('publicIPAddressName')).IpAddress)]"
        }
    }
}