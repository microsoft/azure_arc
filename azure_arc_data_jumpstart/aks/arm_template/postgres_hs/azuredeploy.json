{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "Arc-Data-Client-VNET",
      "metadata": {
        "description": "Name of the virtual Network"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "Subnet Prefix"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet"
    },    
    "clusterName": {
      "type": "string",
      "defaultValue": "Arc-Data-Demo",
      "metadata": {
        "description": "The name of the Managed Cluster resource"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the Managed Cluster resource"
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN"
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agent VM size"
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of nodes for the cluster"
      },
      "minValue": 1,
      "maxValue": 50
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_D8s_v3",
      "metadata": {
        "description": "The size of the Virtual Machine"
      }
    },
    "nodeAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Linux Virtual Machines"
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "SPN_CLIENT_ID": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "SPN_CLIENT_SECRET": {
      "metadata": {
        "description": "The Service Principal Client Secret"
      },
      "type": "securestring"
    },
    "SPN_TENANT_ID": {
      "type": "string",
      "metadata": {
        "description": "Unique SPN tenant ID"
      }
    },
    "SPN_AUTHORITY": {
      "type": "string",
      "metadata": {
        "description": "The Service Principal authority"
      }
    },     
    "enableRBAC": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "boolean flag to turn on and off of RBAC"
      }
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux"
      ],
      "metadata": {
        "description": "The type of operating system"
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.18.17",      
      "metadata": {
        "description": "The version of Kubernetes"
      }
    },
    "networkPlugin": {
      "type": "string",
      "defaultValue": "azure",      
      "metadata": {
      "description": "Network plugin used for building Kubernetes network."
      }
    },
    "serviceCidr": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
      "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "defaultValue": "10.0.0.10",
      "metadata": {
      "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "defaultValue": "172.17.0.1/16",
      "metadata": {
      "description": "A CIDR notation IP for Docker bridge."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "Arc-Data-Client",
      "metadata": {
        "description": "TThe name of the Client Virtual Machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "arcdemo",
      "metadata": {
        "description": "Username for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "ArcPassword123!!",
      "metadata": {
        "description": "Windows password for the Virtual Machine"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D8s_v3",
      "metadata": {
        "description": "The size of the VM"
      }
    },   
    "resourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Target AKS cluster resource group"
      }
    },
    "AZDATA_USERNAME": {
      "type": "string",
      "metadata": {
        "description": "Arc Data Controller Username"
      }
    },
    "AZDATA_PASSWORD": {
      "type": "securestring",
      "metadata": {
        "description": "Arc Data Controller Password"
      }
    },
    "ACCEPT_EULA": {
      "type": "string",
      "defaultValue": "yes",
      "metadata": {
        "description": "azdata CLI EULA"
      }
    },
    "REGISTRY_USERNAME": {
      "type": "string",
      "defaultValue": "not_specified",
      "metadata": {
        "description": "Private Arc Data Docker Registry Username"
      }
    },
    "REGISTRY_PASSWORD": {
      "type": "securestring",
      "defaultValue": "not_specified",
      "metadata": {
        "description": "Private Arc Data Docker Registry Password"
      }
    },
    "ARC_DC_NAME": {
      "type": "string",
      "metadata": {
        "description": "Arc Data Controller name"
      }
    },
    "ARC_DC_SUBSCRIPTION": {
      "type": "string",
      "metadata": {
        "description": "Arc Data Controller subscription ID"
      }
    },
    "ARC_DC_REGION": {
      "type": "string",
      "metadata": {
        "description": "Arc Data Controller Region"
      }
    },
    "DOCKER_REGISTRY": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com",
      "metadata": {
          "description": "Azure Arc Data Container Registry"
      }
    },
    "DOCKER_REPOSITORY": {
      "type": "string",
      "defaultValue": "arcdata",
      "metadata": {
          "description": "Azure Arc Data Container Registry Repository"
      }
    },
    "DOCKER_TAG": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
          "description": "Azure Arc Data Container Tag"
      }
    },
    "POSTGRES_NAME": {
      "type": "string",
      "metadata": {
        "description": "Name of PostgreSQL server group"
      }
    },   
    "POSTGRES_WORKER_NODE_COUNT": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of PostgreSQL Hyperscale worker nodes"
      }
    },
    "POSTGRES_DATASIZE": {
      "type": "int",        
      "defaultValue": 1024,
      "metadata": {
        "description": "Size of data volumes in MB"
      }
    },
    "POSTGRES_SERVICE_TYPE": {
      "type": "string",
      "metadata": {
        "description": "Choose how PostgreSQL service is accessed through Kubernetes networking interface"
      }
    }
  },
  "variables": {
    "builtInRole":{
    "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
    },
    "vnetSubnetId": "[resourceId(parameters('resourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('vnetName'),parameters('subnetName'))]"
    },
  "resources": [
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2020-05-01",
          "type": "subnets",
          "location": "[parameters('location')]",
          "name": "[parameters('subnetName')]",
          "dependsOn": [
            "[parameters('vnetName')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnetPrefix')]"
          }
        }
      ]
    },    
    {
      "apiVersion": "2020-03-01",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[parameters('clusterName')]",
      "dependsOn": [
        "[parameters('subnetName')]"
      ],
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": "[parameters('agentCount')]",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "[parameters('osType')]",
            "storageProfile": "ManagedDisks",
            "vnetSubnetID": "[variables('vnetSubnetID')]"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[parameters('nodeAdminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('sshRSAPublicKey')]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "clientId": "[parameters('SPN_CLIENT_ID')]",
          "Secret": "[parameters('SPN_CLIENT_SECRET')]"
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        }        
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "linkedTemplate",
      "dependsOn": [
        "[concat(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/microsoft/azure_arc/main/azure_arc_data_jumpstart/aks/arm_template/postgres_hs/client_vm_deployment.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
        "vmName":{"value": "[parameters('vmName')]"},
        "adminUsername":{"value": "[parameters('adminUsername')]"},
        "adminPassword":{"value": "[parameters('adminPassword')]"},
        "vmSize":{"value": "[parameters('vmSize')]"},
        "SPN_CLIENT_ID":{"value": "[parameters('SPN_CLIENT_ID')]"},
        "SPN_CLIENT_SECRET":{"value": "[parameters('SPN_CLIENT_SECRET')]"},
        "SPN_TENANT_ID":{"value": "[parameters('SPN_TENANT_ID')]"},
        "SPN_AUTHORITY":{"value": "[parameters('SPN_AUTHORITY')]"}, 
        "resourceGroup":{"value": "[parameters('resourceGroup')]"},
        "clusterName":{"value": "[parameters('clusterName')]"},
        "AZDATA_USERNAME":{"value": "[parameters('AZDATA_USERNAME')]"},
        "AZDATA_PASSWORD":{"value": "[parameters('AZDATA_PASSWORD')]"},
        "ACCEPT_EULA":{"value": "[parameters('ACCEPT_EULA')]"},
        "REGISTRY_USERNAME":{"value": "[parameters('REGISTRY_USERNAME')]"},
        "REGISTRY_PASSWORD":{"value": "[parameters('REGISTRY_PASSWORD')]"},
        "ARC_DC_NAME":{"value": "[parameters('ARC_DC_NAME')]"},
        "ARC_DC_SUBSCRIPTION":{"value": "[parameters('ARC_DC_SUBSCRIPTION')]"},
        "ARC_DC_REGION":{"value": "[parameters('ARC_DC_REGION')]"},
        "DOCKER_REGISTRY":{"value": "[parameters('DOCKER_REGISTRY')]"},
        "DOCKER_REPOSITORY":{"value": "[parameters('DOCKER_REPOSITORY')]"},
        "DOCKER_TAG":{"value": "[parameters('DOCKER_TAG')]"},
        "POSTGRES_NAME":{"value": "[parameters('POSTGRES_NAME')]"},       
        "POSTGRES_WORKER_NODE_COUNT":{"value": "[parameters('POSTGRES_WORKER_NODE_COUNT')]"},
        "POSTGRES_DATASIZE":{"value": "[parameters('POSTGRES_DATASIZE')]"},
        "POSTGRES_SERVICE_TYPE":{"value": "[parameters('POSTGRES_SERVICE_TYPE')]"}
        }
      }
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(parameters('clusterName')).fqdn]"
    }
  }
}
