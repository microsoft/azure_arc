// Create a table to store the data from the productionline topic
.create table productionline (
Timestamp: datetime,
MakeupArea: string,
Line: string,
Product: string,
Process: string,
Batch: int,
CurrentShift: string,
CurrentCutPerMinutes: int,
TargetCutPerMinutes: int,
StartTime: datetime,
FinishTime: datetime,
Waste: real,
WasteReason: string,
LostTime: string,
LostTimeReason: string,
LostTimeTimeCount: int,
ScheduledDoughs: int,
CompletedDoughs: int,
ScheduledDoughsPerHour: int,
DoughTemperature: real,
Weight: real,
Height: real,
OvenTemp: real,
DownTime: int,
Thruput: int,
OverallEfficiency: int,
Availability: int,
Performance: int,
Quality: int,
PlannedProductionTime: int,
ActualRuntime: int,
UnplannedDowntime: int,
PlannedDowntime: int,
PlannedQuantity: int,
ActualQuantity: int,
RejectedQuantity: int,
OEEGoalbyPlant: real,
OEESeattle: real,
OEEMiami: real,
OEEBoston: real,
OEEMexicoCity: real,
OEEGoalbyCountry: real,
OEEUSA: real,
OEEMexico: real,
OEEGoalbyProduct: real,
OEEDonuts: real,
OEECakes: real,
OEEBreads: real,
OEEGoalbyShift: real,
OEEMorningShift: real,
OEEDayShift: real,
OEENightShift: real)

// Create a function to parse the data from the productionline topic
.create-or-alter function Expand_productionline_Data() {
    donutPlant
    | where subject == "topic/productionline"
    | extend data = parse_json( base64_decode_tostring(data_base64) ) 
    | project 
    Timestamp = todatetime(data.data.Timestamp),
    MakeupArea = tostring(data.data.MakeupArea),
    Line = tostring(data.data.Line),
    Product = tostring(data.data.Product),
    Process = tostring(data.data.Process),
    Batch = toint(data.data.Batch),
    CurrentShift = tostring(data.data.CurrentShift),
    CurrentCutPerMinutes = toint(data.data.CurrentCutPerMinutes),
    TargetCutPerMinutes = toint(data.data.TargetCutPerMinutes),
    StartTime = todatetime(data.data.StartTime),
    FinishTime = todatetime(data.data.FinishTime),
    Waste = toreal(data.data.Waste),
    WasteReason = tostring(data.data.WasteReason),
    LostTime = tostring(data.data.LostTime),
    LostTimeReason = tostring(data.data.LostTimeReason),
    LostTimeTimeCount = toint(data.data.LostTimeTimeCount),
    ScheduledDoughs = toint(data.data.ScheduledDoughs),
    CompletedDoughs = toint(data.data.CompletedDoughs),
    ScheduledDoughsPerHour = toint(data.data.ScheduledDoughsPerHour),
    DoughTemperature = toreal(data.data.DoughTemperature),
    Weight = toreal(data.data.Weight),
    Height = toreal(data.data.Height),
    OvenTemp = toreal(data.data.OvenTemp),
    DownTime = toint(data.data.DownTime),
    Thruput = toint(data.data.Thruput),
    OverallEfficiency = toint(data.data.OverallEfficiency),
    Availability = toint(data.data.Availability),
    Performance = toint(data.data.Performance),
    Quality = toint(data.data.Quality),
    PlannedProductionTime = toint(data.data.PlannedProductionTime),
    ActualRuntime = toint(data.data.ActualRuntime),
    UnplannedDowntime = toint(data.data.UnplannedDowntime),
    PlannedDowntime = toint(data.data.PlannedDowntime),
    PlannedQuantity = toint(data.data.PlannedQuantity),
    ActualQuantity = toint(data.data.ActualQuantity),
    RejectedQuantity = toint(data.data.RejectedQuantity),
    OEEGoalbyPlant = toreal(data.data.OEEGoalbyPlant),
    OEESeattle = toreal(data.data.OEESeattle),
    OEEMiami = toreal(data.data.OEEMiami),
    OEEBoston = toreal(data.data.OEEBoston),
    OEEMexicoCity = toreal(data.data.OEEMexicoCity),
    OEEGoalbyCountry = toreal(data.data.OEEGoalbyCountry),
    OEEUSA = toreal(data.data.OEEUSA),
    OEEMexico = toreal(data.data.OEEMexico),
    OEEGoalbyProduct = toreal(data.data.OEEGoalbyProduct),
    OEEDonuts = toreal(data.data.OEEDonuts),
    OEECakes = toreal(data.data.OEECakes),
    OEEBreads = toreal(data.data.OEEBreads),
    OEEGoalbyShift = toreal(data.data.OEEGoalbyShift),
    OEEMorningShift = toreal(data.data.OEEMorningShift),
    OEEDayShift = toreal(data.data.OEEDayShift),
    OEENightShift = toreal(data.data.OEENightShift)
}

// Create a policy to update the productionline table
.alter table productionline policy update @'[{"Source": "donutPlant", "Query": "Expand_productionline_Data()", "IsEnabled": "True"}]'

.alter table productionline policy ingestionbatching "{'MaximumBatchingTimeSpan': '0:01:00', 'MaximumNumberOfItems': 10000}"
