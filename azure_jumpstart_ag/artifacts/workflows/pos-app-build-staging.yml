name: Promote-to-staging

on:
  pull_request:
        branches:
            - main
        types:
            - closed

  workflow_dispatch: {}

permissions:
    contents: write
    pull-requests: write
    id-token: write

jobs:
  build-and-deploy-staging-image:
      if: ${{ github.repository != 'microsoft/jumpstart-agora-apps' }} && github.event.pull_request.merged == true
      runs-on: ubuntu-latest
      steps:
      # checkout the repo
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: 'Login to ACR'
        uses: azure/docker-login@v1
        with:
          login-server: "${{ secrets.ACR_NAME }}.azurecr.io"
          username: ${{ secrets.SPN_CLIENT_ID }}
          password: ${{ secrets.SPN_CLIENT_SECRET }}

      - name: Increment Image Tag
        id: latestImageTag
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
          namespace: "dev"
        run: |
          az login --service-principal --username ${{ secrets.SPN_CLIENT_ID }} --password ${{ secrets.SPN_CLIENT_SECRET }} --tenant ${{ secrets.SPN_TENANT_ID }}
          LATEST_TAG=$(az acr repository show-tags --name $ACR_NAME --repository $namespace/contoso-supermarket/pos --orderby time_desc --top 1 --output tsv)
          NEW_VERSION=$(echo $LATEST_TAG | awk -F. '{$NF = $NF + 1;} 1' OFS=.)
          echo $NEW_VERSION
          echo "latest_tag=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: 'Build and push new images'
        env:
          latest_tag: ${{ steps.latestImageTag.outputs.latest_tag }}
        run: |
          docker build ./contoso_supermarket/developer/pos/src -t "${{ secrets.ACR_NAME }}.azurecr.io/dev/contoso-supermarket/pos:$latest_tag"
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/dev/contoso-supermarket/pos:$latest_tag
          docker build ./contoso_supermarket/developer/pos/src -t "${{ secrets.ACR_NAME }}.azurecr.io/staging/contoso-supermarket/pos:$latest_tag"
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/staging/contoso-supermarket/pos:$latest_tag
          

      - name: 'Update Image tag on main branch'
        env:
            latest_tag: ${{ steps.latestImageTag.outputs.latest_tag }}
        run: |
          FILE_PATH=$(find . -name "dev.yaml")
          newLine="    image_tag: $latest_tag"
          if [ ! -z "$FILE_PATH" ]; then
            sed -i "s/.*image_tag.*/$newLine/" $FILE_PATH
          else
            echo "dev.yaml not found"
          fi

      - name: Commit and push changes to main branch
        continue-on-error: true
        env:
          latest_tag: ${{ steps.latestImageTag.outputs.latest_tag }}
        run: |
            git config --global user.name "GitHub Action"
            git config --global user.email "action@github.com"
            git add .
            git commit -m "Update Image Tag on dev to $latest_tag"
            git push

      - name: 'Checkout staging branch'
        uses: actions/checkout@v3
        with:
          ref: 'staging'

      - name: 'Update Image tag on staging branch'
        env:
            latest_tag: ${{ steps.latestImageTag.outputs.latest_tag }}
        run: |
          FILE_PATH=$(find . -name "staging.yaml")
          newLine="    image_tag: $latest_tag"
          if [ ! -z "$FILE_PATH" ]; then
            sed -i "s/.*image_tag.*/$newLine/" $FILE_PATH
          else
            echo "staging.yaml not found"
          fi

      - name: Commit and push changes to staging branch
        continue-on-error: true
        env:
          latest_tag: ${{ steps.latestImageTag.outputs.latest_tag }}
        run: |
            git config --global user.name "GitHub Action"
            git config --global user.email "action@github.com"
            git add .
            git commit -m "Update Image Tag on Canary to $latest_tag"
            git push