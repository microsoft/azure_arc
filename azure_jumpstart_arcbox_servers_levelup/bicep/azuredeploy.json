{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "11149384174819022311"
    }
  },
  "parameters": {
    "spnClientId": {
      "type": "string",
      "metadata": {
        "description": "Azure service principal client id"
      }
    },
    "spnClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Azure service principal client secret"
      }
    },
    "spnTenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure AD tenant id for your service principal"
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for Windows account"
      }
    },
    "windowsAdminPassword": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 123,
      "metadata": {
        "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name for your log analytics workspace"
      }
    },
    "githubAccount": {
      "type": "string",
      "defaultValue": "microsoft",
      "metadata": {
        "description": "Target GitHub account"
      }
    },
    "githubBranch": {
      "type": "string",
      "defaultValue": "arc_servers_levelup",
      "metadata": {
        "description": "Target GitHub branch"
      }
    },
    "deployBastion": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choice to deploy Bastion to connect to the client VM"
      }
    },
    "githubUser": {
      "type": "string",
      "defaultValue": "microsoft",
      "metadata": {
        "description": "User github account where they have forked https://github.com/microsoft/azure-arc-jumpstart-apps"
      }
    },
    "rdpPort": {
      "type": "string",
      "defaultValue": "3389",
      "metadata": {
        "description": "Override default RDP port 3389 using this parameter. Default is 3389. No changes will be made to the client VM."
      }
    },
    "sshPort": {
      "type": "string",
      "defaultValue": "22",
      "metadata": {
        "description": "Override default SSH port 22 using this parameter. Default is 22. No changes will be made to the client VM."
      }
    },
    "emailAddress": {
      "type": "string",
      "metadata": {
        "description": "Your email address to configure alerts."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "templateBaseUrl": "[format('https://raw.githubusercontent.com/{0}/azure_arc/{1}/azure_jumpstart_arcbox_servers_levelup/', parameters('githubAccount'), parameters('githubBranch'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "clientVmDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "windowsAdminUsername": {
            "value": "[parameters('windowsAdminUsername')]"
          },
          "windowsAdminPassword": {
            "value": "[parameters('windowsAdminPassword')]"
          },
          "spnClientId": {
            "value": "[parameters('spnClientId')]"
          },
          "spnClientSecret": {
            "value": "[parameters('spnClientSecret')]"
          },
          "spnTenantId": {
            "value": "[parameters('spnTenantId')]"
          },
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "stagingStorageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'stagingStorageAccountDeployment'), '2022-09-01').outputs.storageAccountName.value]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mgmtArtifactsAndPolicyDeployment'), '2022-09-01').outputs.subnetId.value]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "githubUser": {
            "value": "[parameters('githubUser')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "rdpPort": {
            "value": "[parameters('rdpPort')]"
          },
          "sshPort": {
            "value": "[parameters('sshPort')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "9936808633692311044"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string",
              "defaultValue": "ArcBox-Client",
              "metadata": {
                "description": "The name of your Virtual Machine"
              }
            },
            "windowsAdminUsername": {
              "type": "string",
              "defaultValue": "arcdemo",
              "metadata": {
                "description": "Username for the Virtual Machine"
              }
            },
            "windowsAdminPassword": {
              "type": "securestring",
              "minLength": 12,
              "maxLength": 123,
              "metadata": {
                "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long"
              }
            },
            "windowsOSVersion": {
              "type": "string",
              "defaultValue": "2022-datacenter-g2",
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource Id of the subnet in the virtual network"
              }
            },
            "resourceTags": {
              "type": "object",
              "defaultValue": {
                "Project": "jumpstart_arcbox"
              }
            },
            "spnClientId": {
              "type": "string",
              "metadata": {
                "description": "Client id of the service principal"
              }
            },
            "spnClientSecret": {
              "type": "securestring",
              "metadata": {
                "description": "Client secret of the service principal"
              }
            },
            "spnAuthority": {
              "type": "string",
              "defaultValue": "[environment().authentication.loginEndpoint]"
            },
            "spnTenantId": {
              "type": "string",
              "metadata": {
                "description": "Tenant id of the service principal"
              }
            },
            "acceptEula": {
              "type": "string",
              "defaultValue": "yes"
            },
            "stagingStorageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Name for the staging storage account using to hold kubeconfig. This value is passed into the template as an output from mgmtStagingStorage.json"
              }
            },
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name for the environment Azure Log Analytics workspace"
              }
            },
            "templateBaseUrl": {
              "type": "string",
              "metadata": {
                "description": "The base URL used for accessing artifacts and automation artifacts."
              }
            },
            "deployBastion": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Choice to deploy Bastion to connect to the client VM"
              }
            },
            "githubUser": {
              "type": "string",
              "metadata": {
                "description": "User github account where they have forked https://github.com/microsoft/azure-arc-jumpstart-apps"
              }
            },
            "rdpPort": {
              "type": "string",
              "defaultValue": "3389",
              "metadata": {
                "description": "Override default RDP port 3389 using this parameter. Default is 3389. No changes will be made to the client VM."
              }
            },
            "sshPort": {
              "type": "string",
              "defaultValue": "22",
              "metadata": {
                "description": "Override default SSH port 22 using this parameter. Default is 22. No changes will be made to the client VM."
              }
            }
          },
          "variables": {
            "bastionName": "ArcBox-Bastion",
            "publicIpAddressName": "[if(equals(parameters('deployBastion'), false()), format('{0}-PIP', parameters('vmName')), format('{0}-PIP', variables('bastionName')))]",
            "networkInterfaceName": "[format('{0}-NIC', parameters('vmName'))]",
            "osDiskType": "Premium_LRS",
            "PublicIPNoBastion": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-01-01",
              "name": "[variables('networkInterfaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": "[if(equals(parameters('deployBastion'), false()), variables('PublicIPNoBastion'), null())]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployBastion'), false())]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-01-01",
              "name": "[variables('publicIpAddressName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
              },
              "sku": {
                "name": "Basic"
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('resourceTags')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_D16s_v4"
                },
                "storageProfile": {
                  "osDisk": {
                    "name": "[format('{0}-OSDisk', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "[variables('osDiskType')]"
                    },
                    "diskSizeGB": 1024
                  },
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "[parameters('windowsOSVersion')]",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('windowsAdminUsername')]",
                  "adminPassword": "[parameters('windowsAdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'Bootstrap')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "config-choco"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                  "fileUris": [
                    "[uri(parameters('templateBaseUrl'), 'artifacts/Bootstrap.ps1')]"
                  ],
                  "commandToExecute": "[format('powershell.exe -ExecutionPolicy Bypass -File Bootstrap.ps1 -adminUsername {0} -adminPassword {1} -spnClientId {2} -spnClientSecret {3} -spnTenantId {4} -spnAuthority {5} -subscriptionId {6} -resourceGroup {7} -acceptEula {8} -azureLocation {9} -stagingStorageAccountName {10} -workspaceName {11} -templateBaseUrl {12} -githubUser {13} -rdpPort {14} -sshPort {15}', parameters('windowsAdminUsername'), parameters('windowsAdminPassword'), parameters('spnClientId'), parameters('spnClientSecret'), parameters('spnTenantId'), parameters('spnAuthority'), subscription().subscriptionId, resourceGroup().name, parameters('acceptEula'), parameters('location'), parameters('stagingStorageAccountName'), parameters('workspaceName'), parameters('templateBaseUrl'), parameters('githubUser'), parameters('rdpPort'), parameters('sshPort'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            }
          ],
          "outputs": {
            "adminUsername": {
              "type": "string",
              "value": "[parameters('windowsAdminUsername')]"
            },
            "publicIP": {
              "type": "string",
              "value": "[if(equals(parameters('deployBastion'), false()), concat(reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName')), '2022-01-01').ipAddress), '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'mgmtArtifactsAndPolicyDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'stagingStorageAccountDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "stagingStorageAccountDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "15380055722308461871"
            }
          },
          "parameters": {
            "storageAccountType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
              ],
              "metadata": {
                "description": "Storage Account type"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "storageAccountName": "[format('arcbox{0}', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[variables('storageAccountName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "mgmtArtifactsAndPolicyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "12120746486574356340"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "ArcBox-VNet",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "subnetName": {
              "type": "string",
              "defaultValue": "ArcBox-Subnet",
              "metadata": {
                "description": "Name of the subnet in the virtual network"
              }
            },
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name for your log analytics workspace"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure Region to deploy the Log Analytics Workspace"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "pergb2018",
              "metadata": {
                "description": "SKU, leave default pergb2018"
              }
            },
            "deployBastion": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Choice to deploy Bastion to connect to the client VM"
              }
            },
            "networkSecurityGroupName": {
              "type": "string",
              "defaultValue": "ArcBox-NSG",
              "metadata": {
                "description": "Name of the Network Security Group"
              }
            },
            "bastionNetworkSecurityGroupName": {
              "type": "string",
              "defaultValue": "ArcBox-Bastion-NSG",
              "metadata": {
                "description": "Name of the Bastion Network Security Group"
              }
            }
          },
          "variables": {
            "security": {
              "name": "[format('Security({0})', parameters('workspaceName'))]",
              "galleryName": "Security"
            },
            "subnetAddressPrefix": "10.16.1.0/24",
            "addressPrefix": "10.16.0.0/16",
            "bastionSubnetName": "AzureBastionSubnet",
            "bastionSubnetRef": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), variables('bastionSubnetName'))]",
            "bastionName": "ArcBox-Bastion",
            "bastionSubnetIpPrefix": "10.16.3.64/26",
            "bastionPublicIpAddressName": "[format('{0}-PIP', variables('bastionName'))]",
            "primarySubnet": [
              {
                "name": "[parameters('subnetName')]",
                "properties": {
                  "addressPrefix": "[variables('subnetAddressPrefix')]",
                  "privateEndpointNetworkPolicies": "Enabled",
                  "privateLinkServiceNetworkPolicies": "Enabled",
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                  }
                }
              }
            ],
            "bastionSubnet": [
              {
                "name": "AzureBastionSubnet",
                "properties": {
                  "addressPrefix": "[variables('bastionSubnetIpPrefix')]",
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNetworkSecurityGroupName'))]"
                  }
                }
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-01-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('addressPrefix')]"
                  ]
                },
                "subnets": "[if(equals(parameters('deployBastion'), false()), variables('primarySubnet'), union(variables('primarySubnet'), variables('bastionSubnet')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[parameters('networkSecurityGroupName')]",
              "location": "[parameters('location')]"
            },
            {
              "condition": "[equals(parameters('deployBastion'), true())]",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[parameters('bastionNetworkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "bastion_allow_https_inbound",
                    "properties": {
                      "priority": 1010,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "Internet",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_gateway_manager_inbound",
                    "properties": {
                      "priority": 1011,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "GatewayManager",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_load_balancer_inbound",
                    "properties": {
                      "priority": 1012,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_host_comms",
                    "properties": {
                      "priority": 1013,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ]
                    }
                  },
                  {
                    "name": "bastion_allow_ssh_rdp_outbound",
                    "properties": {
                      "priority": 1014,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ]
                    }
                  },
                  {
                    "name": "bastion_allow_azure_cloud_outbound",
                    "properties": {
                      "priority": 1015,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "AzureCloud",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_bastion_comms",
                    "properties": {
                      "priority": 1016,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ]
                    }
                  },
                  {
                    "name": "bastion_allow_get_session_info",
                    "properties": {
                      "priority": 1017,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('sku')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('SecurityInsights({0})', parameters('workspaceName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              },
              "plan": {
                "name": "[format('SecurityInsights({0})', parameters('workspaceName'))]",
                "publisher": "Microsoft",
                "product": "OMSGallery/SecurityInsights",
                "promotionCode": ""
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[variables('security').name]",
              "location": "[parameters('location')]",
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              },
              "plan": {
                "name": "[variables('security').name]",
                "promotionCode": "",
                "product": "[format('OMSGallery/{0}', variables('security').galleryName)]",
                "publisher": "Microsoft"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployBastion'), true())]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-01-01",
              "name": "[variables('bastionPublicIpAddressName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
              },
              "sku": {
                "name": "Standard"
              }
            },
            {
              "condition": "[equals(parameters('deployBastion'), true())]",
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2022-01-01",
              "name": "[variables('bastionName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpAddressName'))]"
                      },
                      "subnet": {
                        "id": "[variables('bastionSubnetRef')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpAddressName'))]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            },
            "subnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2022-01-01').subnets[0].id]"
            },
            "workspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoringResources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mgmtArtifactsAndPolicyDeployment'), '2022-09-01').outputs.workspaceId.value]"
          },
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "emailAddress": {
            "value": "[parameters('emailAddress')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "212689542187748615"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name of the workspace."
              }
            },
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Id of the workspace."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Specifies the location in which to create the workspace."
              }
            },
            "emailAddress": {
              "type": "string",
              "metadata": {
                "description": "Short name up to 12 characters for the Action group."
              }
            }
          },
          "variables": {
            "actionGroupName": "ag-arc-servers",
            "alertsSeverity": 2,
            "windowSize": "PT5M",
            "evaluationFrequency": "PT5M",
            "convertRuleTag": "hidden-link:",
            "singlequote": "'",
            "azureDashboardName": "Azure Arc-enabled servers",
            "windowsEventsWorkbookName": "Windows Event Logs",
            "osPerformanceWorkbookName": "OS Performance and Capacity",
            "alertsConsoleWorkbookName": "Azure Monitor Alerts",
            "windowsEventsWorkbookContent": {
              "version": "Notebook/1.0",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Event Logs"
                  },
                  "name": "text - 7"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "value::all"
                    ],
                    "parameters": [
                      {
                        "id": "2cf5311e-e4c3-4cbd-91d9-94f2e139ed50",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "value": {
                          "durationMs": 604800000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 2592000000
                            }
                          ]
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                      },
                      {
                        "id": "b31e4dd2-f34c-4455-86e7-9d7785586ba2",
                        "version": "KqlParameterItem/1.0",
                        "name": "Workspace",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name\r\n",
                        "crossComponentResources": [
                          "value::all"
                        ],
                        "value": [
                          "[parameters('workspaceId')]"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n|  where EventLog in (\"System\",\"Application\",\"Operations Manager\")\r\n| project EventLog,EventLevelName\r\n| evaluate pivot(EventLevelName)",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Windows Events - Summary",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "EventLog",
                    "exportParameterName": "EventLog",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Information",
                          "formatter": 18,
                          "formatOptions": {
                            "showIcon": true,
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ],
                            "aggregation": "Unique"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Warning",
                          "formatter": 18,
                          "formatOptions": {
                            "showIcon": true,
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ],
                            "aggregation": "Unique"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Error",
                          "formatter": 18,
                          "formatOptions": {
                            "showIcon": true,
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "3",
                                "text": "{0}{1}"
                              }
                            ],
                            "aggregation": "Unique"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventID != 0\r\n| summarize count() by bin(TimeGenerated, 1h),EventLevelName\r\n| sort by TimeGenerated desc\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Events count hourly distribution",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "areachart",
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Information",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Warning",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "Error",
                          "color": "red"
                        }
                      ]
                    }
                  },
                  "customWidth": "50",
                  "showPin": true,
                  "name": "query - 6"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"Error\"\r\n| summarize Count=count() by Computer, EventLog, EventLevelName\r\n| sort by Count\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Error Events",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Computer",
                        "parameterName": "Computer",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "EventLog",
                        "parameterName": "EventLog",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Count",
                        "parameterName": "Count",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "EventLevelName",
                        "parameterName": "EventLevelName",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "EventLog",
                          "formatter": 5,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "EventLevelName",
                          "formatter": 5,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Count",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "red",
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"Warning\"\r\n| summarize Count=count() by Computer, EventLog,EventLevelName\r\n| sort by Count\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Warning Events",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Computer",
                        "parameterName": "Computer",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "EventLog",
                        "parameterName": "EventLog",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Count",
                        "parameterName": "Count",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "EventLevelName",
                        "parameterName": "EventLevelName",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "EventLog",
                          "formatter": 5,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "EventLevelName",
                          "formatter": 5,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Count",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "yellow",
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "34",
                  "showPin": true,
                  "name": "query - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"Information\"\r\n| summarize Count=count() by Computer, EventLog,EventLevelName\r\n| sort by Count\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Information Events",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "Computer",
                        "parameterName": "Computer",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "EventLog",
                        "parameterName": "EventLog",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "Count",
                        "parameterName": "Count",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "EventLevelName",
                        "parameterName": "EventLevelName",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "EventLog",
                          "formatter": 5,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "EventLevelName",
                          "formatter": 5,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Count",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "showPin": true,
                  "name": "query - 4"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Event\r\n|  where EventLog == \"{EventLog}\" and EventLevelName == \"{EventLevelName}\" and Computer == \"{Computer}\" and EventID != 0\r\n| project TimeGenerated,Computer, EventLog, [\"Level\"]=EventLevelName, [\"Rendered Description\"]=RenderedDescription\r\n| sort by Computer, EventLog, [\"Level\"]\r\n\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Event ID Description",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Level",
                          "formatter": 18,
                          "formatOptions": {
                            "showIcon": true,
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Error",
                                "representation": "error",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Information",
                                "representation": "info",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    }
                  },
                  "showPin": true,
                  "name": "query - 5"
                }
              ],
              "isLocked": false,
              "fallbackResourceIds": [
                "Azure Monitor"
              ]
            },
            "osPerformanceWorkbookContent": {
              "version": "Notebook/1.0",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Operating System - Performance and capacity"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "parameters": [
                      {
                        "id": "b82b64ff-f991-4f44-ac88-aee7c086cc48",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 86400000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2592000000
                            }
                          ],
                          "allowCustom": true
                        }
                      },
                      {
                        "id": "e1ecac91-1691-4f48-b4c0-803e39e00f43",
                        "version": "KqlParameterItem/1.0",
                        "name": "Workspace",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name\r\n",
                        "crossComponentResources": [
                          "value::all"
                        ],
                        "value": [
                          "[parameters('workspaceId')]"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "fb251a5f-fd61-44fe-853b-d31624075420",
                        "version": "KqlParameterItem/1.0",
                        "name": "ComputerFilter",
                        "type": 1,
                        "isHiddenWhenLocked": true,
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange",
                        "value": ""
                      },
                      {
                        "id": "787717b8-68fe-4d5a-a57d-ed900f7d8981",
                        "version": "KqlParameterItem/1.0",
                        "name": "Counter",
                        "type": 2,
                        "isRequired": true,
                        "query": "Perf\r\n| where TimeGenerated {TimeRange}\r\n| summarize by CounterName, ObjectName, CounterText = CounterName\r\n| order by ObjectName asc, CounterText asc\r\n| project Counter = pack('counter', CounterName, 'object', ObjectName), CounterText, group = ObjectName",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "id": "852b924f-41bc-4081-a0b6-c758873e702d",
                        "version": "KqlParameterItem/1.0",
                        "name": "Order",
                        "type": 2,
                        "isRequired": true,
                        "isHiddenWhenLocked": true,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[[\r\n    { \"value\":\"asc\", \"label\":\"asc\", \"selected\": false },\r\n    { \"value\":\"desc\", \"label\":\"desc\", \"selected\": true }\r\n]",
                        "timeContext": {
                          "durationMs": 0
                        },
                        "timeContextFromParameter": "TimeRange"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.insights/components"
                  },
                  "name": "parameters - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trend = ( Heartbeat\r\n   | make-series InternalTrend=iff(count() > 0, 1, 0) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 15m by Computer\r\n    | extend Trend=array_slice(InternalTrend, array_length(InternalTrend) - 30, array_length(InternalTrend)-1)); \r\n\r\nlet PerfCPU = (Perf\r\n    | where ObjectName contains \"Processor\" and CounterName == \"% Processor Time\" and (InstanceName==\"_Total\" or InstanceName==\"total\")\r\n    | summarize AvgCPU=round(avg(CounterValue),2), MaxCPU=round(max(CounterValue),2) by Computer\r\n    | extend StatusCPU = case (\r\n                  AvgCPU > 80, 2,\r\n                  AvgCPU > 50, 1,\r\n                  AvgCPU <= 50, 0, -1\r\n                )\r\n    );\r\n\r\nlet PerfMemory = (Perf\r\n    | where ObjectName contains \"Memory\" and (CounterName == \"Available Bytes\" or CounterName == \"Available MBytes Memory\")\r\n    | summarize AvgMEM=round(avg(CounterValue/1024),2), MaxMEM=round(max(CounterValue/1024),2) by Computer\r\n    | extend StatusMEM = case (\r\n                  AvgMEM > 4, 0,\r\n                  AvgMEM >= 1, 1,\r\n                  AvgMEM < 1, 2, -1\r\n            )\r\n    );\r\n\r\nlet PerfDisk = (Perf\r\n    | where (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\") and CounterName == \"Free Megabytes\" and (InstanceName == \"_Total\" or InstanceName == \"/\")\r\n    | summarize AvgDisk=round(avg(CounterValue),2), (TimeGenerated,LastDisk)=arg_max(TimeGenerated,round(CounterValue,2)) by Computer\r\n    | extend StatusDisk = case (\r\n                  AvgDisk < 5000, 2,\r\n                  AvgDisk < 30000, 1,\r\n                  AvgDisk >= 30000, 0,-1\r\n)\r\n    | project Computer, AvgDisk , LastDisk ,StatusDisk\r\n    );\r\nPerfCPU\r\n| join (PerfMemory) on Computer\r\n| join (PerfDisk) on Computer\r\n| join (trend) on Computer\r\n| project Computer,StatusCPU, AvgCPU,MaxCPU,StatusMEM,AvgMEM,MaxMEM,StatusDisk,AvgDisk,LastDisk, Trend\r\n| sort by Computer ",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Top servers (data aggregated based on TimeRange)",
                    "timeContextFromParameter": "TimeRange",
                    "exportFieldName": "Computer",
                    "exportParameterName": "Computer",
                    "exportDefaultValue": "All",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "StatusCPU",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "4",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvgCPU",
                          "formatter": 2,
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MaxCPU",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "StatusMEM",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "critical",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvgMEM",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 5,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "MaxMEM",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 39,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "StatusDisk",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "4",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvgDisk",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 38,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "LastDisk",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 4,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 10,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "Max",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "yellowOrangeRed"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "Min",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "yellowOrangeRed",
                            "aggregation": "Min"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "$gen_number_AvgCPU_2",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "StatusCPU",
                          "label": "CPU"
                        },
                        {
                          "columnId": "AvgCPU",
                          "label": "CPU (avg)"
                        },
                        {
                          "columnId": "MaxCPU",
                          "label": "CPU (max)"
                        },
                        {
                          "columnId": "StatusMEM",
                          "label": "Memory"
                        },
                        {
                          "columnId": "AvgMEM",
                          "label": "Memory (avg)"
                        },
                        {
                          "columnId": "MaxMEM",
                          "label": "Memory (max)"
                        },
                        {
                          "columnId": "StatusDisk",
                          "label": "Disk"
                        },
                        {
                          "columnId": "AvgDisk",
                          "label": "Disk (avg)"
                        },
                        {
                          "columnId": "LastDisk",
                          "label": "Disk (last)"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_number_AvgCPU_2",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "showPin": true,
                  "name": "query - 2",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "# Top Performance"
                  },
                  "name": "text - 8"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Processor(total)\\% Processor Time"
                  },
                  "name": "text - 10"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TopComputers = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName contains \"Processor\" and CounterName == \"% Processor Time\" and (InstanceName==\"_Total\" or InstanceName==\"total\")\r\n| summarize AvgCPU = avg(CounterValue) by Computer \r\n| top 10 by AvgCPU desc\r\n| project Computer; \r\nPerf \r\n| where Computer in (TopComputers) \r\n| where ObjectName contains \"Processor\" and CounterName == \"% Processor Time\" and (InstanceName==\"_Total\" or InstanceName==\"total\") \r\n| summarize Used_CPU = round(avg(CounterValue),1) by Computer, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart",
                    "size": 0,
                    "aggregation": 3,
                    "showAnalytics": true,
                    "title": "% Processor Time - Top 10 Computers",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "chartSettings": {
                      "showLegend": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 4",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName contains \"Processor\" and CounterName == \"% Processor Time\" and (InstanceName==\"_Total\" or InstanceName==\"total\") \r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan(\"00:30:00\") by Computer     \r\n| project Computer, [\"Trend\"] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName contains \"Processor\" and CounterName == \"% Processor Time\" and (InstanceName==\"_Total\" or InstanceName==\"total\")\r\n| summarize Average=round(avg(CounterValue),3) by Computer\r\n| join (trend) on Computer\r\n| extend Status = case (\r\n                  Average > 80, \"Critical\",\r\n                  Average > 50, \"Warning\",\r\n                  Average <= 50, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project Status, Computer, Average, Trend\r\n| sort by Average ",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Thresholds (Warning>50; Critical>80) - All Computers",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "green"
                          }
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "name": "query - 9",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TopComputers = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| summarize AvailableGBytes = round(avg(CounterValue)/1024,2) by Computer\r\n| top 10 by AvailableGBytes asc\r\n| project Computer; \r\nPerf \r\n| where Computer in (TopComputers) \r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| summarize AvailableGBytes = round(avg(CounterValue)/1024,2) by Computer, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart",
                    "size": 0,
                    "aggregation": 3,
                    "showAnalytics": true,
                    "title": "Available MBytes - Top 10 Computers",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "timechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AvailableMBytes",
                          "formatter": 0,
                          "formatOptions": {
                            "showIcon": true
                          },
                          "numberFormat": {
                            "unit": 4,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        }
                      ]
                    },
                    "chartSettings": {
                      "createOtherGroup": 0,
                      "showLegend": true,
                      "ySettings": {
                        "unit": 5,
                        "min": null,
                        "max": null
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 5",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan(\"00:30:00\") by Computer     \r\n| project Computer, [\"Trend\"] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\" )\r\n| summarize [\"Available GBytes\"]=round(avg(CounterValue)/1024,2) by Computer\r\n| join (trend) on Computer\r\n| extend Status = case (\r\n                  [\"Available GBytes\"] > 4, \"Healthy\",\r\n                  [\"Available GBytes\"] >= 1, \"Warning\",\r\n                  [\"Available GBytes\"] < 1, \"Critical\", \"Unknown\"\r\n)\r\n| project Status, Computer, [\"Available GBytes\"], Trend\r\n| sort by [\"Available GBytes\"] asc",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Thresholds (Warning < 4 GB; Critical < 1 GB) - All Computers",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Available GBytes",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 5,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "green"
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 5,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Available GBytes",
                          "label": "Average"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "name": "query - 9 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TopComputers = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\"  or CounterName == \"% Used Memory\")\r\n| summarize PctCommittedBytes = round(avg(CounterValue),2) by Computer\r\n| top 10 by PctCommittedBytes desc\r\n| project Computer; \r\nPerf \r\n| where Computer in (TopComputers) \r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\"  or CounterName == \"% Used Memory\")\r\n| summarize PctCommittedBytes = round(avg(CounterValue),2) by Computer, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart",
                    "size": 0,
                    "aggregation": 3,
                    "showAnalytics": true,
                    "title": "% Committed Bytes In Use - Top 10 Computers",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "chartSettings": {
                      "group": "Computer",
                      "createOtherGroup": 0,
                      "showLegend": true,
                      "ySettings": {
                        "unit": 1,
                        "min": 0,
                        "max": 100
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 9",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\" or CounterName==\"% Used Memory\")\r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan(\"00:30:00\") by Computer     \r\n| project Computer, [\"Trend\"] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where ObjectName == \"Memory\" and (CounterName == \"% Committed Bytes In Use\" or CounterName==\"% Used Memory\") \r\n| summarize Average=round(avg(CounterValue),3) by Computer\r\n| join (trend) on Computer\r\n| extend Status = case (\r\n                  Average > 90, \"Critical\",\r\n                  Average > 60, \"Warning\",\r\n                  Average <= 60, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project Status, Computer, Average, Trend\r\n| sort by Average ",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Thresholds (Warning>60; Critical>90) - All Computers",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "green"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "$gen_heatmap_Average_2",
                          "sortOrder": 2
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_heatmap_Average_2",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 9 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Logical Disk: _Free Megabytes_ and _Avg read/write per sec_ "
                  },
                  "name": "text - 12"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TopDiscos = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize FreeSpace = round(avg(CounterValue),2) by Disco\r\n| top 10 by FreeSpace asc\r\n| project Disco; \r\nPerf \r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer)\r\n| where Disco in (TopDiscos) \r\n| summarize FreeSpace = round(avg(CounterValue),2) by Disco, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n\r\n\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "showAnalytics": true,
                    "title": "Free Megabytes - Top 10 Computers-Volumes",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "timechart",
                    "chartSettings": {
                      "showLegend": true,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 4,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 6",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| make-series Average = round(avg(CounterValue), 3) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan(\"00:30:00\") by Disco     \r\n| project Disco, [\"Trend\"] = Average; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Free Megabytes\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or (InstanceName contains \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize Average=round(avg(CounterValue),2) by Disco,Computer,InstanceName\r\n| join (trend) on Disco\r\n| extend Status = case (\r\n                  Average <5000, \"Critical\",\r\n                  Average < 30000, \"Warning\",\r\n                  Average >= 30000, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project Status, Computer,Disk=InstanceName, Average, Trend\r\n| sort by Average asc ",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Thresholds (Warning < 30GB; Critical < 5GB) - All Computers-Volumes",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 4,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumFractionDigits": 2,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "green"
                          }
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "50",
                  "name": "query - 9 - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TopDiscos = Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Reads/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or ( InstanceName == \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGReads = avg(CounterValue) by Disco\r\n| top 10 by AVGReads desc\r\n| project Disco; \r\nPerf \r\n| where CounterName == \"Disk Reads/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or ( InstanceName == \"/\")\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| where Disco in (TopDiscos) \r\n| summarize AVGReads = avg(CounterValue) by Disco, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart\r\n\r\n\r\n",
                    "size": 0,
                    "aggregation": 3,
                    "showAnalytics": true,
                    "title": "Disk Reads/sec - Top 10 Computers-Volumes",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "timechart",
                    "chartSettings": {
                      "group": "Disco",
                      "createOtherGroup": 22,
                      "showLegend": true
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 6 - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\") and CounterName == \"Disk Reads/sec\" and ((strlen(InstanceName) == 2 and InstanceName contains \":\") or (InstanceName == \"/\"))\r\n| extend Disco = strcat(InstanceName, \" - \",Computer)\r\n| make-series AVGReads = round(avg(CounterValue),2) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan(\"00:30:00\") by Disco     \r\n| project Disco, [\"Trend\"] = AVGReads; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\") and CounterName == \"Disk Reads/sec\" and ((strlen(InstanceName) == 2 and InstanceName contains \":\") or (InstanceName == \"/\"))\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGReads=round(avg(CounterValue),2) by Disco,Computer,InstanceName\r\n| join (trend) on Disco\r\n| extend Status = case (\r\n                  AVGReads > 25, \"Critical\",\r\n                  AVGReads > 15, \"Warning\",\r\n                  AVGReads <= 15, \"Healthy\", \"Unknown\"\r\n)\r\n| project  Status, Computer,Disk=InstanceName, [\"Reads\"]=AVGReads, Trend\r\n| sort by [\"Reads\"] desc ",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Thresholds (Warning > 15Reads/sec; Critical > 25Reads/sec) - All Computers-Volumes",
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "green"
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blue"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "Reads",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Reads",
                          "label": "Average"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "Reads",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 9 - Copy - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let TopDiscos= Perf \r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGWrites = avg(CounterValue) by Disco\r\n| top 10 by AVGWrites desc\r\n| project Disco; \r\nPerf \r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| where Disco in (TopDiscos) \r\n| summarize AVGWrites = avg(CounterValue) by Disco, bin(TimeGenerated, ({TimeRange:end} - {TimeRange:start})/100)\r\n| render timechart\r\n\r\n\r\n",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Disk Writes/sec - Top 10 Computers-Volumes",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "visualization": "timechart",
                    "chartSettings": {
                      "group": "Disco",
                      "createOtherGroup": 22,
                      "showLegend": true
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 6 - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let trend = \r\nPerf           \r\n| where Computer contains \"{Computer}\"  or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| make-series AVGWrites = round(avg(CounterValue),2) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step totimespan(\"00:30:00\") by Disco     \r\n| project Disco, [\"Trend\"] = AVGWrites; \r\n\r\nPerf\r\n| where Computer contains \"{Computer}\" or \"{Computer}\"==\"All\"\r\n| where CounterName == \"Disk Writes/sec\" and (ObjectName == \"LogicalDisk\" or ObjectName==\"Logical Disk\")\r\n| where (strlen(InstanceName) ==2 and InstanceName contains \":\") or InstanceName==\"/\"\r\n| extend Disco = strcat(InstanceName, \" - \",Computer )\r\n| summarize AVGWrites=round(avg(CounterValue),2) by Disco,Computer,InstanceName\r\n| join (trend) on Disco\r\n| extend Status = case (\r\n                  AVGWrites > 25, \"Critical\",\r\n                  AVGWrites > 15, \"Warning\",\r\n                  AVGWrites <= 15, \"Healthy\", \"Unknown\"\r\n)\r\n\r\n| project  Status, Computer,Disk=InstanceName, [\"Writes\"]=AVGWrites, Trend\r\n| sort by [\"Writes\"] desc ",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Thresholds (Warning > 15Writes/sec; Critical > 25Writes/sec) - All Computers-Volumes",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Critical",
                                "representation": "critical",
                                "text": "{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 21,
                          "formatOptions": {
                            "palette": "green"
                          }
                        },
                        {
                          "columnMatch": "Average",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blue"
                          }
                        }
                      ],
                      "sortBy": [
                        {
                          "itemKey": "Writes",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Writes",
                          "label": "Average"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "Writes",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "50",
                  "name": "query - 9 - Copy - Copy - Copy - Copy",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ],
              "isLocked": false,
              "fallbackResourceIds": [
                "azure monitor"
              ]
            },
            "alertsConsoleWorkbookContent": {
              "version": "Notebook/1.0",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "parameters": [
                      {
                        "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscription",
                        "label": "Subscriptions",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                          "[subscription().id]"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": false,
                          "showDefault": false
                        }
                      },
                      {
                        "id": "b616a3a3-4271-4208-b1a9-a92a78efed08",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceGroups",
                        "label": "Resource groups",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "Resources\r\n| summarize by resourceGroup\r\n| order by resourceGroup asc\r\n| project id=resourceGroup, resourceGroup",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*"
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "0e85e0e4-a7e8-4ea8-b291-e444c317843a",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceTypes",
                        "label": "Resource types",
                        "type": 7,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where \"*\" in ({ResourceGroups}) or resourceGroup in ({ResourceGroups})\r\n| summarize by type\r\n| project type, label=type\r\n",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*"
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
                        "version": "KqlParameterItem/1.0",
                        "name": "Resources",
                        "type": 5,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "Resources\r\n| where \"*\" in ({ResourceTypes}) or type in~({ResourceTypes})\r\n| where '*' in~({ResourceGroups}) or resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = name, selected = Rank <= 10, group = resourceGroup",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "defaultItemsText": "First 10"
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "015d1a5e-357f-4e01-ac77-598e7b493db0",
                        "version": "KqlParameterItem/1.0",
                        "name": "timeRange",
                        "label": "Time Range",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 2592000000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            }
                          ],
                          "allowCustom": true
                        }
                      },
                      {
                        "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                        "version": "KqlParameterItem/1.0",
                        "name": "State",
                        "type": 2,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "jsonData": "{\"version\":\"1.0.0\",\"content\":\"[ \r\n    {\"id\":\"New\", \"label\": \"New\"},\r\n    {\"id\":\"Acknowledged\", \"label\": \"Acknowledged\"},\r\n    {\"id\":\"Closed\", \"label\": \"Closed\"}\r\n]\",\"transformers\":null}",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "queryType": 8
                      }
                    ],
                    "style": "above",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources \r\n| where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where properties.essentials.startDateTime {timeRange}  \r\n| where properties.essentials.actionStatus.isSuppressed == false\r\n| extend Severity=tostring(properties.essentials.severity)\r\n| extend State=tostring(properties.essentials.alertState)\r\n| extend comp = properties.context.context.condition.allOf[0].dimensions\r\n| mvexpand comp\r\n| where comp.name == 'Computer'\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Name=name, Severity, State=tostring(properties.essentials.alertState), MonitorCondition=tostring(properties.essentials.monitorCondition), SignalType=tostring(properties.essentials.signalType), TargetResource = split(comp.value, '.')[0]\r\n| order by StartTime desc\r\n",
                    "size": 0,
                    "title": "Azure Monitor alerts",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AlertId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "StartTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "bladeOpenContext": {
                              "bladeName": "AlertDetailsTemplateBlade",
                              "extensionName": "Microsoft_Azure_Monitoring",
                              "bladeParameters": [
                                {
                                  "name": "alertId",
                                  "source": "column",
                                  "value": "AlertId"
                                },
                                {
                                  "name": "alertName",
                                  "source": "column",
                                  "value": "Name"
                                },
                                {
                                  "name": "invokedFrom",
                                  "source": "static",
                                  "value": "Workbooks"
                                }
                              ]
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "View alert details"
                          }
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "MonitorCondition",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Fired",
                                "representation": "Fired",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Resolved",
                                "representation": "Resolved",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "TargetResource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "ResourceType",
                          "formatter": 16,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Resource Type",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "essentials",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "query - 3"
                }
              ],
              "isLocked": false,
              "fallbackResourceIds": [
                "azure monitor"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2022-06-01",
              "name": "[variables('actionGroupName')]",
              "location": "Global",
              "properties": {
                "groupShortName": "agarcservers",
                "enabled": true,
                "emailReceivers": [
                  {
                    "name": "ArcServersEmail",
                    "emailAddress": "[parameters('emailAddress')]"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "Processor Time Percent",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "Processor Time Percent",
                "description": "Monitor Alert for Processor Time Percent",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_% Processor Time",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Processor"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "Processor Time Percent",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for Processor Time Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 80,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_% Processor Time",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Processor"
                          ]
                        }
                      ],
                      "operator": "GreaterThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'Processor Time Percent')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "Memory Available MBytes",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "Memory Available MBytes",
                "description": "Monitor alert for Memory Available MBytes",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_Available MBytes",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Memory"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "Memory Available MBytes",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor alert for Memory Available MBytes",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 1500,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_Available MBytes",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Memory"
                          ]
                        }
                      ],
                      "operator": "LessThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'Memory Available MBytes')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "Memory Commited Bytes in use Percent",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "Memory Commited Bytes in use Percent",
                "description": "Monitor Alert for Memory Commited Bytes in use Percent",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_% Committed Bytes In Use",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Memory"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "Memory Commited Bytes in use Percent",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for Memory Commited Bytes in use Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 80,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_% Committed Bytes In Use",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Memory"
                          ]
                        }
                      ],
                      "operator": "GreaterThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'Memory Commited Bytes in use Percent')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "Memory Pages per Sec",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "Memory Pages per Sec",
                "description": "Monitor Alert for Memory Pages per Sec",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_Pages/sec",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Memory"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "Memory Pages per Sec",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for Memory Pages per Sec",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 5000,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_Pages/sec",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "Memory"
                          ]
                        }
                      ],
                      "operator": "GreaterThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'Memory Pages per Sec')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "LogicalDisk Avg. Disk sec per Read",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "LogicalDisk Avg. Disk sec per Read",
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Read",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_Avg. Disk sec/Read",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "LogicalDisk Avg. Disk sec per Read",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Read",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": "[json('0.04')]",
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_Avg. Disk sec/Read",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ],
                      "operator": "GreaterThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'LogicalDisk Avg. Disk sec per Read')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "LogicalDisk Avg. Disk sec per Write",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "LogicalDisk Avg. Disk sec per Write",
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Write",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_Avg. Disk sec/Write",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "LogicalDisk Avg. Disk sec per Write",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for LogicalDisk Avg. Disk sec per Write",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": "[json('0.04')]",
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_Avg. Disk sec/Write",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ],
                      "operator": "GreaterThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'LogicalDisk Avg. Disk sec per Write')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "LogicalDisk Current Queue Length",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "LogicalDisk Current Queue Length",
                "description": "Monitor Alert for LogicalDisk Current Queue Length",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_Current Disk Queue Length",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "LogicalDisk Current Queue Length",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for LogicalDisk Current Queue Length",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 2,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_Current Disk Queue Length",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ],
                      "operator": "GreaterThan",
                      "timeAggregation": "Total",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'LogicalDisk Current Queue Length')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "LogicalDisk Free Space Percent",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "LogicalDisk Free Space Percent",
                "description": "Monitor Alert for LogicalDisk Free Space Percent",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_% Free Space",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "LogicalDisk Free Space Percent",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for LogicalDisk Free Space Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 10,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_% Free Space",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ],
                      "operator": "LessThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'LogicalDisk Free Space Percent')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "LogicalDisk Idle Time Percent",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "LogicalDisk Idle Time Percent",
                "description": "Monitor Alert for LogicalDisk Idle Time Percent",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Average_% Idle Time",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "LogicalDisk Idle Time Percent",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for LogicalDisk Idle Time Percent",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 20,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Average_% Idle Time",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        },
                        {
                          "name": "ObjectName",
                          "operator": "Include",
                          "values": [
                            "LogicalDisk"
                          ]
                        }
                      ],
                      "operator": "LessThan",
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'LogicalDisk Idle Time Percent')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "Heartbeat Missed",
              "location": "[parameters('location')]",
              "tags": {
                "[format('{0}', format('{0}{1}', variables('convertRuleTag'), parameters('workspaceId')))]": "Resource"
              },
              "kind": "LogToMetric",
              "properties": {
                "displayName": "Heartbeat Missed",
                "description": "Monitor Alert for Heartbeat Missed",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "criteria": {
                  "allOf": [
                    {
                      "metricName": "Heartbeat",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "Heartbeat Missed",
              "location": "global",
              "tags": {},
              "properties": {
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "description": "Monitor Alert for Heartbeat Missed",
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "threshold": 0,
                      "name": "Metric1",
                      "metricNamespace": "Microsoft.OperationalInsights/workspaces",
                      "metricName": "Heartbeat",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        }
                      ],
                      "operator": "LessThanOrEqual",
                      "timeAggregation": "Total",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ],
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.OperationalInsights/workspaces",
                "targetResourceRegion": "[parameters('location')]",
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]",
                "[resourceId('Microsoft.Insights/scheduledQueryRules', 'Heartbeat Missed')]"
              ]
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-08-01",
              "name": "Unexpected System Shutdown",
              "location": "[parameters('location')]",
              "properties": {
                "displayName": "Unexpected System Shutdown",
                "description": "Monitor Alert for Unexpected System Shutdown",
                "severity": "[variables('alertsSeverity')]",
                "enabled": true,
                "evaluationFrequency": "[variables('evaluationFrequency')]",
                "scopes": [
                  "[parameters('workspaceId')]"
                ],
                "targetResourceTypes": [
                  "Microsoft.OperationalInsights/workspaces"
                ],
                "windowSize": "[variables('windowSize')]",
                "criteria": {
                  "allOf": [
                    {
                      "query": "Event | where (EventID == 6008 and Source ==\"EventLog\") or (EventID == 1074 and Source == \"User32\" and (RenderedDescription has \"shutdown\" or RenderedDescription has \"power off\")) \n",
                      "timeAggregation": "Count",
                      "dimensions": [
                        {
                          "name": "Computer",
                          "operator": "Include",
                          "values": [
                            "*"
                          ]
                        }
                      ],
                      "resourceIdColumn": "_ResourceId",
                      "operator": "GreaterThan",
                      "threshold": 0,
                      "failingPeriods": {
                        "numberOfEvaluationPeriods": 1,
                        "minFailingPeriodsToAlert": 1
                      }
                    }
                  ]
                },
                "autoMitigate": false,
                "actions": {
                  "actionGroups": [
                    "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/workbooks",
              "apiVersion": "2021-03-08",
              "name": "[guid(variables('windowsEventsWorkbookName'))]",
              "location": "[parameters('location')]",
              "kind": "shared",
              "properties": {
                "displayName": "[variables('windowsEventsWorkbookName')]",
                "serializedData": "[string(variables('windowsEventsWorkbookContent'))]",
                "version": "1.0",
                "sourceId": "azure monitor",
                "category": "workbook"
              }
            },
            {
              "type": "Microsoft.Insights/workbooks",
              "apiVersion": "2021-03-08",
              "name": "[guid(variables('osPerformanceWorkbookName'))]",
              "location": "[parameters('location')]",
              "kind": "shared",
              "properties": {
                "displayName": "[variables('osPerformanceWorkbookName')]",
                "serializedData": "[string(variables('osPerformanceWorkbookContent'))]",
                "version": "1.0",
                "sourceId": "azure monitor",
                "category": "workbook"
              }
            },
            {
              "type": "Microsoft.Insights/workbooks",
              "apiVersion": "2021-03-08",
              "name": "[guid(variables('alertsConsoleWorkbookName'))]",
              "location": "[parameters('location')]",
              "kind": "shared",
              "properties": {
                "displayName": "[variables('alertsConsoleWorkbookName')]",
                "serializedData": "[string(variables('alertsConsoleWorkbookContent'))]",
                "version": "1.0",
                "sourceId": "azure monitor",
                "category": "workbook"
              }
            },
            {
              "type": "Microsoft.Portal/dashboards",
              "apiVersion": "2015-08-01-preview",
              "name": "[guid(variables('azureDashboardName'))]",
              "location": "[parameters('location')]",
              "tags": {
                "hidden-title": "[variables('azureDashboardName')]"
              },
              "properties": {
                "lenses": {
                  "0": {
                    "order": 0,
                    "parts": {
                      "0": {
                        "position": {
                          "x": 0,
                          "y": 0,
                          "colSpan": 17,
                          "rowSpan": 4
                        },
                        "metadata": {
                          "inputs": [
                            {
                              "name": "ComponentId",
                              "value": "azure monitor",
                              "isOptional": true
                            },
                            {
                              "name": "TimeContext",
                              "value": null,
                              "isOptional": true
                            },
                            {
                              "name": "ResourceIds",
                              "value": [
                                "azure monitor"
                              ],
                              "isOptional": true
                            },
                            {
                              "name": "ConfigurationId",
                              "value": "[resourceId('Microsoft.Insights/workbooks', guid(variables('osPerformanceWorkbookName')))]",
                              "isOptional": true
                            },
                            {
                              "name": "Type",
                              "value": "workbook",
                              "isOptional": true
                            },
                            {
                              "name": "GalleryResourceType",
                              "value": "azure monitor",
                              "isOptional": true
                            },
                            {
                              "name": "PinName",
                              "value": "[variables('osPerformanceWorkbookName')]",
                              "isOptional": true
                            },
                            {
                              "name": "StepSettings",
                              "value": "{\"version\":\"KqlItem/1.0\",\"query\":\"let trend = ( Heartbeat\\r\\n    | make-series InternalTrend=iff(count() > 0, 1, 0) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 15m by Computer\\r\\n    | extend Trend=array_slice(InternalTrend, array_length(InternalTrend) - 30, array_length(InternalTrend)-1)); \\r\\n\\r\\nlet PerfCPU = (Perf\\r\\n    | where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" and InstanceName==\"total\"\\r\\n    | summarize AvgCPU=round(avg(CounterValue),2), MaxCPU=round(max(CounterValue),2) by Computer\\r\\n    | extend StatusCPU = case (\\r\\n                  AvgCPU > 80, 2,\\r\\n                  AvgCPU > 50, 1,\\r\\n                  AvgCPU <= 50, 0, -1\\r\\n                )\\r\\n    );\\r\\n\\r\\nlet PerfMemory = (Perf\\r\\n    | where ObjectName == \"Memory\" and (CounterName == \"Available MBytes\" or CounterName == \"Available MBytes Memory\")\\r\\n    | summarize AvgMEM=round(avg(CounterValue/1024),2), MaxMEM=round(max(CounterValue/1024),2) by Computer\\r\\n    | extend StatusMEM = case (\\r\\n                  AvgMEM > 4, 0,\\r\\n                  AvgMEM >= 1, 1,\\r\\n                  AvgMEM < 1, 2, -1\\r\\n            )\\r\\n    );\\r\\n\\r\\nlet PerfDisk = (Perf\\r\\n    | where (ObjectName == \"LogicalDisk\" or ObjectName == \"Logical Disk\") and CounterName == \"Free Megabytes\" and (InstanceName =~ \"C:\" or InstanceName == \"/\")\\r\\n    | summarize AvgDisk=round(avg(CounterValue),2), (TimeGenerated,LastDisk)=arg_max(TimeGenerated,round(CounterValue,2)) by Computer\\r\\n    | extend StatusDisk = case (\\r\\n                  AvgDisk < 5000, 2,\\r\\n                  AvgDisk < 30000, 1,\\r\\n                  AvgDisk >= 30000, 0,-1\\r\\n)\\r\\n    | project Computer, AvgDisk , LastDisk ,StatusDisk\\r\\n    );\\r\\nPerfCPU\\r\\n| join (PerfMemory) on Computer\\r\\n| join (PerfDisk) on Computer\\r\\n| join (trend) on Computer\\r\\n| project Computer,StatusCPU, AvgCPU,MaxCPU,StatusMEM,AvgMEM,MaxMEM,StatusDisk,AvgDisk,LastDisk, Trend\\r\\n| sort by Computer \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top servers (data aggregated based on TimeRange)\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Computer\",\"exportParameterName\":\"Computer\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"StatusCPU\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"success\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"2\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"2\",\"representation\":\"4\",\"text\":\"{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"Unknown\",\"text\":\"{1}\"}]}},{\"columnMatch\":\"AvgCPU\",\"formatter\":2,\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"MaxCPU\",\"formatter\":0,\"numberFormat\":{\"unit\":1,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"StatusMEM\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"success\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"2\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"2\",\"representation\":\"critical\",\"text\":\"{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"unknown\",\"text\":\"{1}\"}]}},{\"columnMatch\":\"AvgMEM\",\"formatter\":0,\"numberFormat\":{\"unit\":5,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"MaxMEM\",\"formatter\":0,\"numberFormat\":{\"unit\":39,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},{\"columnMatch\":\"StatusDisk\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"0\",\"representation\":\"success\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"1\",\"representation\":\"2\",\"text\":\"{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"2\",\"representation\":\"4\",\"text\":\"{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{1}\"}]}},{\"columnMatch\":\"AvgDisk\",\"formatter\":0,\"numberFormat\":{\"unit\":38,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},{\"columnMatch\":\"LastDisk\",\"formatter\":0,\"numberFormat\":{\"unit\":4,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2}}},{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"Max\",\"formatter\":0,\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Average\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowOrangeRed\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":false}}},{\"columnMatch\":\"Min\",\"formatter\":8,\"formatOptions\":{\"palette\":\"yellowOrangeRed\",\"aggregation\":\"Min\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}}],\"sortBy\":[{\"itemKey\":\"$gen_number_AvgCPU_2\",\"sortOrder\":2}],\"labelSettings\":[{\"columnId\":\"StatusCPU\",\"label\":\"CPU\"},{\"columnId\":\"AvgCPU\",\"label\":\"CPU (avg)\"},{\"columnId\":\"MaxCPU\",\"label\":\"CPU (max)\"},{\"columnId\":\"StatusMEM\",\"label\":\"Memory\"},{\"columnId\":\"AvgMEM\",\"label\":\"Memory (avg)\"},{\"columnId\":\"MaxMEM\",\"label\":\"Memory (max)\"},{\"columnId\":\"StatusDisk\",\"label\":\"Disk\"},{\"columnId\":\"AvgDisk\",\"label\":\"Disk (avg)\"},{\"columnId\":\"LastDisk\",\"label\":\"Disk (last)\"}]},\"sortBy\":[{\"itemKey\":\"$gen_number_AvgCPU_2\",\"sortOrder\":2}]}",
                              "isOptional": true
                            },
                            {
                              "name": "ParameterValues",
                              "value": {
                                "TimeRange": {
                                  "type": 4,
                                  "value": {
                                    "durationMs": 86400000
                                  },
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "Last 24 hours",
                                  "displayName": "TimeRange",
                                  "formattedValue": "Last 24 hours"
                                },
                                "Workspace": {
                                  "type": 5,
                                  "value": [
                                    "[parameters('workspaceId')]"
                                  ],
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "[parameters('workspaceId')]",
                                  "displayName": "Workspace",
                                  "formattedValue": "[parameters('workspaceId')]"
                                },
                                "ComputerFilter": {
                                  "type": 1,
                                  "value": "",
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "<unset>",
                                  "displayName": "ComputerFilter",
                                  "formattedValue": ""
                                },
                                "Counter": {
                                  "type": 2,
                                  "value": "{\"counter\":\"% Free Space\",\"object\":\"LogicalDisk\"}",
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "% Free Space",
                                  "displayName": "Counter",
                                  "formattedValue": "{\"counter\":\"% Free Space\",\"object\":\"LogicalDisk\"}"
                                },
                                "Order": {
                                  "type": 2,
                                  "value": "desc",
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "desc",
                                  "displayName": "Order",
                                  "formattedValue": "desc"
                                }
                              },
                              "isOptional": true
                            },
                            {
                              "name": "Location",
                              "value": "[parameters('location')]",
                              "isOptional": true
                            }
                          ],
                          "type": "Extension/AppInsightsExtension/PartType/PinnedNotebookQueryPart"
                        }
                      },
                      "1": {
                        "position": {
                          "x": 0,
                          "y": 4,
                          "colSpan": 12,
                          "rowSpan": 4
                        },
                        "metadata": {
                          "inputs": [
                            {
                              "name": "ComponentId",
                              "value": "Azure Monitor",
                              "isOptional": true
                            },
                            {
                              "name": "TimeContext",
                              "value": null,
                              "isOptional": true
                            },
                            {
                              "name": "ResourceIds",
                              "value": [
                                "Azure Monitor"
                              ],
                              "isOptional": true
                            },
                            {
                              "name": "ConfigurationId",
                              "value": "[resourceId('Microsoft.Insights/workbooks', guid(variables('alertsConsoleWorkbookName')))]",
                              "isOptional": true
                            },
                            {
                              "name": "Type",
                              "value": "workbook",
                              "isOptional": true
                            },
                            {
                              "name": "GalleryResourceType",
                              "value": "Azure Monitor",
                              "isOptional": true
                            },
                            {
                              "name": "PinName",
                              "value": "[variables('alertsConsoleWorkbookName')]",
                              "isOptional": true
                            },
                            {
                              "name": "StepSettings",
                              "value": "{\"version\":\"KqlItem/1.0\",\"query\":\"AlertsManagementResources \\r\\n| where type =~ 'microsoft.alertsmanagement/alerts'\\r\\n| where properties.essentials.startDateTime {timeRange}  \\r\\n| where properties.essentials.actionStatus.isSuppressed == false\\r\\n| extend Severity=tostring(properties.essentials.severity)\\r\\n| extend State=tostring(properties.essentials.alertState)\\r\\n| extend comp = properties.context.context.condition.allOf[0].dimensions\\r\\n| mvexpand comp\\r\\n| where comp.name == 'Computer' or comp.name == 'TestConfigurationName' or isnull(comp)\\r\\n| where \"*\" in ({State}) or State in ({State})\\r\\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\\r\\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\\r\\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\\r\\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Name=name, Severity, State=tostring(properties.essentials.alertState), MonitorCondition=tostring(properties.essentials.monitorCondition), SignalType=tostring(properties.essentials.signalType), TargetResource = split(comp.value, '.')[0]\\r\\n| order by StartTime desc\\r\\n\",\"size\":0,\"title\":\"Azure Monitor alerts\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"crossComponentResources\":[\"{Subscription}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"AlertId\",\"formatter\":5},{\"columnMatch\":\"StartTime\",\"formatter\":6},{\"columnMatch\":\"Name\",\"formatter\":1,\"formatOptions\":{\"linkTarget\":\"OpenBlade\",\"linkIsContextBlade\":true,\"bladeOpenContext\":{\"bladeName\":\"AlertDetailsTemplateBlade\",\"extensionName\":\"Microsoft_Azure_Monitoring\",\"bladeParameters\":[{\"name\":\"alertId\",\"source\":\"column\",\"value\":\"AlertId\"},{\"name\":\"alertName\",\"source\":\"column\",\"value\":\"Name\"},{\"name\":\"invokedFrom\",\"source\":\"static\",\"value\":\"Workbooks\"}]}},\"tooltipFormat\":{\"tooltip\":\"View alert details\"}},{\"columnMatch\":\"Severity\",\"formatter\":11},{\"columnMatch\":\"State\",\"formatter\":1},{\"columnMatch\":\"MonitorCondition\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Fired\",\"representation\":\"Fired\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Resolved\",\"representation\":\"Resolved\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"success\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"TargetResource\",\"formatter\":13,\"formatOptions\":{\"linkTarget\":null,\"showIcon\":true}},{\"columnMatch\":\"ResourceType\",\"formatter\":16,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Resource Type\",\"formatter\":11},{\"columnMatch\":\"essentials\",\"formatter\":5}]}}",
                              "isOptional": true
                            },
                            {
                              "name": "ParameterValues",
                              "value": {
                                "Subscription": {
                                  "type": 6,
                                  "value": [
                                    "[subscription().id]"
                                  ],
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "[subscription().displayName]",
                                  "displayName": "Subscriptions",
                                  "formattedValue": "[format('{0}{1}{2}', variables('singlequote'), subscription().id, variables('singlequote'))]"
                                },
                                "ResourceGroups": {
                                  "type": 2,
                                  "value": [
                                    "[resourceGroup().name]"
                                  ],
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "[resourceGroup().name]",
                                  "displayName": "Resource groups",
                                  "formattedValue": "[format('{0}{1}{2}', variables('singlequote'), resourceGroup().name, variables('singlequote'))]"
                                },
                                "ResourceTypes": {
                                  "type": 7,
                                  "value": [
                                    "*"
                                  ],
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "All",
                                  "displayName": "Resource types",
                                  "specialValue": [
                                    "value::all"
                                  ],
                                  "formattedValue": "'*'"
                                },
                                "Resources": {
                                  "type": 5,
                                  "value": [
                                    "*"
                                  ],
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "All",
                                  "displayName": "Resources",
                                  "specialValue": [
                                    "value::all"
                                  ],
                                  "formattedValue": "'*'"
                                },
                                "timeRange": {
                                  "type": 4,
                                  "value": {
                                    "durationMs": 2592000000
                                  },
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "Last 30 days",
                                  "displayName": "Time Range",
                                  "formattedValue": "Last 30 days"
                                },
                                "State": {
                                  "type": 2,
                                  "value": [
                                    "*"
                                  ],
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "All",
                                  "displayName": "State",
                                  "specialValue": [
                                    "value::all"
                                  ],
                                  "formattedValue": "'*'"
                                }
                              },
                              "isOptional": true
                            },
                            {
                              "name": "Location",
                              "value": "[parameters('location')]",
                              "isOptional": true
                            }
                          ],
                          "type": "Extension/AppInsightsExtension/PartType/PinnedNotebookQueryPart"
                        }
                      },
                      "2": {
                        "position": {
                          "x": 12,
                          "y": 4,
                          "colSpan": 5,
                          "rowSpan": 4
                        },
                        "metadata": {
                          "inputs": [
                            {
                              "name": "ComponentId",
                              "value": "Azure Monitor",
                              "isOptional": true
                            },
                            {
                              "name": "TimeContext",
                              "value": null,
                              "isOptional": true
                            },
                            {
                              "name": "ResourceIds",
                              "value": [
                                "Azure Monitor"
                              ],
                              "isOptional": true
                            },
                            {
                              "name": "ConfigurationId",
                              "value": "[resourceId('Microsoft.Insights/workbooks', guid(variables('windowsEventsWorkbookName')))]",
                              "isOptional": true
                            },
                            {
                              "name": "Type",
                              "value": "workbook",
                              "isOptional": true
                            },
                            {
                              "name": "GalleryResourceType",
                              "value": "Azure Monitor",
                              "isOptional": true
                            },
                            {
                              "name": "PinName",
                              "value": "[variables('windowsEventsWorkbookName')]",
                              "isOptional": true
                            },
                            {
                              "name": "StepSettings",
                              "value": "{\"version\":\"KqlItem/1.0\",\"query\":\"Event\\r\\n|  where EventLog in (\"System\",\"Application\",\"Operations Manager\")\\r\\n| project EventLog,EventLevelName\\r\\n| evaluate pivot(EventLevelName)\",\"size\":1,\"showAnalytics\":true,\"title\":\"Windows Events - Summary\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EventLog\",\"exportParameterName\":\"EventLog\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Information\",\"formatter\":18,\"formatOptions\":{\"showIcon\":true,\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"info\",\"text\":\"{0}{1}\"}],\"aggregation\":\"Unique\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Warning\",\"formatter\":18,\"formatOptions\":{\"showIcon\":true,\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"warning\",\"text\":\"{0}{1}\"}],\"aggregation\":\"Unique\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Error\",\"formatter\":18,\"formatOptions\":{\"showIcon\":true,\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"thresholdValue\":null,\"representation\":\"3\",\"text\":\"{0}{1}\"}],\"aggregation\":\"Unique\"},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}}]}}",
                              "isOptional": true
                            },
                            {
                              "name": "ParameterValues",
                              "value": {
                                "TimeRange": {
                                  "type": 4,
                                  "value": {
                                    "durationMs": 604800000
                                  },
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "Last 7 days",
                                  "displayName": "TimeRange",
                                  "formattedValue": "Last 7 days"
                                },
                                "Workspace": {
                                  "type": 5,
                                  "value": [
                                    "[parameters('workspaceId')]"
                                  ],
                                  "isPending": false,
                                  "isWaiting": false,
                                  "isFailed": false,
                                  "isGlobal": false,
                                  "labelValue": "[parameters('workspaceName')]",
                                  "displayName": "Workspace",
                                  "formattedValue": "[parameters('workspaceId')]"
                                }
                              },
                              "isOptional": true
                            },
                            {
                              "name": "Location",
                              "value": "[parameters('location')]",
                              "isOptional": true
                            }
                          ],
                          "type": "Extension/AppInsightsExtension/PartType/PinnedNotebookQueryPart"
                        }
                      }
                    }
                  }
                },
                "metadata": {
                  "model": {
                    "timeRange": {
                      "value": {
                        "relative": {
                          "duration": 24,
                          "timeUnit": 1
                        }
                      },
                      "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
                    },
                    "filterLocale": {
                      "value": "en-us"
                    },
                    "filters": {
                      "value": {
                        "MsPortalFx_TimeRange": {
                          "model": {
                            "format": "utc",
                            "granularity": "auto",
                            "relative": "24h"
                          },
                          "displayCache": {
                            "name": "UTC Time",
                            "value": "Past 24 hours"
                          },
                          "filteredPartIds": [
                            "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c6028516",
                            "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c6028518",
                            "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c602851a",
                            "StartboardPart-PinnedNotebookQueryPart-952cffdb-b288-4824-9872-6327c602851c"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/workbooks', guid(variables('alertsConsoleWorkbookName')))]",
                "[resourceId('Microsoft.Insights/workbooks', guid(variables('osPerformanceWorkbookName')))]",
                "[resourceId('Microsoft.Insights/workbooks', guid(variables('windowsEventsWorkbookName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'mgmtArtifactsAndPolicyDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "policyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "azureLocation": {
            "value": "[parameters('location')]"
          },
          "changeTrackingDCR": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'dataCollectionRules'), '2022-09-01').outputs.changeTrackingDCR.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "14197804845999167783"
            }
          },
          "parameters": {
            "azureLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of your Azure resources"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Subscription Id"
              }
            },
            "changeTrackingDCR": {
              "type": "string",
              "metadata": {
                "description": "Id of change tracking DCR"
              }
            },
            "changeTrackingPolicySetDefintion": {
              "type": "string",
              "defaultValue": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policySetDefinitions/(ArcBox) Enable ChangeTracking for Arc-enabled machines', parameters('subscriptionId'))]"
            },
            "contributorRoleDefinition": {
              "type": "string",
              "defaultValue": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c', subscription().subscriptionId)]"
            }
          },
          "variables": {
            "policies": [
              {
                "name": "(ArcBox) Tag resources",
                "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f9dc7db-30c1-420c-b61a-e1d640128d26",
                "flavors": [
                  "Full",
                  "ITPro",
                  "DevOps",
                  "DataOps"
                ],
                "roleDefinition": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c', subscription().subscriptionId)]",
                "parameters": {
                  "tagName": {
                    "value": "Project"
                  },
                  "tagValue": {
                    "value": "jumpstart_arcbox"
                  }
                }
              }
            ]
          },
          "resources": [
            {
              "copy": {
                "name": "policies_name",
                "count": "[length(variables('policies'))]"
              },
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2021-06-01",
              "name": "[variables('policies')[copyIndex()].name]",
              "location": "[parameters('azureLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "policyDefinitionId": "[variables('policies')[copyIndex()].definitionId]",
                "parameters": "[variables('policies')[copyIndex()].parameters]"
              }
            },
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2022-06-01",
              "name": "(ArcBox) Enable ChangeTracking for Arc-enabled machines",
              "location": "[parameters('azureLocation')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "displayName": "(ArcBox) Enable ChangeTracking for Arc-enabled machines",
                "description": "Enable ChangeTracking for Arc-enabled machines",
                "policyDefinitionId": "[parameters('changeTrackingPolicySetDefintion')]",
                "parameters": {
                  "dcrResourceId": {
                    "value": "[parameters('changeTrackingDCR')]"
                  }
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(variables('policies')[0].name, variables('policies')[0].roleDefinition, resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[variables('policies')[0].roleDefinition]",
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', variables('policies')[0].name), '2021-06-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', variables('policies')[0].name)]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[guid('ARCBOX_AMA_POLICIES', parameters('subscriptionId'), parameters('azureLocation'))]",
              "subscriptionId": "[parameters('subscriptionId')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.21.1.54444",
                      "templateHash": "6601295840436213171"
                    }
                  },
                  "parameters": {
                    "AzureMonitorAgentLinuxPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/845857af-0333-4c5d-bbbc-6076697da122"
                    },
                    "AMALinuxPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/2ea82cdd-f2e8-4500-af75-67a2e084ca74"
                    },
                    "changeTrackingLinuxPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/09a1f130-7697-42bc-8d84-8a9ea17e5187"
                    },
                    "changeTrackingLinuxExtensionPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/10caed8a-652c-4d1d-84e4-2805b7c07278"
                    },
                    "changeTrackingDcrLinuxPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/09a1f130-7697-42bc-8d84-8a9ea17e5192"
                    },
                    "AzureMonitorAgentWindowsPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/94f686d6-9a24-4e19-91f1-de937dc171a4"
                    },
                    "AMAWindowsPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/eab1f514-22e3-42e3-9a1f-e1dc9199355c"
                    },
                    "dependencyAgentWindowsPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/91cb9edd-cd92-4d2f-b2f2-bdd8d065a3d4"
                    },
                    "changeTrackingWindowsPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/a7acfae7-9497-4a3f-a3b5-a16a50abbe2f"
                    },
                    "changeTrackingWindowsExtensionPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/4bb303db-d051-4099-95d2-e3e1428a4cd5"
                    },
                    "changeTrackingDcrWindowsPolicyId": {
                      "type": "string",
                      "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/ef9fe2ce-a588-4edd-829c-6247069dcfdb"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/policySetDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "(ArcBox) Deploy Azure Monitor on Arc-enabled Linux machines",
                      "properties": {
                        "displayName": "(ArcBox) Deploy Azure Monitor on Arc-enabled Linux machines",
                        "description": "This policy deploys Azure Monitor agents on Linux Arc connected machines.",
                        "metadata": {
                          "category": "Monitoring",
                          "version": "1.0.0"
                        },
                        "parameters": {
                          "dcrResourceId": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Data Collection Rule Resource Id or Data Collection Endpoint Resource Id",
                              "description": "Resource Id of the Data Collection Rule or the Data Collection Endpoint to be applied on the Linux machines in scope."
                            }
                          }
                        },
                        "policyDefinitions": [
                          {
                            "policyDefinitionId": "[parameters('AMALinuxPolicyId')]",
                            "parameters": {
                              "dcrResourceId": {
                                "value": "[[parameters('dcrResourceId')]"
                              }
                            }
                          },
                          {
                            "policyDefinitionId": "[parameters('AzureMonitorAgentLinuxPolicyId')]"
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policySetDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "(ArcBox) Deploy Azure Monitor on Arc-enabled Windows machines",
                      "properties": {
                        "displayName": "(ArcBox) Deploy Azure Monitor on Arc-enabled Windows machines",
                        "description": "This policy deploys Azure Monitor agents on Windows Arc connected machines.",
                        "metadata": {
                          "category": "Monitoring",
                          "version": "1.0.0"
                        },
                        "parameters": {
                          "dcrResourceId": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Data Collection Rule Resource Id or Data Collection Endpoint Resource Id",
                              "description": "Resource Id of the Data Collection Rule or the Data Collection Endpoint to be applied on the Linux machines in scope."
                            }
                          }
                        },
                        "policyDefinitions": [
                          {
                            "policyDefinitionId": "[parameters('dependencyAgentWindowsPolicyId')]"
                          },
                          {
                            "policyDefinitionId": "[parameters('AMAWindowsPolicyId')]",
                            "parameters": {
                              "dcrResourceId": {
                                "value": "[[parameters('dcrResourceId')]"
                              }
                            }
                          },
                          {
                            "policyDefinitionId": "[parameters('AzureMonitorAgentWindowsPolicyId')]"
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Authorization/policySetDefinitions",
                      "apiVersion": "2021-06-01",
                      "name": "(ArcBox) Enable ChangeTracking for Arc-enabled machines",
                      "properties": {
                        "displayName": "(ArcBox) Enable ChangeTracking and Inventory for Arc-enabled machines",
                        "description": "Enable ChangeTracking and Inventory for Arc-enabled virtual machines. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations.",
                        "metadata": {
                          "category": "ChangeTrackingAndInventory",
                          "version": "1.0.0"
                        },
                        "parameters": {
                          "dcrResourceId": {
                            "type": "String",
                            "metadata": {
                              "displayName": "Data Collection Rule Resource Id or Data Collection Endpoint Resource Id",
                              "description": "Resource Id of the Data Collection Rule or the Data Collection Endpoint to be applied on the machines in scope."
                            }
                          }
                        },
                        "policyDefinitions": [
                          {
                            "policyDefinitionId": "[parameters('changeTrackingLinuxPolicyId')]"
                          },
                          {
                            "policyDefinitionId": "[parameters('changeTrackingLinuxExtensionPolicyId')]"
                          },
                          {
                            "policyDefinitionId": "[parameters('changeTrackingDcrLinuxPolicyId')]",
                            "parameters": {
                              "dcrResourceId": {
                                "value": "[[parameters('dcrResourceId')]"
                              }
                            }
                          },
                          {
                            "policyDefinitionId": "[parameters('changeTrackingWindowsPolicyId')]"
                          },
                          {
                            "policyDefinitionId": "[parameters('changeTrackingWindowsExtensionPolicyId')]"
                          },
                          {
                            "policyDefinitionId": "[parameters('changeTrackingDcrWindowsPolicyId')]",
                            "parameters": {
                              "dcrResourceId": {
                                "value": "[[parameters('dcrResourceId')]"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'dataCollectionRules')]",
        "[resourceId('Microsoft.Resources/deployments', 'mgmtArtifactsAndPolicyDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dataCollectionRules",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceLocation": {
            "value": "[parameters('location')]"
          },
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "workspaceResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mgmtArtifactsAndPolicyDeployment'), '2022-09-01').outputs.workspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "7528395501644142499"
            }
          },
          "parameters": {
            "dataCollectionRuleNameVMI": {
              "type": "string",
              "defaultValue": "arcbox-ama-vmi-perfAndda-dcr",
              "metadata": {
                "displayName": "Name of the Data Collection Rule(DCR)",
                "description": "This is the name of the AMA-VMI Data Collection Rule(DCR)"
              }
            },
            "workspaceLocation": {
              "type": "string",
              "metadata": {
                "description": "Workspace Location."
              }
            },
            "workspaceResourceId": {
              "type": "string",
              "metadata": {
                "description": "Workspace Resource ID."
              }
            },
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Specifies the name of the workspace."
              }
            },
            "dataCollectionRuleNameCt": {
              "type": "string",
              "defaultValue": "arcbox-ama-ct-dcr",
              "metadata": {
                "description": "Specifies the name of the data collection rule to create."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/dataCollectionRules",
              "apiVersion": "2021-04-01",
              "name": "[parameters('dataCollectionRuleNameVMI')]",
              "location": "[parameters('workspaceLocation')]",
              "properties": {
                "description": "Data collection rule for VM Insights.",
                "dataSources": {
                  "performanceCounters": [
                    {
                      "name": "VMInsightsPerfCounters",
                      "streams": [
                        "Microsoft-InsightsMetrics"
                      ],
                      "samplingFrequencyInSeconds": 60,
                      "counterSpecifiers": [
                        "\\VmInsights\\DetailedMetrics"
                      ]
                    }
                  ],
                  "extensions": [
                    {
                      "streams": [
                        "Microsoft-ServiceMap"
                      ],
                      "extensionName": "DependencyAgent",
                      "extensionSettings": {},
                      "name": "DependencyAgentDataSource"
                    }
                  ]
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[parameters('workspaceResourceId')]",
                      "name": "VMInsightsPerf-Logs-Dest"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Microsoft-InsightsMetrics"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  },
                  {
                    "streams": [
                      "Microsoft-ServiceMap"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Insights/dataCollectionRules",
              "apiVersion": "2021-04-01",
              "name": "[parameters('dataCollectionRuleNameCt')]",
              "location": "[parameters('workspaceLocation')]",
              "properties": {
                "description": "Data collection rule for CT.",
                "dataSources": {
                  "extensions": [
                    {
                      "streams": [
                        "Microsoft-ConfigurationChange",
                        "Microsoft-ConfigurationChangeV2",
                        "Microsoft-ConfigurationData"
                      ],
                      "extensionName": "ChangeTracking-Windows",
                      "extensionSettings": {
                        "enableFiles": true,
                        "enableSoftware": true,
                        "enableRegistry": true,
                        "enableServices": true,
                        "enableInventory": true,
                        "registrySettings": {
                          "registryCollectionFrequency": 3000,
                          "registryInfo": [
                            {
                              "name": "Registry_1",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Startup",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_2",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\Scripts\\Shutdown",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_3",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_4",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_5",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Classes\\Directory\\ShellEx\\ContextMenuHandlers",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_6",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Classes\\Directory\\Background\\ShellEx\\ContextMenuHandlers",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_7",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Classes\\Directory\\Shellex\\CopyHookHandlers",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_8",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_9",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIconOverlayIdentifiers",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_10",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_11",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Browser Helper Objects",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_12",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Extensions",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_13",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Internet Explorer\\Extensions",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_14",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_15",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Drivers32",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_16",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\KnownDlls",
                              "valueName": ""
                            },
                            {
                              "name": "Registry_17",
                              "groupTag": "Recommended",
                              "enabled": false,
                              "recurse": true,
                              "description": "",
                              "keyName": "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify",
                              "valueName": ""
                            }
                          ]
                        },
                        "fileSettings": {
                          "fileCollectionFrequency": 2700
                        },
                        "softwareSettings": {
                          "softwareCollectionFrequency": 1800
                        },
                        "inventorySettings": {
                          "inventoryCollectionFrequency": 36000
                        },
                        "servicesSettings": {
                          "serviceCollectionFrequency": 1800
                        }
                      },
                      "name": "CTDataSource-Windows"
                    },
                    {
                      "streams": [
                        "Microsoft-ConfigurationChange",
                        "Microsoft-ConfigurationChangeV2",
                        "Microsoft-ConfigurationData"
                      ],
                      "extensionName": "ChangeTracking-Linux",
                      "extensionSettings": {
                        "enableFiles": true,
                        "enableSoftware": true,
                        "enableRegistry": false,
                        "enableServices": true,
                        "enableInventory": true,
                        "fileSettings": {
                          "fileCollectionFrequency": 900,
                          "fileInfo": [
                            {
                              "name": "ChangeTrackingLinuxPath_default",
                              "enabled": true,
                              "destinationPath": "/etc/.*.conf",
                              "useSudo": true,
                              "recurse": true,
                              "maxContentsReturnable": 5000000,
                              "pathType": "File",
                              "type": "File",
                              "links": "Follow",
                              "maxOutputSize": 500000,
                              "groupTag": "Recommended"
                            }
                          ]
                        },
                        "softwareSettings": {
                          "softwareCollectionFrequency": 300
                        },
                        "inventorySettings": {
                          "inventoryCollectionFrequency": 36000
                        },
                        "servicesSettings": {
                          "serviceCollectionFrequency": 300
                        }
                      },
                      "name": "CTDataSource-Linux"
                    }
                  ]
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[parameters('workspaceResourceId')]",
                      "name": "Microsoft-CT-Dest"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Microsoft-ConfigurationChange",
                      "Microsoft-ConfigurationChangeV2",
                      "Microsoft-ConfigurationData"
                    ],
                    "destinations": [
                      "Microsoft-CT-Dest"
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('ChangeTracking({0})', parameters('workspaceName'))]",
              "location": "[parameters('workspaceLocation')]",
              "properties": {
                "workspaceResourceId": "[parameters('workspaceResourceId')]"
              },
              "plan": {
                "name": "[format('ChangeTracking({0})', parameters('workspaceName'))]",
                "product": "OMSGallery/ChangeTracking",
                "promotionCode": "",
                "publisher": "Microsoft"
              }
            }
          ],
          "outputs": {
            "changeTrackingDCR": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', parameters('dataCollectionRuleNameCt'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'mgmtArtifactsAndPolicyDeployment')]"
      ]
    }
  ]
}