#!meta

{"kernelInfo":{"defaultKernelName":"pwsh","items":[{"aliases":[],"languageName":"pwsh","name":"pwsh"}]}}

#!markdown

# Arc-enabled Servers Level-up

Follow the instructions step by step

## Modules

- On-boarding
- Inventory
- Azure Monitor
- Defender for Cloud

### On-boarding to Azure Arc

#!pwsh

## Install extension
az extension add --name connectedmachine --yes --only-show-errors

#!pwsh

## Prepare variables
$nestedWindowsUsername = "Administrator"
$nestedWindowsPassword = "ArcDemo123!!"
$Env:ArcBoxDir = "C:\ArcBox"
$Env:ArcBoxLogsDir = "$Env:ArcBoxDir\Logs"
$Env:ArcBoxVMDir = "$Env:ArcBoxDir\Virtual Machines"
$Env:ArcBoxIconDir = "$Env:ArcBoxDir\Icons"
$agentScript = "$Env:ArcBoxDir\agentScript"
$nestedVMArcBoxDir = $Env:ArcBoxDir
$spnClientId = $env:spnClientId
$spnClientSecret = $env:spnClientSecret
$spnTenantId = $env:spnTenantId
$subscriptionId = $env:subscriptionId
$azureLocation = $env:azureLocation
$resourceGroup = $env:resourceGroup
$secWindowsPassword = ConvertTo-SecureString $nestedWindowsPassword -AsPlainText -Force
$winCreds = New-Object System.Management.Automation.PSCredential ($nestedWindowsUsername, $secWindowsPassword)
$Win2k19vmName = "ArcBox-Win2K19"
Set-Location 
az login --service-principal --username $env:spnClientId --password $env:spnClientSecret --tenant $env:spnTenantId

#!pwsh

## Get servers on-boarded to Azure Ar
az connectedmachine list --resource-group $env:resourceGroup --output table

#!pwsh

# On-board missing machine to Azure Arc
Invoke-Command -VMName $Win2k19vmName -ScriptBlock { 
    powershell -File $Using:nestedVMArcBoxDir\installArcAgent.ps1 -spnClientId $Using:spnClientId, -spnClientSecret $Using:spnClientSecret, -spnTenantId $Using:spnTenantId, -subscriptionId $Using:subscriptionId, -resourceGroup $Using:resourceGroup, -azureLocation $Using:azureLocation 
    } -Credential $winCreds
