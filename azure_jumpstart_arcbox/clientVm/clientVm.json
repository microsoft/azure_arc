{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "myIpAddress": {
            "type": "string",
            "metadata": {
                "description": "Your public IP address, used to RDP to the client VM"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "ArcBox-Client",
            "metadata": {
                "description": "The name of you Virtual Machine"
            }
        },
        "windowsAdminUsername": {
            "type": "string",
            "defaultValue": "arcdemo",
            "metadata": {
                "description": "Username for the Virtual Machine"
            }
        },
        "windowsAdminPassword": {
            "type": "securestring",
            "defaultValue": "ArcPassword123!!",
            "metadata": {
                "description": "Windows password for the Virtual Machine"
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D16s_v3",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "ArcBox-Vnet",
            "metadata": {
                "description": "Name of the VNET"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "ArcBox-Subnet",
            "metadata": {
                "description": "Name of the subnet in the virtual network"
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "ArcBox-NSG",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "Project": "jumpstart_arcbox"
            }
        },
        "spnClientId": {
            "type": "string",
            "metadata": {
                "description": "Client id of the service principal"
            }
        },
        "spnClientSecret": {
            "type": "string",
            "metadata": {
                "description": "Client secret of the service principal"
            }
        },
        "spnAuthority": {
            "type": "string",
            "defaultValue": "https://login.microsoftonline.com"
        },
        "spnTenantId": {
            "type": "string",
            "metadata": {
                "description": "Tenant id of the service principal"
            }
        },
        "azdataUsername": {
            "type": "string",
            "defaultValue": "arcdemo"
        },
        "azdataPassword": {
            "type": "string",
            "defaultValue": "ArcPassword123!!"
        },
        "acceptEula": {
            "type": "string",
            "defaultValue": "yes"
        },
        "registryUsername": {
            "type": "string",
            "defaultValue": "registryUser"
        },
        "registryPassword": {
            "type": "string",
            "defaultValue": "registrySecret"
        },
        "arcDcName": {
            "type": "string",
            "defaultValue": "arcdatactrl"
        },
        "mssqlmiName": {
            "type": "string",
            "defaultValue": "arcsqlmidemo"
        },
        "postgresName": {
            "type": "string",
            "defaultValue": "arcpg",
            "metadata": {
                "description": "Name of PostgreSQL server group"
            }
        },
        "postgresWorkerNodeCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of PostgreSQL Hyperscale worker nodes"
            }
        },
        "postgresDatasize": {
            "type": "int",
            "defaultValue": 1024,
            "metadata": {
                "description": "Size of data volumes in MB"
            }
        },
        "postgresServiceType": {
            "type": "string",
            "defaultValue": "LoadBalancer",
            "metadata": {
                "description": "Choose how PostgreSQL service is accessed through Kubernetes networking interface"
            }
        },
        "stagingStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name for the staging storage account using to hold kubeconfig. This value is passed into the template as an output from mgmtStagingStorage.json"
            }
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name for the environment Azure Log Analytics workspace"
            }
        }        

    },
    "variables": {
        "vmName": "[concat(parameters('vmName'))]",
        "publicIpAddressName": "[concat(parameters('vmName'), '-PIP' )]",
        "networkInterfaceName": "[concat(parameters('vmName'),'-NIC')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "osDiskType": "Premium_LRS",
        "templateBaseUrl": "https://raw.githubusercontent.com/microsoft/azure_arc/main/azure_jumpstart_arcbox/"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_RDP_3389",
                        "properties": {
                            "priority": 1001,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('myIpAddress')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmName'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        },
                        "diskSizeGB": 1024
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('windowsAdminUsername')]",
                    "adminPassword": "[parameters('windowsAdminPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/Bootstrap')]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "tags": {
                "displayName": "config-choco"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[uri(variables('templateBaseUrl'), 'scripts/Bootstrap.ps1')]"
                    ],
                    "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Bypass -File Bootstrap.ps1', ' -adminUsername ', parameters('windowsAdminUsername'), ' -spnClientId ', parameters('spnClientId'), ' -spnClientSecret ', parameters('spnClientSecret'), ' -spnTenantId ', parameters('spnTenantId'), ' -spnAuthority ', parameters('spnAuthority'), ' -subscriptionId ', subscription().subscriptionId, ' -resourceGroup ', resourceGroup().name, ' -azdataUsername ', parameters('azdataUsername'), ' -azdataPassword ', parameters('azdataPassword'), ' -acceptEula ', parameters('acceptEula'), ' -registryUsername ', parameters('registryUsername'), ' -registryPassword ', parameters('registryPassword'), ' -arcDcName ', parameters('arcDcName'), ' -azureLocation ', parameters('location'), ' -mssqlmiName ', parameters('mssqlmiName'), ' -POSTGRES_NAME ', parameters('postgresName'), ' -POSTGRES_WORKER_NODE_COUNT ', parameters('postgresWorkerNodeCount'), ' -POSTGRES_DATASIZE ', parameters('postgresDatasize'), ' -POSTGRES_SERVICE_TYPE ', parameters('postgresServiceType'), ' -stagingStorageAccountName ', parameters('stagingStorageAccountName'), ' -workspaceName ', parameters('workspaceName')) ]"
                }
            }
        }
    ],


    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('windowsAdminUsername')]"
        },
        "publicIP": {
            "type": "string",
            "value": "[concat(reference(variables('publicIPAddressName')).IpAddress)]"
        }
    }
}