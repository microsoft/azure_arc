{
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "Arcbox Workbook",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookResourceId": {
      "type": "string",
      "defaultValue": "workbookresourceid-stage",
      "metadata": {
        "description": "The id of resource instance to which the workbook will be associated"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "variables": {
    "workbookContent": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 1,
          "content": {
            "json": "# Jumpstart ArcBox Workbook for ITPro\r\n\r\nKeep track of your ArcBox resources by selecting one of the tabs below:\r\n____________________________________________________________________________________________________\r\n"
          },
          "name": "text - 3"
        },
        {
          "type": 11,
          "content": {
            "version": "LinkItem/1.0",
            "style": "tabs",
            "links": [
              {
                "id": "001e53e2-be76-428e-9081-da7ce60368d4",
                "cellValue": "selectedTab",
                "linkTarget": "parameter",
                "linkLabel": "Inventory",
                "subTarget": "Inventory",
                "style": "link"
              },
              {
                "id": "547c6d68-f351-4898-bd7f-de56cd1ea984",
                "cellValue": "selectedTab",
                "linkTarget": "parameter",
                "linkLabel": "Monitoring",
                "subTarget": "Monitoring",
                "style": "link"
              },
              {
                "id": "942dd542-ac90-4ee4-bb5d-477c931c05b4",
                "cellValue": "selectedTab",
                "linkTarget": "parameter",
                "linkLabel": "Security",
                "subTarget": "Security",
                "style": "link"
              },
              {
                "id": "ce09576e-12ed-4d4a-8a5e-05365a8afac2",
                "cellValue": "selectedTab",
                "linkTarget": "parameter",
                "linkLabel": "Change Tracking",
                "subTarget": "ChangeTracking",
                "style": "link"
              },
              {
                "id": "6c478ca5-7248-461b-bdaa-bcb535bbc633",
                "cellValue": "selectedTab",
                "linkTarget": "parameter",
                "linkLabel": "Update Management",
                "subTarget": "Updates",
                "style": "link"
              },
              {
                "id": "9a857579-e73f-4836-8540-c9e56145d891",
                "cellValue": "selectedTab",
                "linkTarget": "parameter",
                "linkLabel": "SQL Healthcheck",
                "subTarget": "SQL",
                "style": "link"
              }
            ]
          },
          "customWidth": "100",
          "name": "links - 7"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": ""
                },
                "name": "text - 4"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Jumpstart ArcBox Metrics and Alerts\r\n\r\nðŸ’¡ Select your Azure ArcBox subscription and Resource Group to see more information."
                },
                "name": "text - 1"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "parameters": [
                    {
                      "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                      "version": "KqlParameterItem/1.0",
                      "name": "Subscription",
                      "label": "Subscriptions",
                      "type": 6,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "includeAll": true,
                        "showDefault": false
                      }
                    },
                    {
                      "id": "b616a3a3-4271-4208-b1a9-a92a78efed08",
                      "version": "KqlParameterItem/1.0",
                      "name": "ResourceGroups",
                      "label": "Resource groups",
                      "type": 2,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "Resources\r\n| summarize by resourceGroup\r\n| order by resourceGroup asc\r\n| project id=resourceGroup, resourceGroup",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "selectAllValue": "*"
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "0e85e0e4-a7e8-4ea8-b291-e444c317843a",
                      "version": "KqlParameterItem/1.0",
                      "name": "ResourceTypes",
                      "label": "Resource types",
                      "type": 7,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "where \"*\" in ({ResourceGroups}) or resourceGroup in ({ResourceGroups})\r\n| summarize by type\r\n| project type, label=type\r\n",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "selectAllValue": "*"
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
                      "version": "KqlParameterItem/1.0",
                      "name": "Resources",
                      "type": 5,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "Resources\r\n| where \"*\" in ({ResourceTypes}) or type in~({ResourceTypes})\r\n| where '*' in~({ResourceGroups}) or resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = name, selected = Rank <= 10, group = resourceGroup",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "selectAllValue": "*",
                        "defaultItemsText": "First 10"
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "015d1a5e-357f-4e01-ac77-598e7b493db0",
                      "version": "KqlParameterItem/1.0",
                      "name": "timeRange",
                      "label": "Time Range",
                      "type": 4,
                      "isRequired": true,
                      "value": {
                        "durationMs": 3600000
                      },
                      "typeSettings": {
                        "selectableValues": [
                          {
                            "durationMs": 300000
                          },
                          {
                            "durationMs": 900000
                          },
                          {
                            "durationMs": 1800000
                          },
                          {
                            "durationMs": 3600000
                          },
                          {
                            "durationMs": 14400000
                          },
                          {
                            "durationMs": 43200000
                          },
                          {
                            "durationMs": 86400000
                          },
                          {
                            "durationMs": 172800000
                          },
                          {
                            "durationMs": 259200000
                          },
                          {
                            "durationMs": 604800000
                          },
                          {
                            "durationMs": 1209600000
                          },
                          {
                            "durationMs": 2419200000
                          },
                          {
                            "durationMs": 2592000000
                          }
                        ],
                        "allowCustom": true
                      }
                    },
                    {
                      "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                      "version": "KqlParameterItem/1.0",
                      "name": "State",
                      "type": 2,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "selectAllValue": "*",
                        "showDefault": false
                      },
                      "queryType": 8
                    }
                  ],
                  "style": "above",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                "name": "parameters"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc",
                  "size": 3,
                  "title": "Alert Summary",
                  "noDataMessage": "No alerts found",
                  "exportMultipleValues": true,
                  "exportedParameters": [
                    {
                      "fieldName": "Severity",
                      "parameterName": "Severity",
                      "parameterType": 1
                    }
                  ],
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Severity",
                        "formatter": 11
                      },
                      {
                        "columnMatch": "Count",
                        "formatter": 3,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue",
                          "aggregation": "Sum"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      {
                        "columnMatch": "State",
                        "formatter": 1
                      }
                    ]
                  }
                },
                "showPin": true,
                "name": "query - 6"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Azure Arc enabled servers"
                },
                "name": "text - 8"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "value::all"
                  ],
                  "parameters": [
                    {
                      "id": "7b9de45f-92d6-4aaf-82a6-9224aa2dc02f",
                      "version": "KqlParameterItem/1.0",
                      "name": "Subscription",
                      "type": 6,
                      "value": "/subscriptions/{Subscription}",
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "includeAll": false
                      }
                    },
                    {
                      "id": "7e70122d-415c-49f2-bba5-f3a18eb5c58e",
                      "version": "KqlParameterItem/1.0",
                      "name": "ResourceGroup",
                      "type": 2,
                      "query": "Resources\r\n\r\n| summarize Count = count() by subscriptionId, resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project label = resourceGroup",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": "{resourceGroup}",
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "ae721cb1-e030-4e02-8839-9c6a00f66c8a",
                      "version": "KqlParameterItem/1.0",
                      "name": "Workspace",
                      "type": 5,
                      "description": "Select at least one workspace that contains continuous export data based on the selected subscriptions",
                      "isRequired": true,
                      "query": "resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
                      "crossComponentResources": [
                        "value::all"
                      ],
                      "value": "/subscriptions/{Subscription}/resourceGroups/{resourceGroup}/providers/Microsoft.OperationalInsights/workspaces/<workspace>",
                      "typeSettings": {
                        "resourceTypeFilter": {
                          "microsoft.operationalinsights/workspaces": true
                        },
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "71c18150-396c-4f92-a41f-18125550ec3d",
                      "version": "KqlParameterItem/1.0",
                      "name": "ArcServer",
                      "label": "Azure Arc Enabled Server",
                      "type": 5,
                      "isRequired": true,
                      "value": "ArcBox-CentOS",
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "jsonData": "[[\r\n    { \"value\":\"ArcBox-SQL\", \"label\":\"ArcBox-SQL\", \"group\":\"Select\" },\r\n    { \"value\":\"ArcBox-Ubuntu\", \"label\":\"ArcBox-Ubuntu\", \"group\":\"Select\" },\r\n    { \"value\":\"ArcBox-Win2K19\", \"label\":\"ArcBox-Win2K19\", \"group\":\"Select\" },\r\n    { \"value\":\"ArcBox-Win2K22\", \"label\":\"ArcBox-Win2K22\", \"group\":\"Select\" },\r\n    { \"value\":\"ArcBox-CentOS\", \"label\":\"ArcBox-CentOS\", \"group\":\"Select\" }\r\n]",
                      "timeContext": {
                        "durationMs": 86400000
                      }
                    },
                    {
                      "id": "f21caac6-fae7-44b5-ba4f-a2d3593953b0",
                      "version": "KqlParameterItem/1.0",
                      "name": "TimeRange",
                      "type": 4,
                      "isRequired": true,
                      "value": {
                        "durationMs": 2419200000
                      },
                      "typeSettings": {
                        "selectableValues": [
                          {
                            "durationMs": 300000
                          },
                          {
                            "durationMs": 900000
                          },
                          {
                            "durationMs": 1800000
                          },
                          {
                            "durationMs": 3600000
                          },
                          {
                            "durationMs": 14400000
                          },
                          {
                            "durationMs": 43200000
                          },
                          {
                            "durationMs": 86400000
                          },
                          {
                            "durationMs": 172800000
                          },
                          {
                            "durationMs": 259200000
                          },
                          {
                            "durationMs": 604800000
                          },
                          {
                            "durationMs": 1209600000
                          },
                          {
                            "durationMs": 2419200000
                          },
                          {
                            "durationMs": 2592000000
                          },
                          {
                            "durationMs": 5184000000
                          },
                          {
                            "durationMs": 7776000000
                          }
                        ]
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      }
                    }
                  ],
                  "style": "pills",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                "name": "parameters - 6"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n| where TimeGenerated {TimeRange}\r\n| where Computer =~ \"{ArcServer}\"\r\n| where Namespace == 'Processor' and Name == 'UtilizationPercentage'\r\n| summarize Average = round(avg(Val), 2),P95th = round(percentile(Val, 95), 2) by bin(TimeGenerated, totimespan('00:14:24'))\r\n",
                  "size": 0,
                  "title": "Azure Arc enabled servers - CPU Utilization %",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "timechart"
                },
                "customWidth": "50",
                "name": "query - 6",
                "styleSettings": {
                  "maxWidth": "50"
                }
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "InsightsMetrics\r\n    | where Namespace == 'Memory' and Name == 'AvailableMB'\r\n    | where TimeGenerated {TimeRange}\r\n| where Computer =~ \"{ArcServer}\"\r\n| summarize Average = round(avg(Val), 2),P5th = round(percentile(Val, 5), 2),P10th = round(percentile(Val, 10), 2) by bin(TimeGenerated, totimespan('00:14:24'))\r\n    | top 10 by P5th asc",
                  "size": 0,
                  "aggregation": 3,
                  "showAnnotations": true,
                  "title": "Azure Arc enabled servers - Available Memory",
                  "noDataMessage": "There is no data for this counter, either enable the counter or onboard machines to this workspace",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "linechart",
                  "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                      "columnMatch": "Computer",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "value",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "maximumSignificantDigits": 3,
                          "maximumFractionDigits": 2
                        }
                      }
                    }
                  },
                  "chartSettings": {
                    "ySettings": {
                      "unit": 4,
                      "min": 0,
                      "max": null
                    }
                  }
                },
                "customWidth": "50",
                "name": "Azure Arc enabled servers - Available Memory"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "Monitoring"
          },
          "name": "Monitoring"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Jumpstart ArcBox resource inventory\r\n\r\nðŸ’¡ Select your Azure ArcBox subscription and Resource Group to see more information."
                },
                "name": "text - 4"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "parameters": [
                    {
                      "id": "984514df-fff0-434c-a373-7090566e8c44",
                      "version": "KqlParameterItem/1.0",
                      "name": "Subscription",
                      "type": 6,
                      "isRequired": true,
                      "value": "/subscriptions/{Subscription}",
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "includeAll": true,
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      }
                    },
                    {
                      "id": "cb849a6b-937d-4e93-8d09-770554777009",
                      "version": "KqlParameterItem/1.0",
                      "name": "ResourceGroup",
                      "label": "Resource Group",
                      "type": 2,
                      "isRequired": true,
                      "query": "Resources\r\n| summarize Count = count() by subscriptionId, resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project label = resourceGroup",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": null,
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "0fd9f40f-ffe0-4894-adc7-64866aa4b1e4",
                      "version": "KqlParameterItem/1.0",
                      "name": "ResourceType",
                      "label": "Resources",
                      "type": 7,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "includeAll": true,
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      }
                    }
                  ],
                  "style": "pills",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                "name": "parameters - 1"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources \r\n| where resourceGroup == \"{ResourceGroup}\"\r\n| extend type = case(\r\ntype contains 'microsoft.netapp/netappaccounts', 'NetApp Accounts',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains 'microsoft.keyvault/vaults', \"Key Vaults\",\r\ntype contains 'microsoft.storage/storageaccounts', \"Storage Accounts\",\r\ntype contains 'microsoft.compute/availabilitysets', 'Availability Sets',\r\ntype contains 'microsoft.operationalinsights/workspaces', 'Azure Monitor Resources',\r\ntype contains 'microsoft.operationsmanagement', 'Operations Management Resources',\r\ntype contains 'microsoft.insights', 'Azure Monitor Resources',\r\ntype contains 'microsoft.desktopvirtualization/applicationgroups', 'WVD Application Groups',\r\ntype contains 'microsoft.desktopvirtualization/workspaces', 'WVD Workspaces',\r\ntype contains 'microsoft.desktopvirtualization/hostpools', 'WVD Hostpools',\r\ntype contains 'microsoft.recoveryservices/vaults', 'Backup Vaults',\r\ntype contains 'microsoft.web', 'App Services',\r\ntype contains 'microsoft.managedidentity/userassignedidentities','Managed Identities',\r\ntype contains 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\ntype contains 'microsoft.hybridcompute/machines', 'Azure Arc enabled servers ',\r\ntype contains 'Microsoft.EventHub', 'Event Hub',\r\ntype contains 'Microsoft.EventGrid', 'Event Grid',\r\ntype contains 'Microsoft.Sql', 'SQL Resources',\r\ntype contains 'Microsoft.HDInsight/clusters', 'HDInsight Clusters',\r\ntype contains 'microsoft.devtestlab', 'DevTest Labs Resources',\r\ntype contains 'microsoft.containerinstance', 'Container Instances Resources',\r\ntype contains 'microsoft.portal/dashboards', 'Azure Dashboards',\r\ntype contains 'microsoft.containerregistry/registries', 'Container Registry',\r\ntype contains 'microsoft.automation', 'Automation Resources',\r\ntype contains 'sendgrid.email/accounts', 'SendGrid Accounts',\r\ntype contains 'microsoft.datafactory/factories', 'Data Factory',\r\ntype contains 'microsoft.databricks/workspaces', 'Databricks Workspaces',\r\ntype contains 'microsoft.machinelearningservices/workspaces', 'Machine Learnings Workspaces',\r\ntype contains 'microsoft.alertsmanagement/smartdetectoralertrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.apimanagement/service', 'API Management Services',\r\ntype contains 'microsoft.dbforpostgresql', 'PostgreSQL Resources',\r\ntype contains 'microsoft.scheduler/jobcollections', 'Scheduler Job Collections',\r\ntype contains 'microsoft.visualstudio/account', 'Azure DevOps Organization',\r\ntype contains 'microsoft.network/', 'Network Resources',\r\ntype contains 'microsoft.migrate/' or type contains 'microsoft.offazure', 'Azure Migrate Resources',\r\ntype contains 'microsoft.servicebus/namespaces', 'Service Bus Namespaces',\r\ntype contains 'microsoft.classic', 'ASM Obsolete Resources',\r\ntype contains 'microsoft.resources/templatespecs', 'Template Spec Resources',\r\ntype contains 'microsoft.virtualmachineimages', 'VM Image Templates',\r\ntype contains 'microsoft.documentdb', 'CosmosDB DB Resources',\r\ntype contains 'microsoft.alertsmanagement/actionrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.kubernetes/connectedclusters', 'Azure Arc enabled Kubernetes',\r\ntype contains 'microsoft.purview', 'Purview Resources',\r\ntype contains 'microsoft.security', 'Security Resources',\r\ntype contains 'microsoft.cdn', 'CDN Resources',\r\ntype contains 'microsoft.devices','IoT Resources',\r\ntype contains 'microsoft.datamigration', 'Data Migraiton Services',\r\ntype contains 'microsoft.cognitiveservices', 'Congitive Services',\r\ntype contains 'microsoft.customproviders', 'Custom Providers',\r\ntype contains 'microsoft.appconfiguration', 'App Services',\r\ntype contains 'microsoft.search', 'Search Services',\r\ntype contains 'microsoft.maps', 'Maps',\r\ntype contains 'microsoft.containerservice/managedclusters', 'AKS',\r\ntype contains 'microsoft.signalrservice', 'SignalR',\r\ntype contains 'microsoft.resourcegraph/queries', 'Resource Graph Queries',\r\ntype contains 'microsoft.batch', 'MS Batch',\r\ntype contains 'microsoft.analysisservices', 'Analysis Services',\r\ntype contains 'microsoft.synapse/workspaces', 'Synapse Workspaces',\r\ntype contains 'microsoft.synapse/workspaces/sqlpools', 'Synapse SQL Pools',\r\ntype contains 'microsoft.kusto/clusters', 'ADX Clusters',\r\ntype contains 'microsoft.resources/deploymentscripts', 'Deployment Scripts',\r\ntype contains 'microsoft.aad/domainservices', 'AD Domain Services',\r\ntype contains 'microsoft.labservices/labaccounts', 'Lab Accounts',\r\ntype contains 'microsoft.automanage/accounts', 'Automanage Accounts',\r\ntype contains 'microsoft.extendedlocation/customlocations', 'Azure Arc Custom Locations',\r\ntype contains 'microsoft.azurearcdata/postgresinstances', 'Azure Arc-enabled PostgresSQL',\r\ntype contains 'microsoft.azurearcdata/sqlmanagedinstances', 'Azure Arc-enabled SQL Managed Instance',\r\ntype contains 'microsoft.azurearcdata/datacontrollers', 'Azure Arc-enabled data controller',\r\ntype contains 'microsoft.azurearcdata/sqlserverinstances', 'Azure Arc enabled SQL server',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type",
                  "size": 1,
                  "title": "Resource Count by Type",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "type",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "count_",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "useGrouping": false,
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "showBorder": true,
                    "sortCriteriaField": "count_",
                    "sortOrderField": 2
                  }
                },
                "name": "query - Overview Resource Counts by type"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Resources\r\n| where type in~ ({ResourceType})\r\n| where resourceGroup == \"{ResourceGroup}\"\r\n| project Resource = id, Subscription = subscriptionId, ['Resource group'] = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup), Location = location, tags",
                  "size": 2,
                  "title": "Resources List",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "crossComponentResources": [
                    "{Subscription}"
                  ]
                },
                "name": "query - 2"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "Inventory"
          },
          "name": "Inventory"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Jumpstart ArcBox Updates\r\n\r\nðŸ’¡ Select your Azure ArcBox subscription and Resource Group to see more information."
                },
                "name": "text - 5"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "parameters": [
                    {
                      "id": "f63e3417-2d21-4c54-b8b2-e35f02ae1389",
                      "version": "KqlParameterItem/1.0",
                      "name": "Subscription",
                      "type": 6,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "value": [],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "includeAll": true,
                        "showDefault": false
                      }
                    },
                    {
                      "id": "cd643fac-b294-4a3d-a2b5-29da33566292",
                      "version": "KqlParameterItem/1.0",
                      "name": "ResourceGroup",
                      "label": "Resource Group",
                      "type": 2,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "Resources\r\n| summarize Count = count() by subscriptionId, resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project label = resourceGroup\r\n",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": [
                        "arcbox"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "f8d6705a-e284-4077-8113-aae1038a6b7c",
                      "version": "KqlParameterItem/1.0",
                      "name": "Workspaces",
                      "type": 5,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name, resourceGroup",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources",
                      "value": [
                        "/subscriptions/{Subscription}/resourceGroups/{resourceGroup}/providers/Microsoft.OperationalInsights/workspaces/<workspace>"
                      ]
                    }
                  ],
                  "style": "pills",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                "name": "parameters - 11"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Windows VMs Updates"
                },
                "name": "text - 2"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Update\r\n| where OSType!=\"Linux\" and (Optional==false or Classification has \"Critical\" or Classification has \"Security\") and SourceComputerId in ((Heartbeat\r\n| where OSType=~\"Windows\" and notempty(Computer)\r\n| summarize arg_max(TimeGenerated, Solutions) by SourceComputerId\r\n| where Solutions has \"updates\" | distinct SourceComputerId))\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer, SourceComputerId, UpdateID\r\n| where UpdateState=~\"Needed\" and Approved!=false\r\n| summarize UpdatesNeeded=count(Classification) by Classification",
                  "size": 1,
                  "title": "Types of Windows Updates",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "visualization": "piechart",
                  "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                      "columnMatch": "Classification",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "UpdatesNeeded",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "maximumSignificantDigits": 3,
                          "maximumFractionDigits": 2
                        }
                      }
                    }
                  },
                  "chartSettings": {
                    "seriesLabelSettings": [
                      {
                        "seriesName": "Definition Updates",
                        "color": "yellow"
                      },
                      {
                        "seriesName": "Updates",
                        "color": "orange"
                      },
                      {
                        "seriesName": "Security Updates",
                        "color": "redBright"
                      },
                      {
                        "seriesName": "Update Rollups",
                        "color": "purple"
                      },
                      {
                        "seriesName": "Critical Updates",
                        "color": "red"
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "query - 0"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Update\r\n| where OSType!=\"Linux\" and (Optional==false or Classification has \"Critical\" or Classification has \"Security\") and SourceComputerId in ((Heartbeat\r\n| where OSType=~\"Windows\" and notempty(Computer)\r\n| summarize arg_max(TimeGenerated, Solutions) by SourceComputerId\r\n| where Solutions has \"updates\" | distinct SourceComputerId))\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer, SourceComputerId, UpdateID\r\n| where UpdateState=~\"Needed\" and Approved!=false\r\n| project Computer, Title, Classification, PublishedDate, UpdateState, Product\r\n| summarize count(Classification) by Computer \r\n| top 5 by count_Classification desc ",
                  "size": 1,
                  "title": "Top Windows VMs with Updates",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "top five Computers Needing Updates"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Update Summary"
                },
                "name": "text - 15"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Heartbeat\r\n| where TimeGenerated>ago(12h) and OSType=~\"Windows\" and notempty(Computer)\r\n| summarize arg_max(TimeGenerated, Solutions, Computer, ResourceId, ComputerEnvironment, VMUUID) by SourceComputerId\r\n| where Solutions has \"updates\"\r\n| extend vmuuId=VMUUID, azureResourceId=ResourceId, osType=2, environment=iff(ComputerEnvironment=~\"Azure\", 1, 2), scopedToUpdatesSolution=true, lastUpdateAgentSeenTime=\"\"\r\n| join kind=leftouter\r\n(\r\n    Update\r\n    | where TimeGenerated>ago(14h) and OSType!=\"Linux\" and SourceComputerId in ((Heartbeat\r\n    | where TimeGenerated>ago(12h) and OSType=~\"Windows\" and notempty(Computer)\r\n    | summarize arg_max(TimeGenerated, Solutions) by SourceComputerId\r\n    | where Solutions has \"updates\"\r\n    | distinct SourceComputerId))\r\n    | summarize hint.strategy=partitioned arg_max(TimeGenerated, UpdateState, Classification, Title, Optional, Approved, Computer, ComputerEnvironment) by Computer, SourceComputerId, UpdateID\r\n    | summarize Computer=any(Computer), ComputerEnvironment=any(ComputerEnvironment), missingCriticalUpdatesCount=countif(Classification has \"Critical\" and UpdateState=~\"Needed\" and Approved!=false), missingSecurityUpdatesCount=countif(Classification has \"Security\" and UpdateState=~\"Needed\" and Approved!=false), missingOtherUpdatesCount=countif(Classification !has \"Critical\" and Classification !has \"Security\" and UpdateState=~\"Needed\" and Optional==false and Approved!=false), lastAssessedTime=max(TimeGenerated), lastUpdateAgentSeenTime=\"\" by SourceComputerId\r\n    | extend compliance=iff(missingCriticalUpdatesCount > 0 or missingSecurityUpdatesCount > 0, 2, 1)\r\n    | extend ComplianceOrder=iff(missingCriticalUpdatesCount > 0 or missingSecurityUpdatesCount > 0 or missingOtherUpdatesCount > 0, 1, 3)\r\n)\r\non SourceComputerId\r\n| project id=SourceComputerId, displayName=Computer, sourceComputerId=SourceComputerId, scopedToUpdatesSolution=true, missingCriticalUpdatesCount=coalesce(missingCriticalUpdatesCount, -1), missingSecurityUpdatesCount=coalesce(missingSecurityUpdatesCount, -1), missingOtherUpdatesCount=coalesce(missingOtherUpdatesCount, -1), compliance=coalesce(compliance, 4), lastAssessedTime, lastUpdateAgentSeenTime, osType=2, environment=iff(ComputerEnvironment=~\"Azure\", 1, 2), ComplianceOrder=coalesce(ComplianceOrder, 2) \r\n| order by ComplianceOrder asc, missingCriticalUpdatesCount desc, missingSecurityUpdatesCount desc, missingOtherUpdatesCount desc, displayName asc\r\n| project displayName, scopedToUpdatesSolution, CriticalUpdates=missingCriticalUpdatesCount, SecurityUpdates=missingSecurityUpdatesCount, OtherUpdates=missingOtherUpdatesCount, compliance, osType, Environment=environment, lastAssessedTime, lastUpdateAgentSeenTime\r\n| extend osType = replace(@\"2\", @\"Windows\", tostring(osType))\r\n| extend osType = replace(@\"1\", @\"Linux\", tostring(osType))\r\n| extend Environment = replace(@\"2\", @\"Non-Azure\", tostring(Environment))\r\n| extend Environment = replace(@\"1\", @\"Azure\", tostring(Environment))",
                  "size": 4,
                  "exportFieldName": "displayName",
                  "exportParameterName": "Computer",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "CriticalUpdates",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 0,
                          "max": 1,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "SecurityUpdates",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 0,
                          "max": 5,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "OtherUpdates",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 0,
                          "max": 5,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "compliance",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 1,
                          "max": 2,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      }
                    ]
                  }
                },
                "name": "query - 2"
              },
              {
                "type": 1,
                "content": {
                  "json": "ðŸ’¡ Select a computer name to show its available updates",
                  "style": "info"
                },
                "name": "text - 5"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Update\r\n| where TimeGenerated>ago(14h) and OSType!=\"Linux\" and (Optional==false or Classification has \"Critical\" or Classification has \"Security\") and SourceComputerId in ((Heartbeat\r\n| where TimeGenerated>ago(12h) and OSType=~\"Windows\" and notempty(Computer)\r\n| summarize arg_max(TimeGenerated, Solutions) by SourceComputerId\r\n| where Solutions has \"updates\" | distinct SourceComputerId))\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, *) by Computer, SourceComputerId, UpdateID\r\n| where UpdateState=~\"Needed\" and Approved!=false and Computer=='{Computer}'\r\n| project Computer, Title, Classification, PublishedDate, UpdateState, Product",
                  "size": 1,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Classification",
                        "formatter": 18,
                        "formatOptions": {
                          "showIcon": true,
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Updates",
                              "representation": "orange",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Security Updates",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Definition Updates",
                              "representation": "yellow",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Update Rollups",
                              "representation": "purple",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Critical Updates",
                              "representation": "red",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "blue",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "name": "query - 4"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Linux VMs Updates"
                },
                "name": "text - 7"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Update\r\n| where OSType==\"Linux\"\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, UpdateState, Classification) by Computer, SourceComputerId, Product, ProductArch\r\n| where UpdateState=~\"Needed\"\r\n| summarize by Product, ProductArch, Classification, Computer\r\n| summarize count(Classification) by Classification",
                  "size": 1,
                  "title": "Type of Linux Updates",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "visualization": "piechart",
                  "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                      "columnMatch": "Classification",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "UpdatesNeeded",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "maximumSignificantDigits": 3,
                          "maximumFractionDigits": 2
                        }
                      }
                    }
                  },
                  "chartSettings": {
                    "seriesLabelSettings": [
                      {
                        "seriesName": "Others",
                        "color": "purple"
                      },
                      {
                        "seriesName": "Security Updates",
                        "color": "redBright"
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "Type of Updates"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Update\r\n| where OSType==\"Linux\"\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, UpdateState, Classification) by Computer, SourceComputerId, Product, ProductArch\r\n| where UpdateState=~\"Needed\"\r\n| summarize by Product, ProductArch, Classification, Computer\r\n| summarize count(Classification) by Computer",
                  "size": 1,
                  "title": "Top Linux VMs with Updates",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "visualization": "piechart",
                  "tileSettings": {
                    "showBorder": false,
                    "titleContent": {
                      "columnMatch": "Classification",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "UpdatesNeeded",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "maximumSignificantDigits": 3,
                          "maximumFractionDigits": 2
                        }
                      }
                    }
                  },
                  "chartSettings": {
                    "seriesLabelSettings": [
                      {
                        "seriesName": "Others",
                        "color": "purple"
                      },
                      {
                        "seriesName": "Security Updates",
                        "color": "redBright"
                      }
                    ]
                  }
                },
                "customWidth": "50",
                "name": "Top VMs with Updates"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Update Summary"
                },
                "name": "text - 14"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Heartbeat\r\n| where TimeGenerated>ago(12h) and OSType==\"Linux\" and notempty(Computer)\r\n| summarize arg_max(TimeGenerated, Solutions, Computer, ResourceId, ComputerEnvironment, VMUUID) by SourceComputerId\r\n| where Solutions has \"updates\"\r\n| extend vmuuId=VMUUID, azureResourceId=ResourceId, osType=1, environment=iff(ComputerEnvironment=~\"Azure\", 1, 2), scopedToUpdatesSolution=true, lastUpdateAgentSeenTime=\"\"\r\n| join kind=leftouter\r\n(\r\n    Update\r\n    | where TimeGenerated>ago(5h) and OSType==\"Linux\" and SourceComputerId in ((Heartbeat\r\n    | where TimeGenerated>ago(12h) and OSType==\"Linux\" and notempty(Computer)\r\n    | summarize arg_max(TimeGenerated, Solutions) by SourceComputerId\r\n    | where Solutions has \"updates\"\r\n    | distinct SourceComputerId))\r\n    | summarize hint.strategy=partitioned arg_max(TimeGenerated, UpdateState, Classification, Product, Computer, ComputerEnvironment) by SourceComputerId, Product, ProductArch\r\n    | summarize Computer=any(Computer), ComputerEnvironment=any(ComputerEnvironment), missingCriticalUpdatesCount=countif(Classification has \"Critical\" and UpdateState=~\"Needed\"), missingSecurityUpdatesCount=countif(Classification has \"Security\" and UpdateState=~\"Needed\"), missingOtherUpdatesCount=countif(Classification !has \"Critical\" and Classification !has \"Security\" and UpdateState=~\"Needed\"), lastAssessedTime=max(TimeGenerated), lastUpdateAgentSeenTime=\"\" by SourceComputerId\r\n    | extend compliance=iff(missingCriticalUpdatesCount > 0 or missingSecurityUpdatesCount > 0, 2, 1)\r\n    | extend ComplianceOrder=iff(missingCriticalUpdatesCount > 0 or missingSecurityUpdatesCount > 0 or missingOtherUpdatesCount > 0, 1, 3)\r\n)\r\non SourceComputerId\r\n| project displayName=Computer, scopedToUpdatesSolution=true, CriticalUpdates=coalesce(missingCriticalUpdatesCount, -1), SecurityUpdates=coalesce(missingSecurityUpdatesCount, -1), OtherUpdates=coalesce(missingOtherUpdatesCount, -1), compliance=coalesce(compliance, 4), osType=1, environment=iff(ComputerEnvironment=~\"Azure\", 1, 2), lastAssessedTime, lastUpdateAgentSeenTime\r\n| extend osType = replace(@\"1\", @\"Linux\", tostring(osType))\r\n| extend environment = replace(@\"2\", @\"Non-Azure\", tostring(environment))\r\n| extend environment = replace(@\"1\", @\"Azure\", tostring(environment))",
                  "size": 1,
                  "exportFieldName": "displayName",
                  "exportParameterName": "Computer",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "visualization": "table",
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "CriticalUpdates",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 0,
                          "max": 1,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "SecurityUpdates",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 0,
                          "max": 5,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "OtherUpdates",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 0,
                          "max": 5,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      },
                      {
                        "columnMatch": "compliance",
                        "formatter": 8,
                        "formatOptions": {
                          "min": 1,
                          "max": 2,
                          "palette": "greenRed",
                          "showIcon": true
                        }
                      }
                    ]
                  }
                },
                "name": "query - 2"
              },
              {
                "type": 1,
                "content": {
                  "json": "ðŸ’¡ Select a computer name from the list above to show its available updates",
                  "style": "info"
                },
                "name": "text - 5"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "Update\r\n| where TimeGenerated>ago(5h) and OSType==\"Linux\" and Computer == \"{Computer}\"\r\n| summarize hint.strategy=partitioned arg_max(TimeGenerated, UpdateState, Classification, BulletinUrl, BulletinID) by Computer, SourceComputerId, Product, ProductArch\r\n| where UpdateState=~\"Needed\"\r\n| project-away UpdateState, TimeGenerated\r\n| summarize computersCount=dcount(SourceComputerId, 2), ClassificationWeight=max(iff(Classification has \"Critical\", 4, iff(Classification has \"Security\", 2, 1))) by Computer, id=strcat(Product, \"_\", ProductArch), displayName=Product, productArch=ProductArch, classification=Classification, InformationId=BulletinID, InformationUrl=tostring(split(BulletinUrl, \";\", 0)[0]), osType=1\r\n| sort by ClassificationWeight desc, computersCount desc, displayName asc\r\n| extend informationLink=(iff(isnotempty(InformationId) and isnotempty(InformationUrl), toobject(strcat('{ \"uri\": \"', InformationUrl, '\", \"text\": \"', InformationId, '\", \"target\": \"blank\" }')), toobject('')))\r\n| project-away ClassificationWeight, InformationId, InformationUrl",
                  "size": 0,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "classification",
                        "formatter": 18,
                        "formatOptions": {
                          "showIcon": true,
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "==",
                              "thresholdValue": "Security Updates",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "==",
                              "thresholdValue": "Others",
                              "representation": "purple",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "blue",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "name": "query - 4"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "Updates"
          },
          "name": "Updates"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Jumpstart ArcBox Change Tracking \r\n\r\nðŸ’¡ Provide your Azure ArcBox environment information to visualize data."
                },
                "name": "text - 0"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "parameters": [
                    {
                      "id": "21dea311-7dfc-41fb-99f6-d72f0f0c33c9",
                      "version": "KqlParameterItem/1.0",
                      "name": "Subscriptions",
                      "type": 6,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "value": [],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::1",
                          "value::all"
                        ],
                        "includeAll": true,
                        "showDefault": false
                      }
                    },
                    {
                      "id": "9b289ad1-7eaa-411d-b2b0-43c69cf5aa14",
                      "version": "KqlParameterItem/1.0",
                      "name": "TimeRange",
                      "type": 4,
                      "isRequired": true,
                      "typeSettings": {
                        "selectableValues": [
                          {
                            "durationMs": 300000
                          },
                          {
                            "durationMs": 900000
                          },
                          {
                            "durationMs": 1800000
                          },
                          {
                            "durationMs": 3600000
                          },
                          {
                            "durationMs": 14400000
                          },
                          {
                            "durationMs": 43200000
                          },
                          {
                            "durationMs": 86400000
                          },
                          {
                            "durationMs": 172800000
                          },
                          {
                            "durationMs": 259200000
                          },
                          {
                            "durationMs": 604800000
                          },
                          {
                            "durationMs": 1209600000
                          },
                          {
                            "durationMs": 2419200000
                          },
                          {
                            "durationMs": 2592000000
                          },
                          {
                            "durationMs": 5184000000
                          },
                          {
                            "durationMs": 7776000000
                          }
                        ]
                      },
                      "value": {
                        "durationMs": 3600000
                      }
                    },
                    {
                      "id": "0698db8c-7a3a-4aec-bfb2-eb59942b0375",
                      "version": "KqlParameterItem/1.0",
                      "name": "Workspace",
                      "type": 5,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "where type =~ 'microsoft.operationalinsights/workspaces'",
                      "crossComponentResources": [
                        "{Subscriptions}"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": []
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "22a1d683-7992-454d-a97d-14c43b0705cc",
                      "version": "KqlParameterItem/1.0",
                      "name": "Heartbeat",
                      "type": 1,
                      "isRequired": true,
                      "query": "Heartbeat\r\n| summarize HeartbeatCount=dcount(Computer)\r\n",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "isHiddenWhenLocked": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                      "id": "f5050feb-8763-4358-8f21-8000b8fb3235",
                      "version": "KqlParameterItem/1.0",
                      "name": "ChangeTracking",
                      "type": 1,
                      "isRequired": true,
                      "query": "ConfigurationData\r\n| summarize ConfigCount=dcount(Computer)",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "isHiddenWhenLocked": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                  ],
                  "style": "pills",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                "name": "parameters - 0"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Change Tracking - Software Inventory"
                },
                "name": "text - 7"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "parameters": [
                    {
                      "id": "2701e62d-09fc-46bf-940a-ed35acdde578",
                      "version": "KqlParameterItem/1.0",
                      "name": "Computer",
                      "type": 2,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "Heartbeat\r\n| summarize arg_max(TimeGenerated, Computer) by Computer\r\n| project Computer",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                      "id": "0152f4ef-fb06-4827-b920-c523b37ee5ca",
                      "version": "KqlParameterItem/1.0",
                      "name": "Publisher",
                      "type": 5,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "ConfigurationData\r\n| where ConfigDataType == \"Software\"\r\n| where Computer in~ ({Computer}) or '*' in~ ({Computer}) \r\n| distinct Publisher",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "defaultValue": "value::all",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                      "id": "028d3fb0-611e-4132-a235-05ccd1736545",
                      "version": "KqlParameterItem/1.0",
                      "name": "Application",
                      "type": 2,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "ConfigurationData\r\n| where ConfigDataType == \"Software\"\r\n| where SoftwareType == \"Application\"\r\n| where Computer in~ ({Computer}) or '*' in~ ({Computer}) \r\n| distinct SoftwareName",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 2592000000
                      },
                      "defaultValue": "value::all",
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                  ],
                  "style": "pills",
                  "doNotRunWhenHidden": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                "name": "parameters - Software"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "ConfigurationData\r\n| where Computer in~ ({Computer}) or '*' in~ ({Computer}) \r\n| summarize Publishers=dcount(Publisher), Software=dcount(SoftwareName)\r\n| evaluate narrow()",
                  "size": 4,
                  "title": "Distinct count of publishers and Application across selected parameters",
                  "timeContext": {
                    "durationMs": 3600000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "Column",
                      "formatter": 1
                    },
                    "rightContent": {
                      "columnMatch": "Value",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      }
                    },
                    "showBorder": true
                  }
                },
                "name": "query - Software"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "parameters": [
                    {
                      "id": "769f0149-8413-450a-a96d-8912f2d1b47d",
                      "version": "KqlParameterItem/1.0",
                      "name": "Computer",
                      "type": 2,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "ConfigurationData\r\n| summarize arg_max(TimeGenerated, _ResourceId) by Computer\r\n| project Computer",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "value": [
                        "ArcBox-SQL"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    },
                    {
                      "id": "4a64dd88-3926-4075-a2bf-04aa91170d0a",
                      "version": "KqlParameterItem/1.0",
                      "name": "ServiceName",
                      "type": 2,
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "ConfigurationData\r\n| where ConfigDataType == \"WindowsServices\"\r\n| where Computer in~ ({Computer}) or '*' in~ ({Computer}) \r\n| distinct SvcName",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                  ],
                  "style": "pills",
                  "doNotRunWhenHidden": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                "name": "parameters - Services"
              },
              {
                "type": 1,
                "content": {
                  "json": "## Change Tracking - Windows Services\r\n"
                },
                "name": "text - 8"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "ConfigurationData\r\n| where ConfigDataType == \"WindowsServices\"\r\n| project Computer, _ResourceId, SvcDisplayName, SvcName, SvcState, SvcAccount, SvcPath, SvcDescription\r\n| where Computer in~ ({Computer}) or '*' in~ ({Computer}) \r\n| where SvcName in~ ({ServiceName}) or '*' in~ ({ServiceName})\r\n",
                  "size": 2,
                  "timeContext": {
                    "durationMs": 3600000
                  },
                  "timeContextFromParameter": "TimeRange",
                  "showExportToExcel": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "gridSettings": {
                    "filter": true
                  }
                },
                "name": "query - Services"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "ChangeTracking"
          },
          "name": "ChangeTracking"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Jumpstart ArcBox security overview"
                },
                "name": "text - 5"
              },
              {
                "type": 1,
                "content": {
                  "json": "ðŸ’¡ To use this workbook, you'll need to configure **continuous export** to export data to a Log Analytics workspace:\r\n1. From Microsoft Defender for Cloud's sidebar, select **Environment Settings**.\r\n2. Select the specific Azure subscription for which you want to configure the data export.\r\n3. From the sidebar of the settings page for that subscription, select **Continuous Export**.\r\n4. Set the export target to **Log Analytics workspace**.\r\n5. Select the following data types: **Security recommendations** and **Secure Score (Preview)**.\r\n6. From the export frequency options, select **Streaming** and **Snapshots**.\r\n7. Make sure to select ArcBox's subscription, resource group and Log Analytics workspace as the export target. Select Save.\r\n\r\n[Learn more](https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal#set-up-a-continuous-export)\r\n\r\n> **Notes**\r\n* To get full visibility, wait at least one week for the first snapshot to be exported.\r\n* To configure continuous export across your organization, use the supplied Azure Policy 'DeployIfNotExist' policies described [here](https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-policy#set-up-a-continuous-export)."
                },
                "showPin": false,
                "name": "Instructions"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "parameters": [
                    {
                      "id": "ae721cb1-e030-4e02-8839-9c6a00f66c8a",
                      "version": "KqlParameterItem/1.0",
                      "name": "Workspace",
                      "type": 5,
                      "description": "Select at least one workspace that contains continuous export data based on the selected subscriptions",
                      "isRequired": true,
                      "multiSelect": true,
                      "quote": "'",
                      "delimiter": ",",
                      "query": "resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces'\r\n| project id",
                      "crossComponentResources": [
                        "value::selected"
                      ],
                      "value": [
                        "value::all"
                      ],
                      "typeSettings": {
                        "resourceTypeFilter": {
                          "microsoft.operationalinsights/workspaces": true
                        },
                        "additionalResourceOptions": [
                          "value::all"
                        ],
                        "showDefault": false
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "4f3a03fd-9968-4ee7-b6bc-d04d3bbe14a8",
                      "version": "KqlParameterItem/1.0",
                      "name": "TimeRange",
                      "label": "Time Range",
                      "type": 4,
                      "description": "Filter the data of this report to one of these predefined time ranges",
                      "isRequired": true,
                      "value": {
                        "durationMs": 2592000000
                      },
                      "typeSettings": {
                        "selectableValues": [
                          {
                            "durationMs": 259200000
                          },
                          {
                            "durationMs": 604800000
                          },
                          {
                            "durationMs": 1209600000
                          },
                          {
                            "durationMs": 2419200000
                          },
                          {
                            "durationMs": 2592000000
                          }
                        ],
                        "allowCustom": true
                      }
                    },
                    {
                      "id": "0117bdc3-a4e2-476b-b7cc-3d1f486e67cf",
                      "version": "KqlParameterItem/1.0",
                      "name": "ErrorHandle",
                      "type": 1,
                      "query": "let MissingTable = view () { print isMissing=1 };\r\nunion isfuzzy=true MissingTable, (SecureScores | getschema | summarize c=count() | project isMissing=iff(c > 0, 0, 1))\r\n| top 1 by isMissing asc",
                      "crossComponentResources": [
                        "{Workspace}"
                      ],
                      "isHiddenWhenLocked": true,
                      "queryType": 0,
                      "resourceType": "microsoft.operationalinsights/workspaces"
                    }
                  ],
                  "style": "above",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                "name": "Parameters"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px -304px 0px 0px;position: relative;top:-5px\"> Current score trends per subscription (not affected by the time range parameter)\r\n</span>"
                      },
                      "customWidth": "50",
                      "name": "text - 3"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "<svg viewBox=\"0 0 19 19\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#1b93eb\" d=\"M16.82 8.886c0 4.81-5.752 8.574-7.006 9.411a.477.477 0 01-.523 0C8.036 17.565 2.18 13.7 2.18 8.886V3.135a.451.451 0 01.42-.419C7.2 2.612 6.154.625 9.5.625s2.3 1.987 6.8 2.091a.479.479 0 01.523.419z\"></path><path fill=\"url(#0024423711759027356)\" d=\"M16.192 8.99c0 4.392-5.333 7.947-6.483 8.575a.319.319 0 01-.418 0c-1.15-.732-6.483-4.183-6.483-8.575V3.762a.575.575 0 01.313-.523C7.2 3.135 6.258 1.357 9.4 1.357s2.2 1.882 6.274 1.882a.45.45 0 01.419.418z\"></path><path d=\"M9.219 5.378a.313.313 0 01.562 0l.875 1.772a.314.314 0 00.236.172l1.957.284a.314.314 0 01.174.535l-1.416 1.38a.312.312 0 00-.09.278l.334 1.949a.313.313 0 01-.455.33l-1.75-.92a.314.314 0 00-.292 0l-1.75.92a.313.313 0 01-.455-.33L7.483 9.8a.312.312 0 00-.09-.278L5.977 8.141a.314.314 0 01.174-.535l1.957-.284a.314.314 0 00.236-.172z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Aggregated score for selected subscriptions over time\r\n</span>"
                      },
                      "customWidth": "50",
                      "name": "text - 4"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "//Current score trends per subscription (show current, 7-day change from the current score as %, 30-day change from the current score as %)\r\nlet startOfToday = startofday(now()); \r\nlet offsetWeek = 6d; \r\nlet offsetMonth = 29d; \r\nlet lookbackDurationWeek = 14d; \r\nlet lookbackDurationMonth = 45d; \r\nlet endTimeWeek = startOfToday - offsetWeek; \r\nlet startTimeWeek = endTimeWeek - lookbackDurationWeek; \r\nlet endTimeMonth = startOfToday - offsetMonth; \r\nlet startTimeMonth = endTimeMonth - lookbackDurationMonth; \r\nSecureScores \r\n| extend Day = startofday(TimeGenerated) \r\n| summarize arg_max(TimeGenerated, *) by Day, SecureScoresSubscriptionId \r\n| summarize arg_max(Day, *) by SecureScoresSubscriptionId \r\n| join kind = fullouter( \r\n    SecureScores \r\n    | extend Day = startofday(TimeGenerated) \r\n    | where TimeGenerated > startTimeWeek and TimeGenerated <= endTimeWeek \r\n    | summarize arg_max(TimeGenerated, *) by SecureScoresSubscriptionId \r\n    | project OldScoreSevenDays = PercentageScore, SecureScoresSubscriptionId \r\n    ) \r\n    on SecureScoresSubscriptionId \r\n| join kind = fullouter( \r\n    SecureScores \r\n    | extend Day = startofday(TimeGenerated) \r\n    | where TimeGenerated > startTimeMonth and TimeGenerated <= endTimeMonth \r\n    | summarize arg_max(TimeGenerated, *) by SecureScoresSubscriptionId \r\n    | project OldMonthScore = PercentageScore, SecureScoresSubscriptionId \r\n    ) \r\n    on SecureScoresSubscriptionId \r\n| extend DiffSevenDays = tostring(((PercentageScore - OldScoreSevenDays) / OldScoreSevenDays) * 100) \r\n| extend DiffSevenDays = iff(isempty(DiffSevenDays), \"\", DiffSevenDays) \r\n| extend DiffMonth = tostring(((PercentageScore - OldMonthScore) / OldMonthScore) * 100) \r\n| extend DiffMonth = iff(isempty(DiffMonth), \"\", DiffMonth) \r\n| project SecureScoresSubscriptionId, CurrentScore = PercentageScore * 100, todouble(DiffSevenDays), todouble(DiffMonth)",
                        "size": 0,
                        "noDataMessage": "No data available. Check your continuous export configuration for the selected workspaces.",
                        "exportFieldName": "SecureScoresSubscriptionId",
                        "exportParameterName": "selectedSubscription",
                        "exportDefaultValue": "All",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "SecureScoresSubscriptionId",
                              "formatter": 15,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true,
                                "customColumnWidthSetting": "25ch"
                              }
                            },
                            {
                              "columnMatch": "CurrentScore",
                              "formatter": 4,
                              "formatOptions": {
                                "min": 0,
                                "max": 100,
                                "palette": "redGreen",
                                "customColumnWidthSetting": "20ch"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false,
                                  "maximumSignificantDigits": 2
                                }
                              }
                            },
                            {
                              "columnMatch": "DiffSevenDays",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "<",
                                    "thresholdValue": "0",
                                    "representation": "trenddown",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": ">",
                                    "thresholdValue": "0",
                                    "representation": "trendup",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "is Empty",
                                    "thresholdValue": "0",
                                    "representation": "Normal",
                                    "text": "N/A"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": "{0}{1}"
                                  }
                                ],
                                "customColumnWidthSetting": "20ch"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false,
                                  "maximumSignificantDigits": 2
                                }
                              }
                            },
                            {
                              "columnMatch": "DiffMonth",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "<",
                                    "thresholdValue": "0",
                                    "representation": "trenddown",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": ">",
                                    "thresholdValue": "0",
                                    "representation": "trendup",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "is Empty",
                                    "thresholdValue": "0",
                                    "representation": "Normal",
                                    "text": "N/A"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Blank",
                                    "text": "{0}{1}"
                                  }
                                ],
                                "customColumnWidthSetting": "20ch"
                              },
                              "numberFormat": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false,
                                  "maximumSignificantDigits": 2
                                }
                              }
                            }
                          ],
                          "rowLimit": 500,
                          "sortBy": [
                            {
                              "itemKey": "$gen_link_SecureScoresSubscriptionId_0",
                              "sortOrder": 1
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "SecureScoresSubscriptionId",
                              "label": "Subscription name"
                            },
                            {
                              "columnId": "CurrentScore",
                              "label": "Current score %"
                            },
                            {
                              "columnId": "DiffSevenDays",
                              "label": "7-day change"
                            },
                            {
                              "columnId": "DiffMonth",
                              "label": "30-day change"
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "$gen_link_SecureScoresSubscriptionId_0",
                            "sortOrder": 1
                          }
                        ]
                      },
                      "customWidth": "50",
                      "showPin": true,
                      "name": "ScoreTrends"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "//Aggregated score for all subscriptions over time\r\nSecureScores\r\n| where '{selectedSubscription}' == 'All' or SecureScoresSubscriptionId == '{selectedSubscription}'\r\n| where MaxScore>0\r\n| extend subscriptionScore = CurrentScore/MaxScore \r\n| extend subScoreXsubWeight = subscriptionScore*Weight \r\n| extend Day = startofday(TimeGenerated) \r\n| summarize upperValue = sum(subScoreXsubWeight), underValue = sum(todouble(Weight)) by Day\r\n| extend OverallScore = 100*((upperValue)/(underValue))\r\n| project OverallScore, Day",
                        "size": 0,
                        "aggregation": 5,
                        "showAnnotations": true,
                        "noDataMessage": "No data available. Check your continuous export configuration for the selected workspaces.",
                        "timeContextFromParameter": "TimeRange",
                        "timeBrushParameterName": "TimeRange",
                        "timeBrushExportOnlyWhenBrushed": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "visualization": "timechart",
                        "chartSettings": {
                          "seriesLabelSettings": [
                            {
                              "seriesName": "overallScore",
                              "label": "Overall Score",
                              "color": "lightBlue"
                            }
                          ],
                          "ySettings": {
                            "min": 0,
                            "max": 100
                          }
                        }
                      },
                      "customWidth": "50",
                      "showPin": true,
                      "name": "ScoreOvertime"
                    }
                  ],
                  "exportParameters": true
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "Workspace",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "ErrorHandle",
                    "comparison": "isNotEqualTo",
                    "value": "1"
                  }
                ],
                "name": "SecureScore"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "<svg viewBox=\"0 0 18 18\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"url(#ae5004eb-b3cc-4afc-9498-a0eb145de4dc)\" d=\"M6.437 1.856l-.292-.292a.5.5 0 00-.707 0L2.606 4.392 1.441 3.229a.5.5 0 00-.707 0l-.293.293a.5.5 0 000 .707l1.812 1.815a.5.5 0 00.354.146.5.5 0 00.353-.146l3.477-3.481a.5.5 0 000-.707z\"></path><rect width=\"10.366\" height=\"1.895\" x=\"7.339\" y=\"2.949\" fill=\"#a3a3a3\" rx=\".923\"></rect><rect width=\"10.366\" height=\"1.895\" x=\"7.339\" y=\"8.073\" fill=\"#a3a3a3\" rx=\".923\"></rect><rect width=\"10.366\" height=\"1.895\" x=\"7.339\" y=\"13.196\" fill=\"#a3a3a3\" rx=\".923\"></rect><path fill=\"url(#a1226368-080a-4756-9af4-a472e9b2c59c)\" d=\"M6.437 7.053l-.292-.293a.5.5 0 00-.707 0L2.606 9.588 1.441 8.425a.5.5 0 00-.707 0l-.293.293a.5.5 0 000 .707l1.812 1.815a.5.5 0 00.354.147.5.5 0 00.353-.147l3.477-3.48a.5.5 0 000-.707z\"></path><path fill=\"url(#a87a55b1-552d-4fae-9ce3-1c309da31213)\" d=\"M6.437 12.249l-.292-.293a.5.5 0 00-.354-.146.494.494 0 00-.353.146l-2.832 2.828-1.165-1.163a.5.5 0 00-.707 0l-.293.292a.5.5 0 000 .707l1.812 1.815a.5.5 0 00.707 0l3.477-3.48a.5.5 0 000-.706z\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px -304px 0px 0px;position: relative;top:-5px\"> Top recommendations with recent increase in unhealthy resources\r\n</span> <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Recommendations with the most resources that have become unhealthy in the periods shown"
                      },
                      "customWidth": "50",
                      "name": "UnhealthyRecommendations"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "<svg viewBox=\"0 0 34 28\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"#949494\" d=\"M2.44 22.93a.19.19 0 000 .13.24.24 0 00.09.08l1.73 1 2.93 1.69a.25.25 0 00.19 0 .31.31 0 00.16-.11l1-1.68a.21.21 0 000-.17.22.22 0 00-.11-.14L5 21.78a.24.24 0 01-.08-.09.21.21 0 010-.12V6.14a.16.16 0 010-.12.24.24 0 01.08-.09L8.46 4a.22.22 0 00.11-.14.2.2 0 000-.17L7.57 2l-.06-.08h-.09a.17.17 0 00-.1 0h-.1L4.35 3.53l-1.79 1a.24.24 0 00-.09.08.18.18 0 000 .12z\"></path><path fill=\"#a3a3a3\" d=\"M4.89 6L5 5.93 8.42 4a.18.18 0 00.07 0 .18.18 0 000-.08.17.17 0 000-.1.11.11 0 000-.08L7.52 2a.22.22 0 000-.08.16.16 0 00-.08-.06h-.1a.29.29 0 00-.1 0L4.31 3.53l-1.78 1a.09.09 0 00-.09.08l1.34.77zm3.53 17.7L5 21.75a.35.35 0 01-.11-.13l-2.44 1.49h.08l1.72 1 3 1.66a.19.19 0 00.09 0h.09l.09-.05.06-.07 1-1.68a.15.15 0 000-.09.24.24 0 000-.08.18.18 0 00-.05-.07s-.08-.03-.11-.03z\"></path><path fill=\"#949494\" d=\"M32.51 22.93a.21.21 0 010 .12.2.2 0 01-.09.09l-1.73 1-2.93 1.69a.25.25 0 01-.19 0 .31.31 0 01-.16-.11l-1-1.68a.25.25 0 010-.17.21.21 0 01.1-.14l3.45-1.95a.26.26 0 00.11-.21V6.14A.19.19 0 0030 6l-.08-.08L26.48 4a.21.21 0 01-.1-.14.25.25 0 010-.17l1-1.68.06-.08h.09a.16.16 0 01.1 0h.1l2.87 1.6 1.79 1a.24.24 0 01.09.08.27.27 0 010 .12z\"></path><path fill=\"#a3a3a3\" d=\"M30.06 6L30 5.93 26.53 4h-.08v-.08a.34.34 0 010-.1.2.2 0 010-.08l1-1.68a.22.22 0 01.05-.08.16.16 0 01.08-.06h.1a.29.29 0 01.1 0l2.88 1.66 1.78 1a.09.09 0 01.09.08l-1.34.77zm-3.53 17.7L30 21.75a.26.26 0 00.1-.13l2.43 1.49h-.08l-1.72 1-3 1.66h-.18a.26.26 0 01-.09-.05l-.06-.07-1-1.68a.28.28 0 010-.09.24.24 0 010-.08.18.18 0 01.05-.07.12.12 0 01.08-.03z\"></path><path d=\"M25.57 14.31H14.48a.86.86 0 01-.87-.77.79.79 0 01.87-.67h11.09a.79.79 0 01.87.67.86.86 0 01-.87.77zm0-5.61H14.48a.86.86 0 01-.87-.77.79.79 0 01.87-.67h11.09a.79.79 0 01.87.67.86.86 0 01-.87.77zm0 11.22H14.48a.86.86 0 01-.87-.77.79.79 0 01.87-.67h11.09a.79.79 0 01.87.67.86.86 0 01-.87.77z\" class=\"msportalfx-svg-c03\"></path><path d=\"M8.44 7.73l.62-.63 1.27 1.26 2.52-2.52.63.63-3.15 3.15zm0 5.62l.62-.63L10.33 14l2.52-2.52.63.63-3.15 3.15zm0 5.61l.62-.63 1.27 1.26 2.52-2.52.63.63-3.15 3.15z\" class=\"msportalfx-svg-c13\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px -304px 0px 0px;position: relative;top:-5px\"> Security controls scores over time (weekly)\r\n</span>\r\n\r\n"
                      },
                      "customWidth": "50",
                      "name": "text - 3"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "//Top recommendations with recent increase in unhealthy resources\r\nSecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState  =~ \"Unhealthy\"\r\n| summarize UnhealthyAssessedResources = dcount(AssessedResourceId),RecommendationName = any(RecommendationName) by RecommendationId\r\n| project  RecommendationName, UnhealthyAssessedResources\r\n| sort by UnhealthyAssessedResources desc\r\n| take 10",
                        "size": 0,
                        "noDataMessage": "No data available. Check your continuous export configuration for the selected workspaces.",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "visualization": "table",
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "RecommendationName",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "70ch"
                              },
                              "numberFormat": {
                                "unit": 0,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": false
                                }
                              },
                              "tooltipFormat": {
                                "tooltip": "View recommendation '{0}'"
                              }
                            },
                            {
                              "columnMatch": "UnhealthyAssessedResources",
                              "formatter": 4,
                              "formatOptions": {
                                "min": 0,
                                "palette": "blue",
                                "compositeBarSettings": {
                                  "labelText": "",
                                  "columnSettings": []
                                },
                                "customColumnWidthSetting": "25ch"
                              }
                            },
                            {
                              "columnMatch": "RecommendationId",
                              "formatter": 5
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "RecommendationName",
                              "label": "Recommendation name"
                            },
                            {
                              "columnId": "UnhealthyAssessedResources",
                              "label": "Unhealthy count"
                            }
                          ]
                        },
                        "tileSettings": {
                          "showBorder": false,
                          "titleContent": {
                            "columnMatch": "RecommendationName",
                            "formatter": 1
                          },
                          "leftContent": {
                            "columnMatch": "UnhealthyCount",
                            "formatter": 12,
                            "formatOptions": {
                              "palette": "auto"
                            },
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                              }
                            }
                          }
                        },
                        "graphSettings": {
                          "type": 0,
                          "topContent": {
                            "columnMatch": "RecommendationName",
                            "formatter": 1
                          },
                          "centerContent": {
                            "columnMatch": "UnhealthyCount",
                            "formatter": 1,
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 7"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "//Security controls score over time (weekly) \r\nlet subscriptionsWeight = \r\n    SecureScores\r\n    | where '{selectedSubscription}' == 'All' or SecureScoresSubscriptionId == '{selectedSubscription}'\r\n    | summarize arg_max(TimeGenerated, *) by SecureScoresSubscriptionId \r\n    | project SecureScoresSubscriptionId, SubscriptionWeight = Weight; \r\nSecureScoreControls \r\n| where MaxScore > 0\r\n| where IsSnapshot == true\r\n| extend Week = startofweek(TimeGenerated) \r\n| summarize arg_max(TimeGenerated, *) by SecureScoresSubscriptionId, ControlId, Week \r\n| join kind=inner(\r\n    subscriptionsWeight\r\n  ) on SecureScoresSubscriptionId \r\n| extend WeightedControlScore = PercentageScore * SubscriptionWeight \r\n| summarize WeightedScoreAvg = sum(WeightedControlScore)/sum(SubscriptionWeight)*100, ControlName = any(ControlName) by ControlId, Week\r\n| order by WeightedScoreAvg desc",
                        "size": 0,
                        "aggregation": 5,
                        "showAnnotations": true,
                        "noDataMessage": "No data available. Check your continuous export configuration for the selected workspaces.",
                        "timeContextFromParameter": "TimeRange",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "visualization": "timechart",
                        "graphSettings": {
                          "type": 0,
                          "topContent": {
                            "columnMatch": "ControlId",
                            "formatter": 1
                          },
                          "centerContent": {
                            "columnMatch": "WeightedAvgPerControl",
                            "formatter": 1,
                            "numberFormat": {
                              "unit": 17,
                              "options": {
                                "maximumSignificantDigits": 3,
                                "maximumFractionDigits": 2
                              }
                            }
                          }
                        },
                        "chartSettings": {
                          "group": "ControlName",
                          "createOtherGroup": 0,
                          "showLegend": true,
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 1,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            },
                            "min": 0,
                            "max": 100
                          }
                        }
                      },
                      "customWidth": "50",
                      "name": "Controls"
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "Workspace",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "ErrorHandle",
                    "comparison": "isNotEqualTo",
                    "value": "1"
                  }
                ],
                "name": "group - 8"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "<svg viewBox=\"0 0 18 18\" width=\"20\" class=\"fxt-escapeShadow\" role=\"presentation\" focusable=\"false\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\"><g><path fill=\"url(#18748923018756614)\" d=\"M1.9.947h14.21v16.106a.947.947 0 01-.947.947H2.842a.947.947 0 01-.947-.947z\"></path><path d=\"M3.8.944h10.42V15.2a.949.949 0 01-.947.95H4.746a.949.949 0 01-.946-.95z\" class=\"msportalfx-svg-c01\"></path><path fill=\"#0078d4\" d=\"M7.579.474a.474.474 0 10-.947 0v.947a.474.474 0 10.947 0zm-1.895 0a.474.474 0 10-.947 0v.947a.474.474 0 10.947 0zm5.684 0a.474.474 0 10-.947 0v.947a.474.474 0 10.947 0zm-1.894 0a.474.474 0 00-.948 0v.947a.474.474 0 00.948 0zm3.789 0a.474.474 0 10-.947 0v.947a.474.474 0 10.947 0z\"></path><path fill=\"#005ba1\" d=\"M11.368 13.737a.474.474 0 10-.947 0v.947a.474.474 0 10.947 0zm1.895-2.837a.474.474 0 10-.947 0v3.789a.474.474 0 10.947 0zm-7.579 2.837a.474.474 0 10-.947 0v.947a.474.474 0 10.947 0zm1.895-1.895a.474.474 0 10-.947 0v2.842a.474.474 0 10.947 0zm1.895.947a.474.474 0 00-.948 0v1.895a.474.474 0 00.948 0z\"></path><path fill=\"#b796f9\" d=\"M10.976 12.147l-3.824-1.912-1.774 1.775-.335-.335L7.059 9.66l3.754 1.877 1.779-2.668.395.262-2.011 3.016z\"></path><path fill=\"#773adc\" d=\"M7.105 10.421a.474.474 0 10-.473-.474.474.474 0 00.473.474zM9 11.374a.477.477 0 10-.474-.476.475.475 0 00.474.476zm1.9.948a.477.477 0 10-.474-.477.475.475 0 00.474.477zm-5.689-.006a.474.474 0 10-.474-.474.474.474 0 00.474.474zm7.578-2.837A.477.477 0 1012.316 9a.475.475 0 00.473.479z\"></path><path fill=\"#1b93eb\" d=\"M11.368 5.487c0 1.541-1.86 2.746-2.266 3.014a.154.154 0 01-.17 0c-.406-.234-2.3-1.473-2.3-3.014V3.646a.144.144 0 01.135-.134c1.489-.034 1.15-.67 2.233-.67s.744.636 2.2.67a.154.154 0 01.169.134z\"></path><path fill=\"url(#381967167170842)\" d=\"M10.9 5.52c0 1.284-1.489 2.288-1.814 2.512a.119.119 0 01-.135 0C8.621 7.836 7.105 6.8 7.105 5.52V3.986a.118.118 0 01.109-.112c1.186-.028.92-.558 1.786-.558s.6.53 1.759.558a.125.125 0 01.136.112z\"></path><path d=\"M8.914 3.972a.1.1 0 01.172 0l.332.707a.094.094 0 00.071.054l.75.114a.1.1 0 01.053.16l-.548.562a.1.1 0 00-.026.081l.129.789a.1.1 0 01-.139.1l-.662-.366a.1.1 0 00-.092 0l-.662.366a.1.1 0 01-.139-.1l.129-.789a.1.1 0 00-.026-.081l-.548-.562a.1.1 0 01.053-.16l.75-.114a.094.094 0 00.071-.054z\" class=\"msportalfx-svg-c01\"></path></g></svg>&nbsp;<span style=\"font-family: Open Sans; font-weight: 620; font-size: 14px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> Resources changed over time\r\n</span> <br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Select a recommendation to see its changes"
                      },
                      "name": "text - 2"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "//Recommendations changes over time (count how many resources have been changed to unhealthy, heathy, and not applicable, per recommendation) \r\nlet unhealthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState == 'Unhealthy'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName) \r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId;\r\nlet healthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState == 'Healthy' \r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName) \r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId;\r\nlet notApplicable = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState == 'NotApplicable' \r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName) \r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId; \r\nlet notUnhealthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState !~ 'Unhealthy' \r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName) \r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId; \r\nlet notHealthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState !~ 'Healthy'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName) \r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId; \r\nlet notNotApplicable = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState !~ 'NotApplicable' \r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName) \r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId; \r\nlet notHealthyToHealthy =  \r\n    notHealthy \r\n    | join (\r\n        healthy\r\n      ) on RecommendationId, AssessedResourceId \r\n    | where TimeGenerated < TimeGenerated1 \r\n    | summarize ToHealthyCount = count(), RecommendationName=any(RecommendationName) by RecommendationId;\r\nlet notUnhealthyToUnhealthy =  \r\n    notUnhealthy \r\n    | join ( \r\n        unhealthy\r\n     ) on RecommendationId, AssessedResourceId \r\n    | where TimeGenerated < TimeGenerated1 \r\n    | summarize ToUnhealthyCount = count(), RecommendationName=any(RecommendationName) by RecommendationId;\r\nlet notNotApplicableToNotApplicable =  \r\n    notNotApplicable \r\n    | join (\r\n        notApplicable\r\n     ) on RecommendationId, AssessedResourceId \r\n    | where TimeGenerated < TimeGenerated1 \r\n    | summarize ToNotApplicableCount = count(), RecommendationName=any(RecommendationName) by RecommendationId;\r\n// Union \r\nunion notHealthyToHealthy, notUnhealthyToUnhealthy, notNotApplicableToNotApplicable\r\n| summarize RecommendationName=any(RecommendationName), ToUnhealthyCount = sum(ToUnhealthyCount), ToHealthyCount = sum(ToHealthyCount), ToNotApplicableCount = sum(ToNotApplicableCount) by RecommendationId\r\n| order by ToUnhealthyCount desc",
                        "size": 0,
                        "noDataMessage": "No data available. Check your continuous export configuration for the selected workspaces.",
                        "timeContextFromParameter": "TimeRange",
                        "exportedParameters": [
                          {
                            "fieldName": "RecommendationId",
                            "parameterName": "RecommendationId"
                          },
                          {
                            "fieldName": "RecommendationName",
                            "parameterName": "RecommendationName",
                            "parameterType": 1
                          }
                        ],
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "RecommendationId",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "RecommendationName",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "Url",
                                "bladeOpenContext": {
                                  "bladeName": "RecommendationsBlade",
                                  "extensionName": "Microsoft_Azure_Security",
                                  "bladeParameters": [
                                    {
                                      "name": "assessmentKey",
                                      "source": "column",
                                      "value": "RecommendationId"
                                    }
                                  ]
                                },
                                "customColumnWidthSetting": "100ch"
                              }
                            },
                            {
                              "columnMatch": "UnhealthyCount",
                              "formatter": 8,
                              "formatOptions": {
                                "palette": "redBright"
                              }
                            },
                            {
                              "columnMatch": "HealthyCount",
                              "formatter": 8,
                              "formatOptions": {
                                "palette": "green"
                              }
                            },
                            {
                              "columnMatch": "NotApplicableCount",
                              "formatter": 8,
                              "formatOptions": {
                                "palette": "gray"
                              }
                            },
                            {
                              "columnMatch": "AssessedResourceId",
                              "formatter": 13,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "RecommendationName",
                              "label": "Recommendation name"
                            },
                            {
                              "columnId": "ToUnhealthyCount",
                              "label": "To unhealthy"
                            },
                            {
                              "columnId": "ToHealthyCount",
                              "label": "To healthy"
                            },
                            {
                              "columnId": "ToNotApplicableCount",
                              "label": "To not applicable"
                            }
                          ]
                        },
                        "sortBy": []
                      },
                      "name": "RecommendationStatusChanges"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "To view changes over time on a specific recommendation, please select any from the list above.",
                        "style": "info"
                      },
                      "conditionalVisibility": {
                        "parameterName": "RecommendationId",
                        "comparison": "isEqualTo"
                      },
                      "name": "ChangeLogBanner"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "let unhealthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState == 'Unhealthy'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName)\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId\r\n| project UnhealthyRecommendationId = RecommendationId, UnhealthyResourceId = AssessedResourceId, UnhealhyTime =  TimeGenerated, tostring(SubscriptionId);\r\nlet notApplicable = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState == 'NotApplicable'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName)\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId\r\n| project NARecommendationId = RecommendationId, NAResourceId = AssessedResourceId, NATime =  TimeGenerated, tostring(SubscriptionId);\r\nlet healthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState == 'Healthy'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName)\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId\r\n| project HealthyRecommendationId = RecommendationId, HealthyResourceId = AssessedResourceId, HealhyTime =  TimeGenerated, tostring(SubscriptionId);\r\nlet NotHealthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState !~ 'Healthy'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName)\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId;\r\nlet NotUnhealthy = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState !~ 'Unhealthy'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName)\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId;\r\nlet NotNotApplicable = SecurityRecommendation\r\n| extend SubscriptionId = iff(AssessedResourceId==\"N/A\", split(url_decode(RecommendationLink),'/')[9], split(AssessedResourceId, '/')[2])\r\n| where '{selectedSubscription}' == 'All' or SubscriptionId == '{selectedSubscription}'\r\n| where RecommendationState !~ 'NotApplicable'\r\n| where isnotempty(RecommendationId) and isnotempty(RecommendationName)\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AssessedResourceId;\r\nlet 1_to_Healthy = \r\n    NotHealthy\r\n    | extend orignalState = RecommendationState\r\n    | join healthy on $left.RecommendationId == $right.HealthyRecommendationId, $left.AssessedResourceId == $right.HealthyResourceId\r\n    | where TimeGenerated < HealhyTime\r\n    | extend update = \"To healthy\"\r\n    | project RecommendationId, RecommendationName, Description, OriginalState = RecommendationState, update, TimeGenerated, RecommendationSeverity, tostring(SubscriptionId), AssessedResourceId, RecommendationLink;\r\n//1_to_Healthy\r\nlet 2_to_Unhealthy = \r\n    NotUnhealthy\r\n    | extend orignalState = RecommendationState\r\n    | join unhealthy on $left.RecommendationId == $right.UnhealthyRecommendationId, $left.AssessedResourceId == $right.UnhealthyResourceId\r\n    | where TimeGenerated < UnhealhyTime\r\n    | extend update = \"To unhealthy\"\r\n    | project RecommendationId, RecommendationName, Description, OriginalState = RecommendationState, update, TimeGenerated, RecommendationSeverity, tostring(SubscriptionId), AssessedResourceId, RecommendationLink;\r\n//2_to_Unhealthy\r\nlet 3_to_NotApplicable = \r\n    NotNotApplicable\r\n    | extend orignalState = RecommendationState\r\n    | join notApplicable on $left.RecommendationId == $right.NARecommendationId, $left.AssessedResourceId == $right.NAResourceId\r\n    | where TimeGenerated < NATime\r\n    | extend update = \"To not applicable\"\r\n    | extend NotApplicableReason = iff(isempty(NotApplicableReason), \"NA\", NotApplicableReason)\r\n    | project RecommendationId, RecommendationName, Description, OriginalState = RecommendationState, update, TimeGenerated, RecommendationSeverity, tostring(SubscriptionId), AssessedResourceId, RecommendationLink, NotApplicableReason;\r\n// JOIN\r\nunion 1_to_Healthy, 2_to_Unhealthy, 3_to_NotApplicable\r\n| extend FullRecommendationLink = strcat(\"http://\",RecommendationLink)\r\n| extend AssessedResourceId = iff(AssessedResourceId==\"N/A\", extract(\".*onPremiseMachines/(.+)\",1, url_decode(RecommendationLink)), AssessedResourceId)\r\n| project-away RecommendationLink\r\n| where RecommendationId == '{RecommendationId}'",
                        "size": 0,
                        "title": "Changes for \"{RecommendationName}\"",
                        "noDataMessage": "No data available. Check your continuous export configuration for the selected workspaces.",
                        "timeContextFromParameter": "TimeRange",
                        "showExportToExcel": true,
                        "exportToExcelOptions": "all",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{Workspace}"
                        ],
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "RecommendationId",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "RecommendationName",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "Description",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "SubscriptionId",
                              "formatter": 15,
                              "formatOptions": {
                                "linkTarget": null,
                                "showIcon": true
                              }
                            },
                            {
                              "columnMatch": "NotApplicableReason",
                              "formatter": 0,
                              "formatOptions": {
                                "customColumnWidthSetting": "30ch"
                              }
                            },
                            {
                              "columnMatch": "FullRecommendationLink",
                              "formatter": 7,
                              "formatOptions": {
                                "linkTarget": "Url",
                                "linkLabel": "View",
                                "linkIsContextBlade": false
                              }
                            }
                          ],
                          "rowLimit": 1000,
                          "hierarchySettings": {
                            "treeType": 1,
                            "groupBy": [
                              "update"
                            ]
                          },
                          "labelSettings": [
                            {
                              "columnId": "RecommendationName",
                              "label": "Recommendation name"
                            },
                            {
                              "columnId": "OriginalState",
                              "label": "Original state"
                            },
                            {
                              "columnId": "update",
                              "label": "Updated state"
                            },
                            {
                              "columnId": "TimeGenerated",
                              "label": "Time of change"
                            },
                            {
                              "columnId": "RecommendationSeverity",
                              "label": "Severity"
                            },
                            {
                              "columnId": "SubscriptionId",
                              "label": "Subscription"
                            },
                            {
                              "columnId": "AssessedResourceId",
                              "label": "Resource"
                            },
                            {
                              "columnId": "NotApplicableReason",
                              "label": "Reason"
                            },
                            {
                              "columnId": "FullRecommendationLink",
                              "label": "View recommendation"
                            }
                          ]
                        },
                        "sortBy": []
                      },
                      "conditionalVisibility": {
                        "parameterName": "RecommendationId",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "ChangeLogDetails"
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "Workspace",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "ErrorHandle",
                    "comparison": "isNotEqualTo",
                    "value": "1"
                  }
                ],
                "name": "ChangeLog"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "title": "Agent Monitoring",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "# Microsoft Defender for Cloud Agent Monitoring\n\nTo consider an Azure Arc enabled-server *monitored* by Azure Defender it need to meet the following criteria:\n1. Have the Log Analytics agent installed\n2. The Log Analytics agent needs to be reporting to its Log Analytics workspace.\n3. The *Microsoft Defender for Cloud for servers* plan needs to be enabled on both, the machine's Azure subscription and the Log Analytics workspace the agent is reporting to.\n\nThis section will help you visualize machines which are protected by Azure Defender and have an agent installed, but which do not properly report to their workspace."
                      },
                      "name": "text - 1"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "Please select one, several, or all Log Analytics workspaces in your environment in the drop down below, so the workbook can access relevant data to visualize.",
                        "style": "info"
                      },
                      "conditionalVisibility": {
                        "parameterName": "workspace",
                        "comparison": "isEqualTo"
                      },
                      "name": "text - 2"
                    },
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "crossComponentResources": [
                          "value::all"
                        ],
                        "parameters": [
                          {
                            "id": "3d6a9f93-f352-4ed1-b361-fd784a784fff",
                            "version": "KqlParameterItem/1.0",
                            "name": "workspace",
                            "label": "Log Analytics Workspace",
                            "type": 5,
                            "isRequired": true,
                            "multiSelect": true,
                            "quote": "'",
                            "delimiter": ",",
                            "query": "resources\n| where type =~ 'microsoft.operationalinsights/workspaces'\n| project id",
                            "crossComponentResources": [
                              "value::all"
                            ],
                            "value": [],
                            "typeSettings": {
                              "additionalResourceOptions": [
                                "value::all"
                              ],
                              "showDefault": false
                            },
                            "timeContext": {
                              "durationMs": 86400000
                            },
                            "queryType": 1,
                            "resourceType": "microsoft.resourcegraph/resources"
                          }
                        ],
                        "style": "pills",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      "name": "parameters - 0"
                    }
                  ],
                  "exportParameters": true
                },
                "name": "group - 0"
              },
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "8666e136-a028-4ed7-9d57-c2f9120e9227",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Overview",
                      "subTarget": "OverviewTab",
                      "style": "link"
                    },
                    {
                      "id": "1d91d475-88d6-47ab-b8ec-7c1be397a31d",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Machines not reporting to LA workspace",
                      "subTarget": "NotReportingTab",
                      "style": "link"
                    },
                    {
                      "id": "491d0551-fb7d-4c2d-8ca2-dc4fb99e128d",
                      "cellValue": "SelectedTab",
                      "linkTarget": "parameter",
                      "linkLabel": "Security status",
                      "subTarget": "SecurityTab",
                      "style": "link"
                    }
                  ]
                },
                "name": "links - 4"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 1,
                      "content": {
                        "json": "## Overview\nIn this section, you see the current status of all Azure VMs and Azure Arc-enabled servers connected to your subscriptions and Log Analytics workspaces as selected.\n\nThe first chart shows the Log Analytics Agent installation status as reported by Azure Security Center.\nIn the second chart, you see the current Log Analytics Agent reporting status of your machines. Machines that are sending current heartbeat information within the last 15 minutes are considered as *currently reporting*.\nThe third chart shows the status of Azure Defender for Servers across all servers that are protected by Azure Security Center."
                      },
                      "name": "text - 5"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "The total number of machines in the dashboards below may vary as the Log Analytics Agent reporting status dashboard will only show machines that have been reporting within the last 30 days, whereas the other two dashboards will consider machines that are covered by Azure Defender and have an agent installed. This will include machines that have been powered off for more than 30 days but which have not been deleted.",
                        "style": "info"
                      },
                      "name": "text - 5"
                    },
                    {
                      "type": 1,
                      "content": {
                        "json": "To see more details, please select **one** value at a time from each of the charts below.",
                        "style": "info"
                      },
                      "name": "text - 4"
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "securityresources\n| where type =~ \"microsoft.security/assessments\" or type =~ \"microsoft.security/softwareInventories\"\n| extend assessmentStatusCode = case(type =~ \"microsoft.security/assessments\", tostring(properties.status.code), \"\")\n| extend severity = case(assessmentStatusCode =~ \"unhealthy\", tolower(tostring(properties.metadata.severity)), tolower(assessmentStatusCode))\n| extend exemptionType = case(tolower(type) != \"microsoft.security/assessments\",\"N/A\", case(properties.status.cause =~ \"exempt\", \"Yes\", \"No\"))\n| extend source = case(type =~ \"microsoft.security/assessments\", tostring(properties.resourceDetails.Source), \"\")\n| extend resourceId = trim(\" \", tolower(tostring(case(source =~ \"azure\", properties.resourceDetails.Id,\n                                                                            source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\n                                                                            source =~ \"aws\", properties.resourceDetails.AzureResourceId,\n                                                                            source =~ \"gcp\", properties.resourceDetails.AzureResourceId,\n                                                                            type =~ \"microsoft.security/assessments\", extract(\"^(.+)/providers/Microsoft.Security/assessments/.+$\",1,id),extract(\"^(.+)/providers/Microsoft.Security/softwareInventories/.+$\",1,id)))))\n| extend resourceName = iff(source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), tostring(properties.additionalData.ResourceName), extract(@\"(.+)/(.+)\", 2, resourceId))\n| extend regexResourceId = extract_all(@\"/providers/([^/]+)(?:/([^/]+)/[^/]+(?:/([^/]+)/[^/]+)?)?/([^/]+)/[^/]+$\", resourceId)\n| extend RegexResourceType = regexResourceId[0]\n| extend mainType = RegexResourceType[1], extendedType = RegexResourceType[2], resourceType = RegexResourceType[3]\n| extend providerName = RegexResourceType[0],\n                        mainType = case(mainType !~ \"\", strcat(\"/\",mainType), \"\"),\n                        extendedType = case(extendedType!~ \"\", strcat(\"/\",extendedType), \"\"),\n                        resourceType = case(resourceType!~ \"\", strcat(\"/\",resourceType), \"\")\n| extend array = split(resourceId, '/')\n| extend typeFullPath = case(\n                    array_length(array) == 3, 'subscription',\n                    array_length(array) == 5, 'resourcegroups',\n                    source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), tolower(strcat(providerName, mainType, \"/\", tostring(properties.additionalData.ResourceProvider), tostring(properties.additionalData.ResourceType))),\n                    strcat(providerName, mainType, extendedType, resourceType))\n| extend resourceType = case(typeFullPath =~ 'resourcegroups' or typeFullPath =~ 'subscription', typeFullPath, tolower(trim(\"/\", resourceType)))\n| extend assessmentKey = case(type =~ \"microsoft.security/assessments\", tostring(name), \"\")\n| extend softwareVendorName = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.vendor), \"\")\n| extend softwareName = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.softwareName), \"\")\n| extend softwareVersion = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.version), \"\")\n| extend softwareNameIdentifier = case(type =~ \"microsoft.security/softwareInventories\", strcat(softwareVendorName, \",\", softwareName, \",\", softwareVersion), \"\")\n| extend environment = case(type =~ \"microsoft.security/assessments\", properties.resourceDetails[\"Source\"], \"\")\n| extend environment = case(environment =~ \"onpremise\", tolower(\"Non-Azure\"), tolower(environment))\n| extend osTypeProperty = properties.additionalData[\"OS Type\"]\n| extend osType = case(isnotempty(osTypeProperty), osTypeProperty, \"\")\n| extend hasAgent = case(assessmentKey == \"d1db3318-01ff-16de-29eb-28b344515626\" or assessmentKey == \"45cfe080-ceb1-a91e-9743-71551ed24e94\" or assessmentKey == \"720a3e77-0b9a-4fa9-98b6-ddf0fd7e32c1\" or assessmentKey == \"27ac71b1-75c5-41c2-adc2-858f5db45b08\", assessmentStatusCode, \"\")\n| extend hasAgent = case(assessmentKey == \"4ab6e3c5-74dd-8b35-9ab9-f61b30875b27\" or assessmentKey == \"181ac480-f7c4-544b-9865-11b8ffe87f47\" or assessmentKey == \"4fb67663-9ab9-475d-b026-8c544cced439\" , \"healthy\", hasAgent)\n| extend workspaceAzureResourceId = case(hasAgent !~ \"\", properties.additionalData[\"Reporting workspace azure id\"], \"\")\n| extend workspaceName = case(workspaceAzureResourceId !~ \"\", extract(@\"(.+)/(.+)\", 2, workspaceAzureResourceId), \"\")\n| extend assessmentDisplayName = case(type =~ \"microsoft.security/assessments\", case(isnotempty(properties.displayName), properties.displayName, properties.metadata.displayName), \"\")\n| extend assessmentIdentifier = case(type =~ \"microsoft.security/assessments\", strcat(assessmentKey, \",\" , assessmentDisplayName, \",\", severity), \"\")\n| summarize assessmentsCount = count() , assessmentsIdentifier = make_list(assessmentIdentifier), softwareNamesIdentifier = make_list(softwareNameIdentifier), hasAgent = max(hasAgent), workspaceName = max(workspaceName), environment = max(environment), osType = max(osType), exemptionType = max(exemptionType)  by resourceId, subscriptionId, resourceName, resourceType, typeFullPath, severity\n| extend packAssessments = pack(severity, assessmentsCount)\n| summarize assessmentsSummary = make_bag(packAssessments), assessmentsIdentifier = make_set(assessmentsIdentifier), softwareNamesIdentifier = make_set(softwareNamesIdentifier), hasAgent = max(hasAgent), workspaceName= max(workspaceName), environment = max(environment), osType= max(osType), exemptionType = max(exemptionType)  by resourceId, subscriptionId, resourceName, resourceType, typeFullPath\n| extend agentMonitoring = case(hasAgent =~ \"NotApplicable\" or hasAgent =~ \"\", '',\n                                                hasAgent =~ \"Unhealthy\", \"notInstalled\",\n                                                \"installed\")\n| join kind=leftouter (\n                    securityresources\n                    | where type =~ \"microsoft.security/pricings\"\n                    | project subscriptionId, bundleName = tolower(name), freeTrialRemainingTime = properties.freeTrialRemainingTime, pricingTier = tolower(properties.pricingTier)\n                    | extend bundlesPricing = pack(bundleName, pricingTier)\n                    | summarize subscriptionPricing = make_bag(bundlesPricing) by subscriptionId\n                ) on subscriptionId\n| extend hasNoSoftwareData = case(array_length(softwareNamesIdentifier) == 1, case(set_has_element(softwareNamesIdentifier, \"\"), true, false), false)\n| extend softwareNamesIdentifier = case(hasNoSoftwareData, softwareNamesIdentifier, set_difference(softwareNamesIdentifier, pack_array(\"\")))\n| extend AssessmentsHigh = case(isnull(assessmentsSummary.high), 0 , toint(assessmentsSummary.high))\n| extend AssessmentsMedium = case(isnull(assessmentsSummary.medium), 0 , toint(assessmentsSummary.medium))\n| extend AssessmentsLow = case(isnull(assessmentsSummary.low), 0 , toint(assessmentsSummary.low))\n| extend unhealthyAssessmentsCount = AssessmentsHigh + AssessmentsMedium + AssessmentsLow\n| extend virtualmachines = case(isnull(subscriptionPricing), '' , subscriptionPricing.virtualmachines)\n| extend virtualmachines = case(virtualmachines == 'free', 'off', 'on')\n| extend sqlservers = case(isnull(subscriptionPricing), '' , subscriptionPricing.sqlservers)\n| extend sqlservers = case(sqlservers == 'free', 'off', 'on')\n| extend kubernetesservice = case(isnull(subscriptionPricing), '' , subscriptionPricing.kubernetesservice)\n| extend kubernetesservice = case(kubernetesservice == 'free', 'off', 'on')\n| extend containerregistry = case(isnull(subscriptionPricing), '' , subscriptionPricing.containerregistry)\n| extend containerregistry = case(containerregistry == 'free', 'off', 'on')\n| extend connectedcontainerregistry = case(isnull(subscriptionPricing), '' , subscriptionPricing.connectedcontainerregistry)\n| extend connectedcontainerregistry = case(connectedcontainerregistry == 'free', 'off', 'on')\n| extend sqlservervirtualmachines = case(isnull(subscriptionPricing), '' , subscriptionPricing.sqlservervirtualmachines)\n| extend sqlservervirtualmachines = case(sqlservervirtualmachines == 'free', 'off', 'on')\n| extend appservices = case(isnull(subscriptionPricing), '' , subscriptionPricing.appservices)\n| extend appservices = case(appservices == 'free', 'off', 'on')\n| extend storageaccounts = case(isnull(subscriptionPricing), '' , subscriptionPricing.storageaccounts)\n| extend storageaccounts = case(storageaccounts == 'free', 'off', 'on')\n| extend keyvaults = case(isnull(subscriptionPricing), '' , subscriptionPricing.keyvaults)\n| extend keyvaults = case(keyvaults == 'free', 'off', 'on')\n| extend opensourcerelationaldatabases = case(isnull(subscriptionPricing), '' , subscriptionPricing.opensourcerelationaldatabases)\n| extend opensourcerelationaldatabases = case(opensourcerelationaldatabases == 'free', 'off', 'on')\n| extend calculatedSubscriptionPricing = case(resourceType =~ \"subscription\" and isempty(subscriptionPricing) == false , iff(subscriptionPricing has \"free\" and subscriptionPricing has \"standard\", \"partial\", iff(subscriptionPricing has \"free\", \"off\", \"on\")), \"\")\n| extend resourcePricing = case(typeFullPath =~ \"microsoft.classiccompute/virtualmachines\", virtualmachines, typeFullPath =~ \"microsoft.compute/virtualmachines\", virtualmachines, typeFullPath =~ \"microsoft.hybridcompute/machines\", virtualmachines, typeFullPath =~ \"microsoft.sql/servers\", sqlservers, typeFullPath =~ \"microsoft.containerservice/managedclusters\", kubernetesservice, typeFullPath =~ \"microsoft.kubernetes/connectedclusters\", kubernetesservice, typeFullPath =~ \"microsoft.containerregistry/registries\", containerregistry, typeFullPath =~ \"microsoft.security/connectedcontainerregistries\", connectedcontainerregistry, typeFullPath =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\", sqlservervirtualmachines, typeFullPath =~ \"microsoft.web/sites\", appservices, typeFullPath =~ \"microsoft.storage/storageaccounts\", storageaccounts, typeFullPath =~ \"microsoft.compute/virtualmachinescalesets\", virtualmachines, typeFullPath =~ \"microsoft.keyvault/vaults\", keyvaults, typeFullPath =~ \"microsoft.dbforpostgresql/servers\", opensourcerelationaldatabases, typeFullPath =~ \"microsoft.dbformysql/servers\", opensourcerelationaldatabases, typeFullPath =~ \"microsoft.dbformariadb/servers\", opensourcerelationaldatabases, calculatedSubscriptionPricing)\n| extend pricing = case(resourceType =~ \"subscription\" , calculatedSubscriptionPricing , resourcePricing)\n| extend selectedSoftware = \"\"\n| project resourceType, exemptionType, typeFullPath, resourceId, resourceName, subscriptionId, environment, osType, workspaceName, agentMonitoring, assessmentsIdentifier, assessmentsSummary, subscriptionPricing, unhealthyAssessmentsCount, pricing, softwareNamesIdentifier, selectedSoftware\n| extend resourceGroup = tolower(tostring(split(resourceId, \"/\")[4]))\n| order by unhealthyAssessmentsCount, subscriptionId, resourceType, resourceId\n| where typeFullPath in ('microsoft.compute/virtualmachines', 'microsoft.hybridcompute/machines')\n| where isnotempty(resourceId)\n| summarize dcount(resourceId) by agentMonitoring",
                        "size": 3,
                        "title": "Log Analytics Agent installation status",
                        "exportFieldName": "",
                        "exportParameterName": "agentInstallStatus",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "value::all"
                        ],
                        "visualization": "piechart",
                        "chartSettings": {
                          "seriesLabelSettings": [
                            {
                              "seriesName": "installed",
                              "color": "green"
                            }
                          ]
                        }
                      },
                      "customWidth": "33",
                      "name": "query - 5",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "\nHeartbeat\n| summarize arg_max(TimeGenerated, SubscriptionId) by tolower(ResourceId)\n| extend LastSeen = case(TimeGenerated > now(-15m), \"currently reporting\",\n                        TimeGenerated < now(-15m) and TimeGenerated > now(-24h), \"not reporting for > 15 min\",\n                        TimeGenerated < now(-24h) and TimeGenerated > now(-48h), \"not reporting for > 24 hours\",\n                        TimeGenerated < now(-48h) and TimeGenerated > now(-3d), \"not reporting for > 48 hours\",\n                        TimeGenerated < now(-3d) and TimeGenerated > now(-7d), \"not reporting for > 3 days\",\n                        TimeGenerated < now(-7d) and TimeGenerated > now(-30d), \"not reporting for > 7 days\",\n                        \"failed\")\n| order by TimeGenerated\n| summarize NotReportingSince = count() by LastSeen",
                        "size": 3,
                        "title": "Log Analytics Agent reporting status",
                        "timeContext": {
                          "durationMs": 2592000000
                        },
                        "exportFieldName": "",
                        "exportParameterName": "lastSeen",
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{workspace}"
                        ],
                        "visualization": "piechart",
                        "chartSettings": {
                          "seriesLabelSettings": [
                            {
                              "seriesName": "not reporting for > 7 days",
                              "color": "red"
                            },
                            {
                              "seriesName": "currently reporting",
                              "color": "green"
                            },
                            {
                              "seriesName": "not reporting for > 15 min",
                              "color": "yellow"
                            },
                            {
                              "seriesName": "not reporting for > 24 hours",
                              "color": "orange"
                            },
                            {
                              "seriesName": "not reporting for > 48 hours",
                              "color": "redBright"
                            },
                            {
                              "seriesName": "not reporting for > 3 days",
                              "color": "red"
                            }
                          ],
                          "ySettings": {
                            "numberFormatSettings": {
                              "unit": 0,
                              "options": {
                                "style": "decimal",
                                "useGrouping": true
                              }
                            }
                          }
                        }
                      },
                      "customWidth": "33",
                      "name": "query - 3",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "securityresources\n| where type =~ \"microsoft.security/assessments\" or type =~ \"microsoft.security/softwareInventories\"\n| extend assessmentStatusCode = case(type =~ \"microsoft.security/assessments\", tostring(properties.status.code), \"\")\n| extend severity = case(assessmentStatusCode =~ \"unhealthy\", tolower(tostring(properties.metadata.severity)), tolower(assessmentStatusCode))\n| extend exemptionType = case(tolower(type) != \"microsoft.security/assessments\",\"N/A\", case(properties.status.cause =~ \"exempt\", \"Yes\", \"No\"))\n| extend source = case(type =~ \"microsoft.security/assessments\", tostring(properties.resourceDetails.Source), \"\")\n| extend resourceId = trim(\" \", tolower(tostring(case(source =~ \"azure\", properties.resourceDetails.Id,\n                                                                            source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\n                                                                            source =~ \"aws\", properties.resourceDetails.AzureResourceId,\n                                                                            source =~ \"gcp\", properties.resourceDetails.AzureResourceId,\n                                                                            type =~ \"microsoft.security/assessments\", extract(\"^(.+)/providers/Microsoft.Security/assessments/.+$\",1,id),extract(\"^(.+)/providers/Microsoft.Security/softwareInventories/.+$\",1,id)))))\n| extend resourceName = iff(source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), tostring(properties.additionalData.ResourceName), extract(@\"(.+)/(.+)\", 2, resourceId))\n| extend regexResourceId = extract_all(@\"/providers/([^/]+)(?:/([^/]+)/[^/]+(?:/([^/]+)/[^/]+)?)?/([^/]+)/[^/]+$\", resourceId)\n| extend RegexResourceType = regexResourceId[0]\n| extend mainType = RegexResourceType[1], extendedType = RegexResourceType[2], resourceType = RegexResourceType[3]\n| extend providerName = RegexResourceType[0],\n                        mainType = case(mainType !~ \"\", strcat(\"/\",mainType), \"\"),\n                        extendedType = case(extendedType!~ \"\", strcat(\"/\",extendedType), \"\"),\n                        resourceType = case(resourceType!~ \"\", strcat(\"/\",resourceType), \"\")\n| extend array = split(resourceId, '/')\n| extend typeFullPath = case(\n                    array_length(array) == 3, 'subscription',\n                    array_length(array) == 5, 'resourcegroups',\n                    source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), tolower(strcat(providerName, mainType, \"/\", tostring(properties.additionalData.ResourceProvider), tostring(properties.additionalData.ResourceType))),\n                    strcat(providerName, mainType, extendedType, resourceType))\n| extend resourceType = case(typeFullPath =~ 'resourcegroups' or typeFullPath =~ 'subscription', typeFullPath, tolower(trim(\"/\", resourceType)))\n| extend assessmentKey = case(type =~ \"microsoft.security/assessments\", tostring(name), \"\")\n| extend softwareVendorName = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.vendor), \"\")\n| extend softwareName = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.softwareName), \"\")\n| extend softwareVersion = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.version), \"\")\n| extend softwareNameIdentifier = case(type =~ \"microsoft.security/softwareInventories\", strcat(softwareVendorName, \",\", softwareName, \",\", softwareVersion), \"\")\n| extend environment = case(type =~ \"microsoft.security/assessments\", properties.resourceDetails[\"Source\"], \"\")\n| extend environment = case(environment =~ \"onpremise\", tolower(\"Non-Azure\"), tolower(environment))\n| extend osTypeProperty = properties.additionalData[\"OS Type\"]\n| extend osType = case(isnotempty(osTypeProperty), osTypeProperty, \"\")\n| extend hasAgent = case(assessmentKey == \"d1db3318-01ff-16de-29eb-28b344515626\" or assessmentKey == \"45cfe080-ceb1-a91e-9743-71551ed24e94\" or assessmentKey == \"720a3e77-0b9a-4fa9-98b6-ddf0fd7e32c1\" or assessmentKey == \"27ac71b1-75c5-41c2-adc2-858f5db45b08\", assessmentStatusCode, \"\")\n| extend hasAgent = case(assessmentKey == \"4ab6e3c5-74dd-8b35-9ab9-f61b30875b27\" or assessmentKey == \"181ac480-f7c4-544b-9865-11b8ffe87f47\" or assessmentKey == \"4fb67663-9ab9-475d-b026-8c544cced439\" , \"healthy\", hasAgent)\n| extend workspaceAzureResourceId = case(hasAgent !~ \"\", properties.additionalData[\"Reporting workspace azure id\"], \"\")\n| extend workspaceName = case(workspaceAzureResourceId !~ \"\", extract(@\"(.+)/(.+)\", 2, workspaceAzureResourceId), \"\")\n| extend assessmentDisplayName = case(type =~ \"microsoft.security/assessments\", case(isnotempty(properties.displayName), properties.displayName, properties.metadata.displayName), \"\")\n| extend assessmentIdentifier = case(type =~ \"microsoft.security/assessments\", strcat(assessmentKey, \",\" , assessmentDisplayName, \",\", severity), \"\")\n| summarize assessmentsCount = count() , assessmentsIdentifier = make_list(assessmentIdentifier), softwareNamesIdentifier = make_list(softwareNameIdentifier), hasAgent = max(hasAgent), workspaceName = max(workspaceName), environment = max(environment), osType = max(osType), exemptionType = max(exemptionType)  by resourceId, subscriptionId, resourceName, resourceType, typeFullPath, severity\n| extend packAssessments = pack(severity, assessmentsCount)\n| summarize assessmentsSummary = make_bag(packAssessments), assessmentsIdentifier = make_set(assessmentsIdentifier), softwareNamesIdentifier = make_set(softwareNamesIdentifier), hasAgent = max(hasAgent), workspaceName= max(workspaceName), environment = max(environment), osType= max(osType), exemptionType = max(exemptionType)  by resourceId, subscriptionId, resourceName, resourceType, typeFullPath\n| extend agentMonitoring = case(hasAgent =~ \"NotApplicable\" or hasAgent =~ \"\", '',\n                                                hasAgent =~ \"Unhealthy\", \"notInstalled\",\n                                                \"installed\")\n| join kind=leftouter (\n                    securityresources\n                    | where type =~ \"microsoft.security/pricings\"\n                    | project subscriptionId, bundleName = tolower(name), freeTrialRemainingTime = properties.freeTrialRemainingTime, pricingTier = tolower(properties.pricingTier)\n                    | extend bundlesPricing = pack(bundleName, pricingTier)\n                    | summarize subscriptionPricing = make_bag(bundlesPricing) by subscriptionId\n                ) on subscriptionId\n| extend hasNoSoftwareData = case(array_length(softwareNamesIdentifier) == 1, case(set_has_element(softwareNamesIdentifier, \"\"), true, false), false)\n| extend softwareNamesIdentifier = case(hasNoSoftwareData, softwareNamesIdentifier, set_difference(softwareNamesIdentifier, pack_array(\"\")))\n| extend AssessmentsHigh = case(isnull(assessmentsSummary.high), 0 , toint(assessmentsSummary.high))\n| extend AssessmentsMedium = case(isnull(assessmentsSummary.medium), 0 , toint(assessmentsSummary.medium))\n| extend AssessmentsLow = case(isnull(assessmentsSummary.low), 0 , toint(assessmentsSummary.low))\n| extend unhealthyAssessmentsCount = AssessmentsHigh + AssessmentsMedium + AssessmentsLow\n| extend virtualmachines = case(isnull(subscriptionPricing), '' , subscriptionPricing.virtualmachines)\n| extend virtualmachines = case(virtualmachines == 'free', 'off', 'on')\n| extend sqlservers = case(isnull(subscriptionPricing), '' , subscriptionPricing.sqlservers)\n| extend sqlservers = case(sqlservers == 'free', 'off', 'on')\n| extend kubernetesservice = case(isnull(subscriptionPricing), '' , subscriptionPricing.kubernetesservice)\n| extend kubernetesservice = case(kubernetesservice == 'free', 'off', 'on')\n| extend containerregistry = case(isnull(subscriptionPricing), '' , subscriptionPricing.containerregistry)\n| extend containerregistry = case(containerregistry == 'free', 'off', 'on')\n| extend connectedcontainerregistry = case(isnull(subscriptionPricing), '' , subscriptionPricing.connectedcontainerregistry)\n| extend connectedcontainerregistry = case(connectedcontainerregistry == 'free', 'off', 'on')\n| extend sqlservervirtualmachines = case(isnull(subscriptionPricing), '' , subscriptionPricing.sqlservervirtualmachines)\n| extend sqlservervirtualmachines = case(sqlservervirtualmachines == 'free', 'off', 'on')\n| extend appservices = case(isnull(subscriptionPricing), '' , subscriptionPricing.appservices)\n| extend appservices = case(appservices == 'free', 'off', 'on')\n| extend storageaccounts = case(isnull(subscriptionPricing), '' , subscriptionPricing.storageaccounts)\n| extend storageaccounts = case(storageaccounts == 'free', 'off', 'on')\n| extend keyvaults = case(isnull(subscriptionPricing), '' , subscriptionPricing.keyvaults)\n| extend keyvaults = case(keyvaults == 'free', 'off', 'on')\n| extend opensourcerelationaldatabases = case(isnull(subscriptionPricing), '' , subscriptionPricing.opensourcerelationaldatabases)\n| extend opensourcerelationaldatabases = case(opensourcerelationaldatabases == 'free', 'off', 'on')\n| extend calculatedSubscriptionPricing = case(resourceType =~ \"subscription\" and isempty(subscriptionPricing) == false , iff(subscriptionPricing has \"free\" and subscriptionPricing has \"standard\", \"partial\", iff(subscriptionPricing has \"free\", \"off\", \"on\")), \"\")\n| extend resourcePricing = case(typeFullPath =~ \"microsoft.classiccompute/virtualmachines\", virtualmachines, typeFullPath =~ \"microsoft.compute/virtualmachines\", virtualmachines, typeFullPath =~ \"microsoft.hybridcompute/machines\", virtualmachines, typeFullPath =~ \"microsoft.sql/servers\", sqlservers, typeFullPath =~ \"microsoft.containerservice/managedclusters\", kubernetesservice, typeFullPath =~ \"microsoft.kubernetes/connectedclusters\", kubernetesservice, typeFullPath =~ \"microsoft.containerregistry/registries\", containerregistry, typeFullPath =~ \"microsoft.security/connectedcontainerregistries\", connectedcontainerregistry, typeFullPath =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\", sqlservervirtualmachines, typeFullPath =~ \"microsoft.web/sites\", appservices, typeFullPath =~ \"microsoft.storage/storageaccounts\", storageaccounts, typeFullPath =~ \"microsoft.compute/virtualmachinescalesets\", virtualmachines, typeFullPath =~ \"microsoft.keyvault/vaults\", keyvaults, typeFullPath =~ \"microsoft.dbforpostgresql/servers\", opensourcerelationaldatabases, typeFullPath =~ \"microsoft.dbformysql/servers\", opensourcerelationaldatabases, typeFullPath =~ \"microsoft.dbformariadb/servers\", opensourcerelationaldatabases, calculatedSubscriptionPricing)\n| extend pricing = case(resourceType =~ \"subscription\" , calculatedSubscriptionPricing , resourcePricing)\n| extend selectedSoftware = \"\"\n| project resourceType, exemptionType, typeFullPath, resourceId, resourceName, subscriptionId, environment, osType, workspaceName, agentMonitoring, assessmentsIdentifier, assessmentsSummary, subscriptionPricing, unhealthyAssessmentsCount, pricing, softwareNamesIdentifier, selectedSoftware\n| extend resourceGroup = tolower(tostring(split(resourceId, \"/\")[4]))\n| order by unhealthyAssessmentsCount, subscriptionId, resourceType, resourceId\n| where typeFullPath in ('microsoft.compute/virtualmachines', 'microsoft.hybridcompute/machines')\n| where isnotempty(resourceId)\n| summarize dcount(resourceId) by AzureDefender = pricing",
                        "size": 3,
                        "title": "Azure Defender coverage",
                        "exportParameterName": "defenderStatus",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "value::all"
                        ],
                        "visualization": "piechart",
                        "chartSettings": {
                          "seriesLabelSettings": [
                            {
                              "seriesName": "on",
                              "color": "green"
                            },
                            {
                              "seriesName": "of",
                              "color": "redBright"
                            }
                          ]
                        }
                      },
                      "customWidth": "33",
                      "name": "query - 3",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ],
                  "exportParameters": true
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "workspace",
                    "comparison": "isNotEqualTo"
                  },
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "OverviewTab"
                  }
                ],
                "name": "summary - group",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "title": "Machines not sending current heartbeats",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Heartbeat\n| join kind = leftanti (\n    Heartbeat\n    | where TimeGenerated > now(-15m)\n) on SourceComputerId\n| summarize arg_max(LatestTimestamp=TimeGenerated, SubscriptionId) by ResourceId\n| order by LatestTimestamp",
                        "size": 3,
                        "showAnalytics": true,
                        "title": "Agent not reporting for more than 15 minutes",
                        "noDataMessage": "No machines found not reporting for more than 15 minutes.",
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{workspace}"
                        ],
                        "gridSettings": {
                          "labelSettings": [
                            {
                              "columnId": "ResourceId",
                              "label": "Resource ID"
                            },
                            {
                              "columnId": "LatestTimestamp",
                              "label": "Latest Heartbeat"
                            },
                            {
                              "columnId": "SubscriptionId",
                              "label": "Subscription ID"
                            }
                          ]
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 0",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Heartbeat\n| join kind = leftanti (\n    Heartbeat\n    | where TimeGenerated > now(-24h)\n) on SourceComputerId\n| summarize arg_max(LatestTimestamp=TimeGenerated, SubscriptionId) by ResourceId\n| order by LatestTimestamp",
                        "size": 3,
                        "showAnalytics": true,
                        "title": "Agent not reporting for more than 24 hours",
                        "noDataMessage": "No machines found not reporting for more than 24 hours.",
                        "timeContext": {
                          "durationMs": 172800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{workspace}"
                        ],
                        "gridSettings": {
                          "labelSettings": [
                            {
                              "columnId": "ResourceId",
                              "label": "Resource ID"
                            },
                            {
                              "columnId": "LatestTimestamp",
                              "label": "Latest Heartbeat"
                            },
                            {
                              "columnId": "SubscriptionId",
                              "label": "Subscription ID"
                            }
                          ]
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 1",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Heartbeat\n| join kind = leftanti (\n    Heartbeat\n    | where TimeGenerated > now(-48h)\n) on SourceComputerId\n| summarize arg_max(LatestTimestamp=TimeGenerated, SubscriptionId) by ResourceId\n| order by LatestTimestamp",
                        "size": 3,
                        "showAnalytics": true,
                        "title": "Agent not reporting for more than 48 hours",
                        "noDataMessage": "No machines found not reporting for more than 48 hours.",
                        "timeContext": {
                          "durationMs": 604800000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{workspace}"
                        ],
                        "gridSettings": {
                          "labelSettings": [
                            {
                              "columnId": "ResourceId",
                              "label": "Resource ID"
                            },
                            {
                              "columnId": "LatestTimestamp",
                              "label": "Latest Heartbeat"
                            },
                            {
                              "columnId": "SubscriptionId",
                              "label": "Subscription ID"
                            }
                          ]
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 2",
                      "styleSettings": {
                        "showBorder": true
                      }
                    },
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "Heartbeat\n| join kind = leftanti (\n    Heartbeat\n    | where TimeGenerated > now(-7d)\n) on SourceComputerId\n| summarize arg_max(LatestTimestamp=TimeGenerated, SubscriptionId) by ResourceId\n| order by LatestTimestamp",
                        "size": 3,
                        "showAnalytics": true,
                        "title": "Agent not reporting for more than 7 days",
                        "noDataMessage": "No machines found not reporting for more than 7 days.",
                        "timeContext": {
                          "durationMs": 2592000000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "crossComponentResources": [
                          "{workspace}"
                        ],
                        "gridSettings": {
                          "labelSettings": [
                            {
                              "columnId": "ResourceId",
                              "label": "Resource ID"
                            },
                            {
                              "columnId": "LatestTimestamp",
                              "label": "Latest Heartbeat"
                            },
                            {
                              "columnId": "SubscriptionId",
                              "label": "Subscription ID"
                            }
                          ]
                        }
                      },
                      "customWidth": "50",
                      "name": "query - 3",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "SelectedTab",
                    "comparison": "isEqualTo",
                    "value": "NotReportingTab"
                  },
                  {
                    "parameterName": "workspace",
                    "comparison": "isNotEqualTo"
                  }
                ],
                "name": "MachinesNotReporting",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "title": "Protection Status",
                  "items": [
                    {
                      "type": 3,
                      "content": {
                        "version": "KqlItem/1.0",
                        "query": "securityresources\n| where type =~ \"microsoft.security/assessments\" or type =~ \"microsoft.security/softwareInventories\"\n| extend assessmentStatusCode = case(type =~ \"microsoft.security/assessments\", tostring(properties.status.code), \"\")\n| extend severity = case(assessmentStatusCode =~ \"unhealthy\", tolower(tostring(properties.metadata.severity)), tolower(assessmentStatusCode))\n| extend exemptionType = case(tolower(type) != \"microsoft.security/assessments\",\"N/A\", case(properties.status.cause =~ \"exempt\", \"Yes\", \"No\"))\n| extend source = case(type =~ \"microsoft.security/assessments\", tostring(properties.resourceDetails.Source), \"\")\n| extend resourceId = trim(\" \", tolower(tostring(case(source =~ \"azure\", properties.resourceDetails.Id,\n                                                                            source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id,\n                                                                            source =~ \"aws\", properties.resourceDetails.AzureResourceId,\n                                                                            source =~ \"gcp\", properties.resourceDetails.AzureResourceId,\n                                                                            type =~ \"microsoft.security/assessments\", extract(\"^(.+)/providers/Microsoft.Security/assessments/.+$\",1,id),extract(\"^(.+)/providers/Microsoft.Security/softwareInventories/.+$\",1,id)))))\n| extend resourceName = iff(source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), tostring(properties.additionalData.ResourceName), extract(@\"(.+)/(.+)\", 2, resourceId))\n| extend regexResourceId = extract_all(@\"/providers/([^/]+)(?:/([^/]+)/[^/]+(?:/([^/]+)/[^/]+)?)?/([^/]+)/[^/]+$\", resourceId)\n| extend RegexResourceType = regexResourceId[0]\n| extend mainType = RegexResourceType[1], extendedType = RegexResourceType[2], resourceType = RegexResourceType[3]\n| extend providerName = RegexResourceType[0],\n                        mainType = case(mainType !~ \"\", strcat(\"/\",mainType), \"\"),\n                        extendedType = case(extendedType!~ \"\", strcat(\"/\",extendedType), \"\"),\n                        resourceType = case(resourceType!~ \"\", strcat(\"/\",resourceType), \"\")\n| extend array = split(resourceId, '/')\n| extend typeFullPath = case(\n                    array_length(array) == 3, 'subscription',\n                    array_length(array) == 5, 'resourcegroups',\n                    source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), tolower(strcat(providerName, mainType, \"/\", tostring(properties.additionalData.ResourceProvider), tostring(properties.additionalData.ResourceType))),\n                    strcat(providerName, mainType, extendedType, resourceType))\n| extend resourceType = case(typeFullPath =~ 'resourcegroups' or typeFullPath =~ 'subscription', typeFullPath, tolower(trim(\"/\", resourceType)))\n| extend assessmentKey = case(type =~ \"microsoft.security/assessments\", tostring(name), \"\")\n| extend softwareVendorName = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.vendor), \"\")\n| extend softwareName = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.softwareName), \"\")\n| extend softwareVersion = case(type =~ \"microsoft.security/softwareInventories\", tostring(properties.version), \"\")\n| extend softwareNameIdentifier = case(type =~ \"microsoft.security/softwareInventories\", strcat(softwareVendorName, \",\", softwareName, \",\", softwareVersion), \"\")\n| extend environment = case(type =~ \"microsoft.security/assessments\", properties.resourceDetails[\"Source\"], \"\")\n| extend environment = case(environment =~ \"onpremise\", tolower(\"Non-Azure\"), tolower(environment))\n| extend osTypeProperty = properties.additionalData[\"OS Type\"]\n| extend osType = case(isnotempty(osTypeProperty), osTypeProperty, \"\")\n| extend hasAgent = case(assessmentKey == \"d1db3318-01ff-16de-29eb-28b344515626\" or assessmentKey == \"45cfe080-ceb1-a91e-9743-71551ed24e94\" or assessmentKey == \"720a3e77-0b9a-4fa9-98b6-ddf0fd7e32c1\" or assessmentKey == \"27ac71b1-75c5-41c2-adc2-858f5db45b08\", assessmentStatusCode, \"\")\n| extend hasAgent = case(assessmentKey == \"4ab6e3c5-74dd-8b35-9ab9-f61b30875b27\" or assessmentKey == \"181ac480-f7c4-544b-9865-11b8ffe87f47\" or assessmentKey == \"4fb67663-9ab9-475d-b026-8c544cced439\" , \"healthy\", hasAgent)\n| extend workspaceAzureResourceId = case(hasAgent !~ \"\", properties.additionalData[\"Reporting workspace azure id\"], \"\")\n| extend workspaceName = case(workspaceAzureResourceId !~ \"\", extract(@\"(.+)/(.+)\", 2, workspaceAzureResourceId), \"\")\n| extend assessmentDisplayName = case(type =~ \"microsoft.security/assessments\", case(isnotempty(properties.displayName), properties.displayName, properties.metadata.displayName), \"\")\n| extend assessmentIdentifier = case(type =~ \"microsoft.security/assessments\", strcat(assessmentKey, \",\" , assessmentDisplayName, \",\", severity), \"\")\n| summarize assessmentsCount = count() , assessmentsIdentifier = make_list(assessmentIdentifier), softwareNamesIdentifier = make_list(softwareNameIdentifier), hasAgent = max(hasAgent), workspaceName = max(workspaceName), environment = max(environment), osType = max(osType), exemptionType = max(exemptionType)  by resourceId, subscriptionId, resourceName, resourceType, typeFullPath, severity\n| extend packAssessments = pack(severity, assessmentsCount)\n| summarize assessmentsSummary = make_bag(packAssessments), assessmentsIdentifier = make_set(assessmentsIdentifier), softwareNamesIdentifier = make_set(softwareNamesIdentifier), hasAgent = max(hasAgent), workspaceName= max(workspaceName), environment = max(environment), osType= max(osType), exemptionType = max(exemptionType)  by resourceId, subscriptionId, resourceName, resourceType, typeFullPath\n| extend agentMonitoring = case(hasAgent =~ \"NotApplicable\" or hasAgent =~ \"\", '',\n                                                hasAgent =~ \"Unhealthy\", \"notInstalled\",\n                                                \"installed\")\n| join kind=leftouter (\n                    securityresources\n                    | where type =~ \"microsoft.security/pricings\"\n                    | project subscriptionId, bundleName = tolower(name), freeTrialRemainingTime = properties.freeTrialRemainingTime, pricingTier = tolower(properties.pricingTier)\n                    | extend bundlesPricing = pack(bundleName, pricingTier)\n                    | summarize subscriptionPricing = make_bag(bundlesPricing) by subscriptionId\n                ) on subscriptionId\n| extend hasNoSoftwareData = case(array_length(softwareNamesIdentifier) == 1, case(set_has_element(softwareNamesIdentifier, \"\"), true, false), false)\n| extend softwareNamesIdentifier = case(hasNoSoftwareData, softwareNamesIdentifier, set_difference(softwareNamesIdentifier, pack_array(\"\")))\n| extend AssessmentsHigh = case(isnull(assessmentsSummary.high), 0 , toint(assessmentsSummary.high))\n| extend AssessmentsMedium = case(isnull(assessmentsSummary.medium), 0 , toint(assessmentsSummary.medium))\n| extend AssessmentsLow = case(isnull(assessmentsSummary.low), 0 , toint(assessmentsSummary.low))\n| extend unhealthyAssessmentsCount = AssessmentsHigh + AssessmentsMedium + AssessmentsLow\n| extend virtualmachines = case(isnull(subscriptionPricing), '' , subscriptionPricing.virtualmachines)\n| extend virtualmachines = case(virtualmachines == 'free', 'off', 'on')\n| extend sqlservers = case(isnull(subscriptionPricing), '' , subscriptionPricing.sqlservers)\n| extend sqlservers = case(sqlservers == 'free', 'off', 'on')\n| extend kubernetesservice = case(isnull(subscriptionPricing), '' , subscriptionPricing.kubernetesservice)\n| extend kubernetesservice = case(kubernetesservice == 'free', 'off', 'on')\n| extend containerregistry = case(isnull(subscriptionPricing), '' , subscriptionPricing.containerregistry)\n| extend containerregistry = case(containerregistry == 'free', 'off', 'on')\n| extend connectedcontainerregistry = case(isnull(subscriptionPricing), '' , subscriptionPricing.connectedcontainerregistry)\n| extend connectedcontainerregistry = case(connectedcontainerregistry == 'free', 'off', 'on')\n| extend sqlservervirtualmachines = case(isnull(subscriptionPricing), '' , subscriptionPricing.sqlservervirtualmachines)\n| extend sqlservervirtualmachines = case(sqlservervirtualmachines == 'free', 'off', 'on')\n| extend appservices = case(isnull(subscriptionPricing), '' , subscriptionPricing.appservices)\n| extend appservices = case(appservices == 'free', 'off', 'on')\n| extend storageaccounts = case(isnull(subscriptionPricing), '' , subscriptionPricing.storageaccounts)\n| extend storageaccounts = case(storageaccounts == 'free', 'off', 'on')\n| extend keyvaults = case(isnull(subscriptionPricing), '' , subscriptionPricing.keyvaults)\n| extend keyvaults = case(keyvaults == 'free', 'off', 'on')\n| extend opensourcerelationaldatabases = case(isnull(subscriptionPricing), '' , subscriptionPricing.opensourcerelationaldatabases)\n| extend opensourcerelationaldatabases = case(opensourcerelationaldatabases == 'free', 'off', 'on')\n| extend calculatedSubscriptionPricing = case(resourceType =~ \"subscription\" and isempty(subscriptionPricing) == false , iff(subscriptionPricing has \"free\" and subscriptionPricing has \"standard\", \"partial\", iff(subscriptionPricing has \"free\", \"off\", \"on\")), \"\")\n| extend resourcePricing = case(typeFullPath =~ \"microsoft.classiccompute/virtualmachines\", virtualmachines, typeFullPath =~ \"microsoft.compute/virtualmachines\", virtualmachines, typeFullPath =~ \"microsoft.hybridcompute/machines\", virtualmachines, typeFullPath =~ \"microsoft.sql/servers\", sqlservers, typeFullPath =~ \"microsoft.containerservice/managedclusters\", kubernetesservice, typeFullPath =~ \"microsoft.kubernetes/connectedclusters\", kubernetesservice, typeFullPath =~ \"microsoft.containerregistry/registries\", containerregistry, typeFullPath =~ \"microsoft.security/connectedcontainerregistries\", connectedcontainerregistry, typeFullPath =~ \"microsoft.sqlvirtualmachine/sqlvirtualmachines\", sqlservervirtualmachines, typeFullPath =~ \"microsoft.web/sites\", appservices, typeFullPath =~ \"microsoft.storage/storageaccounts\", storageaccounts, typeFullPath =~ \"microsoft.compute/virtualmachinescalesets\", virtualmachines, typeFullPath =~ \"microsoft.keyvault/vaults\", keyvaults, typeFullPath =~ \"microsoft.dbforpostgresql/servers\", opensourcerelationaldatabases, typeFullPath =~ \"microsoft.dbformysql/servers\", opensourcerelationaldatabases, typeFullPath =~ \"microsoft.dbformariadb/servers\", opensourcerelationaldatabases, calculatedSubscriptionPricing)\n| extend pricing = case(resourceType =~ \"subscription\" , calculatedSubscriptionPricing , resourcePricing)\n| extend selectedSoftware = \"\"\n| project resourceType, exemptionType, typeFullPath, resourceId, resourceName, subscriptionId, environment, osType, workspaceName, agentMonitoring, assessmentsIdentifier, assessmentsSummary, subscriptionPricing, unhealthyAssessmentsCount, pricing, softwareNamesIdentifier, selectedSoftware\n| extend resourceGroup = tolower(tostring(split(resourceId, \"/\")[4]))\n| order by unhealthyAssessmentsCount, subscriptionId, resourceType, resourceId\n| where typeFullPath in ('microsoft.compute/virtualmachines', 'microsoft.hybridcompute/machines')\n| where isnotempty(resourceId)",
                        "size": 3,
                        "showAnalytics": true,
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "crossComponentResources": [
                          "value::all"
                        ],
                        "visualization": "table",
                        "showExpandCollapseGrid": true,
                        "gridSettings": {
                          "formatters": [
                            {
                              "columnMatch": "resourceType",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "exemptionType",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "typeFullPath",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "resourceName",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "agentMonitoring",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "installed",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "Unhealthy",
                                    "representation": "2",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "NotApplicable",
                                    "representation": "cancelled",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "notInstalled",
                                    "representation": "disabled",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "Disable",
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            },
                            {
                              "columnMatch": "assessmentsIdentifier",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "assessmentsSummary",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "subscriptionPricing",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "unhealthyAssessmentsCount",
                              "formatter": 3,
                              "formatOptions": {
                                "min": 0,
                                "max": 15,
                                "palette": "greenRed"
                              }
                            },
                            {
                              "columnMatch": "pricing",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "==",
                                    "thresholdValue": "on",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "==",
                                    "thresholdValue": "off",
                                    "representation": "disabled",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "disabled",
                                    "text": "{0}{1}"
                                  }
                                ]
                              }
                            },
                            {
                              "columnMatch": "softwareNamesIdentifier",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "selectedSoftware",
                              "formatter": 5
                            },
                            {
                              "columnMatch": "resourceGroup",
                              "formatter": 5
                            }
                          ],
                          "rowLimit": 1000,
                          "filter": true,
                          "sortBy": [
                            {
                              "itemKey": "$gen_link_resourceId_3",
                              "sortOrder": 2
                            }
                          ],
                          "labelSettings": [
                            {
                              "columnId": "exemptionType",
                              "label": "Resource Exemption exists"
                            },
                            {
                              "columnId": "resourceId",
                              "label": "Resource ID"
                            },
                            {
                              "columnId": "subscriptionId",
                              "label": "Subscription ID"
                            },
                            {
                              "columnId": "environment",
                              "label": "Environment"
                            },
                            {
                              "columnId": "osType",
                              "label": "OS Type"
                            },
                            {
                              "columnId": "workspaceName",
                              "label": "Workspace Name"
                            },
                            {
                              "columnId": "agentMonitoring",
                              "label": "Log Analytics agent status"
                            },
                            {
                              "columnId": "unhealthyAssessmentsCount",
                              "label": "Open Recommendations"
                            },
                            {
                              "columnId": "pricing",
                              "label": "Azure Defender status"
                            }
                          ]
                        },
                        "sortBy": [
                          {
                            "itemKey": "$gen_link_resourceId_3",
                            "sortOrder": 2
                          }
                        ]
                      },
                      "name": "query - 0",
                      "styleSettings": {
                        "showBorder": true
                      }
                    }
                  ]
                },
                "conditionalVisibility": {
                  "parameterName": "SelectedTab",
                  "comparison": "isEqualTo",
                  "value": "SecurityTab"
                },
                "name": "protectionStatus",
                "styleSettings": {
                  "showBorder": true
                }
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "Security"
          },
          "name": "Security"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "items": [
              {
                "type": 1,
                "content": {
                  "json": "## Jumpstart ArcBox SQL Healthcheck"
                },
                "name": "text - 0"
              },
              {
                "type": 9,
                "content": {
                  "version": "KqlParameterItem/1.0",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "parameters": [
                    {
                      "id": "18199cd8-c7fe-4f0d-a330-6676a2ef541f",
                      "version": "KqlParameterItem/1.0",
                      "name": "Subscription",
                      "type": 6,
                      "isRequired": true,
                      "value": null,
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "includeAll": true
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      }
                    },
                    {
                      "id": "bb37570d-eb0c-4363-a281-da0ca1021c1a",
                      "version": "KqlParameterItem/1.0",
                      "name": "ResourceGroup",
                      "label": "Resource Group",
                      "type": 2,
                      "isRequired": true,
                      "query": "Resources\r\n| summarize Count = count() by subscriptionId, resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project label = resourceGroup\r\n",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "value": "arcbox",
                      "typeSettings": {
                        "additionalResourceOptions": []
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    },
                    {
                      "id": "eb5b3f96-134a-41ae-9a30-95779a642788",
                      "version": "KqlParameterItem/1.0",
                      "name": "Workspace",
                      "type": 5,
                      "isRequired": true,
                      "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name, resourceGroup",
                      "crossComponentResources": [
                        "{Subscription}"
                      ],
                      "typeSettings": {
                        "additionalResourceOptions": [],
                        "showDefault": false
                      },
                      "timeContext": {
                        "durationMs": 86400000
                      },
                      "queryType": 1,
                      "resourceType": "microsoft.resourcegraph/resources"
                    }
                  ],
                  "style": "pills",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                "name": "parameters - 1"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"f14449df-1309-43e6-8f02-2d373d89daa8\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| project RecommendationResult\r\n| summarize Counts=count(RecommendationResult) by RecommendationResult",
                  "size": 1,
                  "title": "Security and compliace checks",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 8"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"f14449df-1309-43e6-8f02-2d373d89daa8\"\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| extend Priority = case(RecommendationScore <= 50, \"Low priority\", \r\n                       RecommendationScore >= 50 and RecommendationScore <= 75, \"Medium priority\", \r\n                       \"High priority\")\r\n| project Priority, RecommendationScore\r\n| summarize Counts=count(Priority) by Priority",
                  "size": 1,
                  "title": "Security and compliance recommendations by priority",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart",
                  "chartSettings": {
                    "ySettings": {
                      "numberFormatSettings": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "useGrouping": true
                        }
                      }
                    }
                  }
                },
                "customWidth": "50",
                "name": "query - 3"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"f14449df-1309-43e6-8f02-2d373d89daa8\"\r\n| summarize arg_max(TimeGenerated, *) by Recommendation, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| sort by RecommendationWeight desc, TimeGenerated desc\r\n| project Recommendation, AffectedObjectName",
                  "size": 0,
                  "title": "Security and compliance recommendations",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "table"
                },
                "customWidth": "100",
                "name": "query - 2"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"d617a649-5756-40a5-ac41-481e66e6200b\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| project RecommendationResult\r\n| summarize Counts=count(RecommendationResult) by RecommendationResult",
                  "size": 1,
                  "title": "High availability and business continuity checks",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 5"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"d617a649-5756-40a5-ac41-481e66e6200b\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| extend Priority = case(RecommendationScore <= 50, \"Low priority\", \r\n                       RecommendationScore >= 50 and RecommendationScore <= 75, \"Medium priority\", \r\n                       \"High priority\")\r\n| project Priority, RecommendationScore\r\n| summarize Counts=count(Priority) by Priority",
                  "size": 1,
                  "title": "High availability and business continuity recommendations by priority",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 6"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"d617a649-5756-40a5-ac41-481e66e6200b\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| sort by RecommendationWeight desc, TimeGenerated desc\r\n| project Recommendation, AffectedObjectName",
                  "size": 0,
                  "title": "High availability and business continuity recommendations ",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ]
                },
                "name": "query - 7"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"13a1c8d4-aa8e-4c2d-96e4-50d2e4ce9849\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| project RecommendationResult\r\n| summarize Counts=count(RecommendationResult) by RecommendationResult\r\n",
                  "size": 1,
                  "title": "Performance and scalability checks",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 8"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"13a1c8d4-aa8e-4c2d-96e4-50d2e4ce9849\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| extend Priority = case(RecommendationScore <= 50, \"Low priority\", \r\n                       RecommendationScore >= 50 and RecommendationScore <= 75, \"Medium priority\", \r\n                       \"High priority\")\r\n| project Priority, RecommendationScore\r\n| summarize Counts=count(Priority) by Priority\r\n",
                  "size": 1,
                  "title": "Performance and scalability by priority",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 9"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"13a1c8d4-aa8e-4c2d-96e4-50d2e4ce9849\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| sort by RecommendationWeight desc, TimeGenerated desc\r\n| project Recommendation, AffectedObjectName",
                  "size": 0,
                  "title": "Performance and scalability recommendations",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ]
                },
                "name": "query - 10"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"6c3d7177-68b0-4283-89da-43c8d1364324\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| project RecommendationResult\r\n| summarize Counts=count(RecommendationResult) by RecommendationResult",
                  "size": 1,
                  "title": "Upgrade, migration and deployment checks",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 11"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"6c3d7177-68b0-4283-89da-43c8d1364324\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| extend Priority = case(RecommendationScore <= 50, \"Low priority\", \r\n                       RecommendationScore >= 50 and RecommendationScore <= 75, \"Medium priority\", \r\n                       \"High priority\")\r\n| project Priority, RecommendationScore\r\n| summarize Counts=count(Priority) by Priority\r\n",
                  "size": 1,
                  "title": "Upgrade, migration and deployment by priority",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 12"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"6c3d7177-68b0-4283-89da-43c8d1364324\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| sort by RecommendationWeight desc, TimeGenerated desc\r\n| project Recommendation, AffectedObjectName",
                  "size": 0,
                  "title": "Upgrade, migration and deployment recommendations",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ]
                },
                "name": "query - 13"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"76f7f2bc-3fad-4e78-89ef-c1d2b03ef89b\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| project RecommendationResult\r\n| summarize Counts=count(RecommendationResult) by RecommendationResult",
                  "size": 1,
                  "title": "Operations and monitoring checks",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 14"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"76f7f2bc-3fad-4e78-89ef-c1d2b03ef89b\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| extend Priority = case(RecommendationScore <= 50, \"Low priority\", \r\n                       RecommendationScore >= 50 and RecommendationScore <= 75, \"Medium priority\", \r\n                       \"High priority\")\r\n| project Priority, RecommendationScore\r\n| summarize Counts=count(Priority) by Priority\r\n",
                  "size": 1,
                  "title": "Operations and monitoring recommendations by priority",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 15"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"76f7f2bc-3fad-4e78-89ef-c1d2b03ef89b\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| sort by RecommendationWeight desc, TimeGenerated desc\r\n| project Recommendation, AffectedObjectName",
                  "size": 0,
                  "title": "Operations and monitoring recomendations",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ]
                },
                "name": "query - 16"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"dbc43886-cf26-483e-ac46-030a002a50ea\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| project RecommendationResult\r\n| summarize Counts=count(RecommendationResult) by RecommendationResult",
                  "size": 1,
                  "title": "Change and configuration management checks",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 8"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"dbc43886-cf26-483e-ac46-030a002a50ea\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| extend Priority = case(RecommendationScore <= 50, \"Low priority\", \r\n                       RecommendationScore >= 50 and RecommendationScore <= 75, \"Medium priority\", \r\n                       \"High priority\")\r\n| project Priority, RecommendationScore\r\n| summarize Counts=count(Priority) by Priority",
                  "size": 1,
                  "title": "Change and configuration management by priority",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ],
                  "visualization": "piechart"
                },
                "customWidth": "50",
                "name": "query - 18"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "SQLAssessmentRecommendation\r\n| where FocusAreaId == \"dbc43886-cf26-483e-ac46-030a002a50ea\"\r\n| summarize arg_max(TimeGenerated, *) by RecommendationId, AffectedObjectName, AffectedObjectUniqueName\r\n| where RecommendationResult == \"Failed\" and (Technology has \"\" or Technology == \"\")\r\n| sort by RecommendationWeight desc, TimeGenerated desc\r\n| project Recommendation, AffectedObjectName",
                  "size": 0,
                  "title": "Change and configuration management",
                  "timeContext": {
                    "durationMs": 2592000000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "crossComponentResources": [
                    "{Workspace}"
                  ]
                },
                "name": "query - 19"
              }
            ]
          },
          "conditionalVisibility": {
            "parameterName": "selectedTab",
            "comparison": "isEqualTo",
            "value": "SQL"
          },
          "name": "SQL"
        }
      ],
      "isLocked": false,
      "fallbackResourceIds": [
        "workbookresourceid-stage"
      ]
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2021-03-08",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[string(variables('workbookContent'))]",
        "version": "1.0",
        "sourceId": "[parameters('workbookResourceId')]",
        "category": "[parameters('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  },
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
}