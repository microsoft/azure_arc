{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "String",
            "defaultValue": "ArcBox-K3s",
            "metadata": {
                "description": "The name of you Virtual Machine"
            }
        },
        "adminUsername": {
            "type": "String",
            "defaultValue": "arcdemo",
            "metadata": {
                "description": "Username for the Virtual Machine"
            }
        },
        "sshRSAPublicKey": {
            "type": "SecureString",
            "metadata": {
                "description": "SSH Key for the Virtual Machine. SSH key is recommended over password"
            }
        },
        "ubuntuOSVersion": {
            "type": "String",
            "defaultValue": "20_04-lts-gen2",
            "allowedValues": [
                "20_04-lts-gen2"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version"
            }
        },
        "azureLocation": {
            "type": "String",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "vmSize": {
            "type": "String",
            "defaultValue": "Standard_B4ms",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "virtualNetworkName": {
            "type": "String",
            "defaultValue": "ArcBox-VNet",
            "metadata": {
                "description": "Name of the VNet"
            }
        },
        "subnetName": {
            "type": "String",
            "defaultValue": "ArcBox-Subnet",
            "metadata": {
                "description": "Name of the subnet in the virtual network"
            }
        },
        "resourceTags": {
            "type": "Object",
            "defaultValue": {
                "Project": "jumpstart_arcbox"
            }
        },
        "spnClientId": {
            "type": "String",
            "metadata": {
                "description": "Azure service principal client id"
            }
        },
        "spnClientSecret": {
            "type": "SecureString",
            "metadata": {
                "description": "Azure service principal client secret"
            }
        },
        "spnTenantId": {
            "type": "String",
            "metadata": {
                "description": "Azure AD tenant id for your service principal"
            }
        },
        "stagingStorageAccountName": {
            "type": "String",
            "metadata": {
                "description": "Name for the staging storage account using to hold kubeconfig. This value is passed into the template as an output from mgmtStagingStorage.json"
            }
        },
        "logAnalyticsWorkspace": {
            "type": "String",
            "metadata": {
                "description": "Name of the Log Analytics workspace used with cluster extensions"
            }
        },
        "templateBaseUrl": {
            "type": "String",
            "metadata": {
                "description": "The base URL used for accessing templates and automation artifacts. Typically inherited from parent ARM template"
            }
        },
        "deployBastion": {
            "type": "bool",
            "metadata": {
                "description": "Choice to deploy Azure Bastion"
            },
            "defaultValue": false
        }
    },
    "variables": {
        "vmName": "[concat(parameters('vmName'))]",
        "publicIpAddressName": "[concat(parameters('vmName'), '-PIP' )]",
        "networkInterfaceName": "[concat(parameters('vmName'),'-NIC')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "osDiskType": "Premium_LRS",
        "PublicIPNoBastion": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-01-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": "[if(not(parameters('deployBastion')),variables('PublicIPNoBastion'),json('null'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2022-01-01",
            "name": "[variables('publicIpAddressName')]",
            "condition": "[not(parameters('deployBastion'))]",
            "location": "[parameters('azureLocation')]",
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('azureLocation')]",
            "tags": "[parameters('resourceTags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmName'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshRSAPublicKey')]"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/installscript_k3s')]",
            "apiVersion": "2022-03-01",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash installK3s.sh', ' ', parameters('adminUsername'), ' ', parameters('spnClientId'), ' ', parameters('spnClientSecret'), ' ', parameters('spnTenantId'), ' ', parameters('vmName'), ' ', parameters('azureLocation'), ' ', parameters('stagingStorageAccountName'), ' ', parameters('logAnalyticsWorkspace'), ' ', parameters('deployBastion'),  ' ', parameters('templateBaseUrl'))]",
                    "fileUris": [ "[concat(parameters('templateBaseUrl'), 'artifacts/installK3s.sh')]" ]
                }
            }
        }
    ]
}