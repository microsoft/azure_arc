{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sshRSAPublicKey": {
      "type": "SecureString",
      "metadata": {
        "description": "RSA public key used for securing SSH access to ArcBox resources"
      }
    },
    "spnClientId": {
      "type": "String",
      "metadata": {
        "description": "Azure service principal client id"
      }
    },
    "spnClientSecret": {
      "type": "SecureString",
      "metadata": {
        "description": "Azure service principal client secret"
      }
    },
    "spnTenantId": {
      "type": "String",
      "metadata": {
        "description": "Azure AD tenant id for your service principal"
      }
    },
    "windowsAdminUsername": {
      "type": "String",
      "metadata": {
        "description": "Username for Windows account"
      }
    },
    "windowsAdminPassword": {
      "type": "SecureString",
      "minLength": 12,
      "maxLength": 123,
      "metadata": {
        "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "String",
      "metadata": {
        "description": "Name for your log analytics workspace"
      }
    },
    "flavor": {
      "type": "String",
      "metadata": {
        "description": "The flavor of ArcBox you want to deploy. Valid values are: 'Full', 'ITPro', 'DevOps', 'DataOps'"
      },
      "allowedValues": [
        "Full",
        "ITPro",
        "DevOps",
        "DataOps"
      ],
      "defaultValue": "Full"
    },
    "githubAccount": {
      "type": "String",
      "metadata": {
        "description": "Target GitHub account"
      },
      "defaultValue": "microsoft"
    },
    "githubBranch": {
      "type": "String",
      "metadata": {
        "description": "Target GitHub branch"
      },
      "defaultValue": "main"
    },
    "deployBastion": {
      "type": "bool",
      "metadata": {
        "description": "Choice to deploy Bastion to connect to the client VM"
      },
      "defaultValue": false
    },
    "githubUser": {
      "type": "String",
      "metadata": {
        "description": "User's github account where they have forked https://github.com/microsoft/azure-arc-jumpstart-apps"
      },
      "defaultValue": "microsoft"
    },
    "addsDomainName": {
      "type": "String",
      "metadata": {
        "description": "Active directory domain services domain name"
      },
      "defaultValue": "jumpstart.local"
    },
    "guid":{
      "type": "String",
      "metadata": {
        "description": "Random GUID for cluster names"
      },
      "defaultValue": "[substring(newGuid(),0,4)]"
    }
  },
  "variables": {
    "templateBaseUrl": "[concat('https://raw.githubusercontent.com/', parameters('githubAccount'), '/azure_arc/', parameters('githubBranch'), '/azure_jumpstart_arcbox/')]",
    "rancherTemplateUrl": "[uri(variables('templateBaseUrl'), 'ARM/kubernetes/ubuntuRancher.json')]",
    "capiTemplateUrl": "[uri(variables('templateBaseUrl'), 'ARM/kubernetes/ubuntuCapi.json')]",
    "clientVmTemplateUrl": "[uri(variables('templateBaseUrl'), 'ARM/clientVm/clientVm.json')]",
    "mgmtTemplateUrl": "[uri(variables('templateBaseUrl'), 'ARM/mgmt/mgmtArtifacts.json')]",
    "mgmtStagingStorageUrl": "[uri(variables('templateBaseUrl'), 'ARM/mgmt/mgmtStagingStorage.json')]",
    "addsVMTemplateUrl": "[uri(variables('templateBaseUrl'), 'ARM/mgmt/addsVm.json')]",
    "aksTemplateUrl": "[uri(variables('templateBaseUrl'), 'ARM/kubernetes/aks.json')]",
    "capiArcDataClusterName": "[concat('ArcBox-CAPI-Data','-',parameters('guid'))]",
    "k3sArcDataClusterName": "[concat('ArcBox-K3s','-',parameters('guid'))]",
    "aksArcDataClusterName": "[concat('ArcBox-AKS-Data','-',parameters('guid'))]",
    "aksDrArcDataClusterName": "[concat('ArcBox-AKS-DR-Data','-',parameters('guid'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "ubuntuCAPIDeployment",
      "dependsOn": [
        "stagingStorageAccountDeployment",
        "mgmtArtifactsAndPolicyDeployment",
        "updateVNetDNSServers"
      ],
      "condition": "[or(equals(parameters('flavor'),'Full'),equals(parameters('flavor'),'DevOps'),equals(parameters('flavor'),'DataOps'))]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('capiTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sshRSAPublicKey": {
            "value": "[parameters('sshRSAPublicKey')]"
          },
          "spnClientId": {
            "value": "[parameters('spnClientId')]"
          },
          "spnClientSecret": {
            "value": "[parameters('spnClientSecret')]"
          },
          "spnTenantId": {
            "value": "[parameters('spnTenantId')]"
          },
          "stagingStorageAccountName": {
            "value": "[reference('stagingStorageAccountDeployment').outputs.storageAccountName.value]"
          },
          "logAnalyticsWorkspace": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "flavor": {
            "value": "[parameters('flavor')]"
          },
          "capiArcDataClusterName" : {
            "value": "[variables('capiArcDataClusterName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "ubuntuRancherDeployment",
      "dependsOn": [
        "stagingStorageAccountDeployment",
        "mgmtArtifactsAndPolicyDeployment"
      ],
      "condition": "[or(equals(parameters('flavor'),'Full'),equals(parameters('flavor'),'DevOps'))]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('rancherTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sshRSAPublicKey": {
            "value": "[parameters('sshRSAPublicKey')]"
          },
          "spnClientId": {
            "value": "[parameters('spnClientId')]"
          },
          "spnClientSecret": {
            "value": "[parameters('spnClientSecret')]"
          },
          "spnTenantId": {
            "value": "[parameters('spnTenantId')]"
          },
          "stagingStorageAccountName": {
            "value": "[reference('stagingStorageAccountDeployment').outputs.storageAccountName.value]"
          },
          "logAnalyticsWorkspace": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "vmName":{
            "value": "[variables('k3sArcDataClusterName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "clientVmDeployment",
      "dependsOn": [
        "stagingStorageAccountDeployment",
        "updateVNetDNSServers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('clientVmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "windowsAdminUsername": {
            "value": "[parameters('windowsAdminUsername')]"
          },
          "windowsAdminPassword": {
            "value": "[parameters('windowsAdminPassword')]"
          },
          "spnClientId": {
            "value": "[parameters('spnClientId')]"
          },
          "spnClientSecret": {
            "value": "[parameters('spnClientSecret')]"
          },
          "spnTenantId": {
            "value": "[parameters('spnTenantId')]"
          },
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "stagingStorageAccountName": {
            "value": "[reference('stagingStorageAccountDeployment').outputs.storageAccountName.value]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "flavor": {
            "value": "[parameters('flavor')]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "githubUser": {
            "value": "[parameters('githubUser')]"
          },
          "capiArcDataClusterName": {
            "value": "[variables('capiArcDataClusterName')]"
          },
          "k3sArcClusterName": {
            "value": "[variables('k3sArcDataClusterName')]"
          },
          "aksArcClusterName": {
            "value": "[variables('aksArcDataClusterName')]"
          },
          "aksdrArcClusterName": {
            "value": "[variables('aksDrArcDataClusterName')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "stagingStorageAccountDeployment",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('mgmtStagingStorageUrl')]",
          "contentVersion": "1.0.0.0"
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "mgmtArtifactsAndPolicyDeployment",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('mgmtTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "flavor": {
            "value": "[parameters('flavor')]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "comments": "Deploys Active Directory Domain Services Windows VM",
      "apiVersion": "2021-04-01",
      "name": "addsVmDeployment",
      "condition": "[equals(parameters('flavor'),'DataOps')]",
      "dependsOn": [ "mgmtArtifactsAndPolicyDeployment" ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('addsVMTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "windowsAdminUsername": {
            "value": "[parameters('windowsAdminUsername')]"
          },
          "windowsAdminPassword": {
            "value": "[parameters('windowsAdminPassword')]"
          },
          "addsDomainName": {
            "value": "[parameters('addsDomainName')]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "comments": "Updates VNet DNS servers after ADDS VM is deployed",
      "apiVersion": "2021-04-01",
      "name": "updateVNetDNSServers",
      "condition": "[equals(parameters('flavor'),'DataOps')]",
      "dependsOn": [ "mgmtArtifactsAndPolicyDeployment", "addsVmDeployment" ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('mgmtTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "flavor": {
            "value": "[parameters('flavor')]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "dnsServers": {
            "value": [ "10.16.2.100", "168.63.129.16" ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "aksDeployment",
      "dependsOn": [
        "stagingStorageAccountDeployment",
        "mgmtArtifactsAndPolicyDeployment",
        "updateVNetDNSServers"
      ],
      "condition": "[equals(parameters('flavor'),'DataOps')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('aksTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sshRSAPublicKey": {
            "value": "[parameters('sshRSAPublicKey')]"
          },
          "spnClientId": {
            "value": "[parameters('spnClientId')]"
          },
          "spnClientSecret": {
            "value": "[parameters('spnClientSecret')]"
          },
          "aksClusterName" : {
            "value": "[variables('aksArcDataClusterName')]"
          },
          "drClusterName":{
            "value": "[variables('aksDrArcDataClusterName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "clientVmLogonUserName": {
      "condition": "[equals(parameters('flavor'),'DataOps')]",
      "type": "String",
      "value": "[concat(parameters('windowsAdminUsername'),'@',parameters('addsDomainName'))]"
    }
  }
}