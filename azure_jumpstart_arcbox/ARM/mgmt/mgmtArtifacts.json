{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "ArcBox-VNet",
      "metadata": {
        "description": "Name of the VNet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "ArcBox-Subnet",
      "metadata": {
        "description": "Name of the subnet in the virtual network"
      }
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name for your log analytics workspace"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Region to deploy the Log Analytics Workspace"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "pergb2018",
      "metadata": {
        "description": "SKU, leave default pergb2018"
      }
    },
    "templateBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "The base URL used for accessing templates and automation artifacts. Typically inherited from parent ARM template."
      }
    },
    "flavor": {
      "type": "string",
      "metadata": {
        "description": "The flavor of ArcBox you want to deploy. Valid values are: 'Full', 'ITPro', 'DevOps'"
      }
    },
    "deployBastion": {
      "type": "bool",
      "metadata": {
        "description": "Choice to deploy Azure Bastion"
      },
      "defaultValue": false
    },
    "spnTenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant id of the service principal"
      }
    }
  },
  "variables": {
    "Updates": {
      "name": "[concat('Updates', '(', parameters('workspaceName'), ')')]",
      "galleryName": "Updates"
    },
    "ChangeTracking": {
      "name": "[format('ChangeTracking({0})', parameters('workspaceName'))]",
      "galleryName": "ChangeTracking"
    },
    "Security": {
      "name": "[format('Security({0})', parameters('workspaceName'))]",
      "galleryName": "Security"
    },
    "policyTemplate": "[uri(parameters('templateBaseUrl'), 'ARM/mgmt/policyAzureArcBuiltins.json')]",
    "automationAccountName": "[concat('ArcBox-Automation-', uniquestring(resourceGroup().id))]",
    "subnetAddressPrefix": "172.16.1.0/24",
    "addressPrefix": "172.16.0.0/16",
    "automationAccountLocation": "[if(equals(parameters('location'), 'eastus'), 'eastus2', if(equals(parameters('location'), 'eastus2'), 'eastus', parameters('location')))]",
    "bastionSubnetName": "AzureBastionSubnet",
    "bastionSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('bastionSubnetName'))]",
    "bastionName": "ArcBox-Bastion",
    "bastionSubnetIpPrefix": "172.16.3.64/26",
    "bastionPublicIpAddressName": "[concat(variables('bastionName'), '-PIP' )]",
    "keyVaultName": "[format('ArcBox-KV-{0}', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-04-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "[variables('bastionSubnetIpPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-03-01-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('sku')]"
        }
      }
    },
    {
      "apiVersion": "2015-11-01-preview",
      "location": "[parameters('location')]",
      "name": "[variables('Updates').name]",
      "type": "Microsoft.OperationsManagement/solutions",
      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/', variables('Updates').name)]",
      "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      ],
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      },
      "plan": {
        "name": "[variables('Updates').name]",
        "publisher": "Microsoft",
        "promotionCode": "",
        "product": "[concat('OMSGallery/', variables('Updates').galleryName)]"
      }
    },
    {
      "apiVersion": "2015-11-01-preview",
      "type": "Microsoft.OperationsManagement/solutions",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
      ],
      "name": "[concat('VMInsights', '(', split(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')),'/')[8], ')')]",
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      },
      "plan": {
        "name": "[concat('VMInsights', '(', split(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')),'/')[8], ')')]",
        "product": "[concat('OMSGallery/', 'VMInsights')]",
        "promotionCode": "",
        "publisher": "Microsoft"
      }
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "apiVersion": "2015-11-01-preview",
      "name": "[variables('ChangeTracking').name]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      ],
      "plan": {
        "name": "[variables('ChangeTracking').name]",
        "promotionCode": "",
        "product": "[format('OMSGallery/{0}', variables('ChangeTracking').galleryName)]",
        "publisher": "Microsoft"
      },
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      }
    },
    {
      "type": "Microsoft.OperationsManagement/solutions",
      "apiVersion": "2015-11-01-preview",
      "name": "[variables('Security').name]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      ],
      "plan": {
        "name": "[variables('Security').name]",
        "promotionCode": "",
        "product": "[format('OMSGallery/{0}', variables('Security').galleryName)]",
        "publisher": "Microsoft"
      },
      "properties": {
        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      }
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2020-01-13-preview",
      "name": "[variables('automationAccountName')]",
      "location": "[variables('automationAccountLocation')]",
      "dependsOn": [
        "[parameters('workspaceName')]"
      ],
      "properties": {
        "sku": {
          "name": "Basic"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
      "apiVersion": "2020-03-01-preview",
      "name": "[concat(parameters('workspaceName'), '/' , 'Automation')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[parameters('workspaceName')]",
        "[variables('automationAccountName')]"
      ],
      "properties": {
        "resourceId": "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "policyDeployment",
      "dependsOn": [
        "[concat(parameters('workspaceName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('policyTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "azureLocation": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspace": {
            "value": "[parameters('workspaceName')]"
          },
          "flavor": {
            "value": "[parameters('flavor')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "name": "[variables('bastionPublicIpAddressName')]",
      "condition": "[parameters('deployBastion')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "idleTimeoutInMinutes": 4
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "condition": "[parameters('deployBastion')]",
      "name": "[variables('bastionName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2020-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[variables('bastionSubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('bastionPublicIpAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "condition": "[equals(parameters('flavor'), 'DevOps')]",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[parameters('spnTenantId')]",
        "accessPolicies": []
      }
    }
  ],
  "outputs": {
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    }
  }
}