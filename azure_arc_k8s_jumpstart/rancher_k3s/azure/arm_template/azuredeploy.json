{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "Arc-K3s-Demo",
            "metadata": {
                "description": "The name of you Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "arcdemo",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "sshRSAPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key for the Virtual Machine. SSH key is recommended over password."
            }
        },
        "appId": {
            "type": "string",
            "metadata": {
                "description": "Unique SPN app ID"
            }
        },
        "password": {
            "type": "string",
            "metadata": {
                "description": "Unique SPN password"
            }
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "Unique SPN tenant ID"
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "20_04-lts-gen2",
            "allowedValues": [
                "20_04-lts-gen2"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version"
            }
        },
        "azureLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "VmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v4",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Name of the subnet in the virtual network"
            }
        },
        "githubAccount": {
            "type": "string",
            "metadata": {
                "description": "Target GitHub account"
            },
            "defaultValue": "microsoft"
        },
        "githubBranch": {
            "type": "string",
            "metadata": {
                "description": "Target GitHub branch"
            },
            "defaultValue": "main"
        },
        "deployBastion": {
            "type": "bool",
            "metadata": {
                "description": "Choice to deploy Bastion to connect to the Ubuntu VM"
            },
            "defaultValue": false
        },
        "bastionSubnetPrefix": {
            "type": "string",
            "metadata": {
                "description": "Azure Bastion subnet IP prefix"
            },
            "defaultValue": "172.16.2.64/26"
        },
        "guid": {
            "type": "string",
            "metadata": {
                "description": "Random GUID for cluster names"
            },
            "defaultValue": "[substring(newGuid(),0,4)]"
        }
    },
    "variables": {
        "templateBaseUrl": "[concat('https://raw.githubusercontent.com/', parameters('githubAccount'), '/azure_arc/', parameters('githubBranch'), '/azure_arc_k8s_jumpstart/rancher_k3s/azure/arm_template/')]",
        "vmName": "[concat(parameters('vmName'),'-',parameters('guid'))]",
        "virtualNetworkName": "[concat(parameters('vmName'),'-VNET-',parameters('guid'))]",
        "publicIpAddressName": "[concat(parameters('vmName'),'-PIP-',parameters('guid'))]",
        "networkInterfaceName": "[concat(parameters('vmName'),'-NIC-',parameters('guid'))]",
        "networkSecurityGroupsName": "[concat(parameters('vmName'),'-NSG-',parameters('guid'))]",
        "osDiskTypeName": "[concat(parameters('vmName'),'-OSDisk-',parameters('guid'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('subnetName'))]",
        "osDiskType": "Premium_LRS",
        "addressPrefix": "172.16.0.0/16",
        "subnetAddressPrefix": "172.16.1.0/24",
        "bastionSubnetPrefix": "[concat(parameters('bastionSubnetPrefix'))]",
        "PublicIPNoBastion": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-05-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupsName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": "[if(not(parameters('deployBastion')),variables('PublicIPNoBastion'),json('null'))]"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupsName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-05-01",
            "name": "[variables('networkSecurityGroupsName')]",
            "location": "[parameters('azureLocation')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_SSH",
                        "properties": {
                            "priority": 1001,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[variables('bastionSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-05-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('azureLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "[variables('bastionSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2022-05-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('azureLocation')]",
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
            },
            "sku": {
                "name": "[if(not(parameters('deployBastion')),'Basic','Standard')]",
                "tier": "Regional"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-08-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[variables('osDiskTypeName')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshRSAPublicKey')]"
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/installscript_k3s')]",
            "apiVersion": "2022-08-01",
            "location": "[parameters('azureLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": 123456789
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash installK3s.sh', ' ', parameters('adminUsername'), ' ', parameters('appId'), ' ', parameters('password'), ' ', parameters('tenantId'), ' ', variables('vmName'), ' ', parameters('azureLocation'), ' ', variables('templateBaseUrl'))]",
                    "fileUris": [
                        "[uri(variables('templateBaseUrl'), 'scripts/installK3s.sh')]"
                    ]
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).IpAddress)]"
        }
    }
}