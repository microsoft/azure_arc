{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "5463622317411077072"
    }
  },
  "parameters": {
    "spnClientId": {
      "type": "string",
      "metadata": {
        "description": "Azure service principal client id"
      }
    },
    "spnClientSecret": {
      "type": "secureString",
      "metadata": {
        "description": "Azure service principal client secret"
      }
    },
    "spnTenantId": {
      "type": "string",
      "metadata": {
        "description": "Azure AD tenant id for your service principal"
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for Windows account"
      }
    },
    "windowsAdminPassword": {
      "type": "secureString",
      "maxLength": 123,
      "minLength": 12,
      "metadata": {
        "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name for your log analytics workspace"
      }
    },
    "registerCluster": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Option to disable automatic cluster registration. Setting this to false will also disable deploying AKS and Resource bridge"
      }
    },
    "deployAKSHCI": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Option to deploy AKS-HCI with HCIBox"
      }
    },
    "deployResourceBridge": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Option to deploy Resource Bridge with HCIBox"
      }
    },
    "natDNS": {
      "type": "string",
      "defaultValue": "8.8.8.8",
      "metadata": {
        "description": "Public DNS to use for the domain"
      }
    },
    "githubAccount": {
      "type": "string",
      "defaultValue": "microsoft",
      "metadata": {
        "description": "Target GitHub account"
      }
    },
    "githubBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "Target GitHub branch"
      }
    },
    "deployBastion": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Choice to deploy Bastion to connect to the client VM"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to deploy resources"
      }
    }
  },
  "variables": {
    "templateBaseUrl": "[format('https://raw.githubusercontent.com/{0}/azure_arc/{1}/azure_jumpstart_hcibox/', parameters('githubAccount'), parameters('githubBranch'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "mgmtArtifactsAndPolicyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "15958021173320564523"
            }
          },
          "parameters": {
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name for your log analytics workspace"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure Region to deploy the Log Analytics Workspace"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "pergb2018",
              "metadata": {
                "description": "SKU, leave default pergb2018"
              }
            }
          },
          "variables": {
            "security": {
              "name": "[format('Security({0})', parameters('workspaceName'))]",
              "galleryName": "Security"
            },
            "automationAccountName": "[format('HCIBox-Automation-{0}', uniqueString(resourceGroup().id))]",
            "automationAccountLocation": "[if(equals(parameters('location'), 'eastus'), 'eastus2', if(equals(parameters('location'), 'eastus2'), 'eastus', parameters('location')))]"
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('workspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('sku')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[format('VMInsights({0})', split(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '/')[8])]",
              "location": "[parameters('location')]",
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              },
              "plan": {
                "name": "[format('VMInsights({0})', split(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '/')[8])]",
                "product": "OMSGallery/VMInsights",
                "promotionCode": "",
                "publisher": "Microsoft"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[variables('security').name]",
              "location": "[parameters('location')]",
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              },
              "plan": {
                "name": "[variables('security').name]",
                "promotionCode": "",
                "product": "[format('OMSGallery/{0}', variables('security').galleryName)]",
                "publisher": "Microsoft"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[variables('automationAccountName')]",
              "location": "[variables('automationAccountLocation')]",
              "properties": {
                "sku": {
                  "name": "Basic"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
              "apiVersion": "2020-08-01",
              "name": "[format('{0}/{1}', parameters('workspaceName'), 'Automation')]",
              "properties": {
                "resourceId": "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "networkDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "12002154451255072834"
            }
          },
          "parameters": {
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "HCIBox-VNet",
              "metadata": {
                "description": "Name of the VNet"
              }
            },
            "subnetName": {
              "type": "string",
              "defaultValue": "HCIBox-Subnet",
              "metadata": {
                "description": "Name of the subnet in the virtual network"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure Region to deploy the Log Analytics Workspace"
              }
            },
            "deployBastion": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Choice to deploy Bastion to connect to the client VM"
              }
            },
            "networkSecurityGroupName": {
              "type": "string",
              "defaultValue": "HCIBox-NSG",
              "metadata": {
                "description": "Name of the Network Security Group"
              }
            },
            "bastionNetworkSecurityGroupName": {
              "type": "string",
              "defaultValue": "HCIBox-Bastion-NSG",
              "metadata": {
                "description": "Name of the Bastion Network Security Group"
              }
            }
          },
          "variables": {
            "addressPrefix": "172.16.0.0/16",
            "subnetAddressPrefix": "172.16.1.0/24",
            "bastionSubnetName": "AzureBastionSubnet",
            "bastionSubnetRef": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), variables('bastionSubnetName'))]",
            "bastionName": "HCIBox-Bastion",
            "bastionSubnetIpPrefix": "172.16.3.64/26",
            "bastionPublicIpAddressName": "[format('{0}-PIP', variables('bastionName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-03-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('addressPrefix')]"
                  ]
                },
                "subnets": "[if(equals(parameters('deployBastion'), true()), createArray(createObject('name', parameters('subnetName'), 'properties', createObject('addressPrefix', variables('subnetAddressPrefix'), 'privateEndpointNetworkPolicies', 'Enabled', 'privateLinkServiceNetworkPolicies', 'Enabled', 'networkSecurityGroup', createObject('id', resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))))), createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', variables('bastionSubnetIpPrefix'), 'networkSecurityGroup', createObject('id', resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNetworkSecurityGroupName')))))), createArray(createObject('name', parameters('subnetName'), 'properties', createObject('addressPrefix', variables('subnetAddressPrefix'), 'privateEndpointNetworkPolicies', 'Enabled', 'privateLinkServiceNetworkPolicies', 'Enabled', 'networkSecurityGroup', createObject('id', resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName')))))))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionNetworkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-03-01",
              "name": "[parameters('networkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "condition": "[equals(parameters('deployBastion'), true())]",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "[parameters('bastionNetworkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "bastion_allow_https_inbound",
                    "properties": {
                      "priority": 1010,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "Internet",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_gateway_manager_inbound",
                    "properties": {
                      "priority": 1011,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "GatewayManager",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_load_balancer_inbound",
                    "properties": {
                      "priority": 1012,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_host_comms",
                    "properties": {
                      "priority": 1013,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ]
                    }
                  },
                  {
                    "name": "bastion_allow_ssh_rdp_outbound",
                    "properties": {
                      "priority": 1014,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "22",
                        "3389"
                      ]
                    }
                  },
                  {
                    "name": "bastion_allow_azure_cloud_outbound",
                    "properties": {
                      "priority": 1015,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "AzureCloud",
                      "destinationPortRange": "443"
                    }
                  },
                  {
                    "name": "bastion_allow_bastion_comms",
                    "properties": {
                      "priority": 1016,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "destinationPortRanges": [
                        "8080",
                        "5701"
                      ]
                    }
                  },
                  {
                    "name": "bastion_allow_get_session_info",
                    "properties": {
                      "priority": 1017,
                      "protocol": "*",
                      "access": "Allow",
                      "direction": "Outbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "Internet",
                      "destinationPortRanges": [
                        "80",
                        "443"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "condition": "[equals(parameters('deployBastion'), true())]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-05-01",
              "name": "[variables('bastionPublicIpAddressName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
              },
              "sku": {
                "name": "Standard"
              }
            },
            {
              "condition": "[equals(parameters('deployBastion'), true())]",
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2021-05-01",
              "name": "[variables('bastionName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpAddressName'))]"
                      },
                      "subnet": {
                        "id": "[variables('bastionSubnetRef')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpAddressName'))]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            },
            "subnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2021-03-01').subnets[0].id]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "stagingStorageAccountDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "8234938478342075972"
            }
          },
          "parameters": {
            "storageAccountType": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
              ],
              "metadata": {
                "description": "Storage Account type"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "storageAccountName": "[format('hcibox{0}', uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('storageAccountType')]"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[variables('storageAccountName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "hostVmDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "windowsAdminUsername": {
            "value": "[parameters('windowsAdminUsername')]"
          },
          "windowsAdminPassword": {
            "value": "[parameters('windowsAdminPassword')]"
          },
          "spnClientId": {
            "value": "[parameters('spnClientId')]"
          },
          "spnClientSecret": {
            "value": "[parameters('spnClientSecret')]"
          },
          "spnTenantId": {
            "value": "[parameters('spnTenantId')]"
          },
          "workspaceName": {
            "value": "[parameters('logAnalyticsWorkspaceName')]"
          },
          "stagingStorageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'stagingStorageAccountDeployment'), '2020-10-01').outputs.storageAccountName.value]"
          },
          "templateBaseUrl": {
            "value": "[variables('templateBaseUrl')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkDeployment'), '2020-10-01').outputs.subnetId.value]"
          },
          "deployBastion": {
            "value": "[parameters('deployBastion')]"
          },
          "registerCluster": {
            "value": "[parameters('registerCluster')]"
          },
          "deployAKSHCI": {
            "value": "[parameters('deployAKSHCI')]"
          },
          "deployResourceBridge": {
            "value": "[parameters('deployResourceBridge')]"
          },
          "natDNS": {
            "value": "[parameters('natDNS')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "7350178746438702927"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string",
              "defaultValue": "HCIBox-Client",
              "metadata": {
                "description": "The name of your Virtual Machine"
              }
            },
            "windowsAdminUsername": {
              "type": "string",
              "defaultValue": "arcdemo",
              "metadata": {
                "description": "Username for the Virtual Machine"
              }
            },
            "windowsAdminPassword": {
              "type": "secureString",
              "maxLength": 123,
              "minLength": 12,
              "metadata": {
                "description": "Password for Windows account. Password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. The value must be between 12 and 123 characters long"
              }
            },
            "windowsOSVersion": {
              "type": "string",
              "defaultValue": "2022-datacenter-g2",
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Resource Id of the subnet in the virtual network"
              }
            },
            "resourceTags": {
              "type": "object",
              "defaultValue": {
                "Project": "jumpstart_HCIBox"
              }
            },
            "spnClientId": {
              "type": "string",
              "metadata": {
                "description": "Client id of the service principal"
              }
            },
            "spnClientSecret": {
              "type": "secureString",
              "metadata": {
                "description": "Client secret of the service principal"
              }
            },
            "spnTenantId": {
              "type": "string",
              "metadata": {
                "description": "Tenant id of the service principal"
              }
            },
            "stagingStorageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Name for the staging storage account using to hold kubeconfig. This value is passed into the template as an output from mgmtStagingStorage.json"
              }
            },
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Name for the environment Azure Log Analytics workspace"
              }
            },
            "templateBaseUrl": {
              "type": "string",
              "metadata": {
                "description": "The base URL used for accessing artifacts and automation artifacts."
              }
            },
            "registerCluster": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Option to disable automatic cluster registration. Setting this to false will also disable deploying AKS and Resource bridge"
              }
            },
            "deployBastion": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Choice to deploy Bastion to connect to the client VM"
              }
            },
            "deployAKSHCI": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Option to deploy AKS-HCI with HCIBox"
              }
            },
            "deployResourceBridge": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Option to deploy Resource Bridge with HCIBox"
              }
            },
            "natDNS": {
              "type": "string",
              "defaultValue": "8.8.8.8",
              "metadata": {
                "description": "Public DNS to use for the domain"
              }
            }
          },
          "variables": {
            "encodedPassword": "[base64(parameters('windowsAdminPassword'))]",
            "bastionName": "HCIBox-Bastion",
            "publicIpAddressName": "[if(equals(parameters('deployBastion'), false()), format('{0}-PIP', parameters('vmName')), format('{0}-PIP', variables('bastionName')))]",
            "networkInterfaceName": "[format('{0}-NIC', parameters('vmName'))]",
            "osDiskType": "Premium_LRS",
            "PublicIPNoBastion": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-03-01",
              "name": "[variables('networkInterfaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": "[if(equals(parameters('deployBastion'), false()), variables('PublicIPNoBastion'), json('null'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
              ]
            },
            {
              "condition": "[equals(parameters('deployBastion'), false())]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-03-01",
              "name": "[variables('publicIpAddressName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4
              },
              "sku": {
                "name": "Basic"
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('resourceTags')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_D48s_v5"
                },
                "storageProfile": {
                  "osDisk": {
                    "name": "[format('{0}-OSDisk', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "[variables('osDiskType')]"
                    },
                    "diskSizeGB": 1024
                  },
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "[parameters('windowsOSVersion')]",
                    "version": "latest"
                  },
                  "dataDisks": [
                    {
                      "name": "ASHCIHost001_DataDisk_0",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 0,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    },
                    {
                      "name": "ASHCIHost001_DataDisk_1",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 1,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    },
                    {
                      "name": "ASHCIHost001_DataDisk_2",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 2,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    },
                    {
                      "name": "ASHCIHost001_DataDisk_3",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 3,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    },
                    {
                      "name": "ASHCIHost001_DataDisk_4",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 4,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    },
                    {
                      "name": "ASHCIHost001_DataDisk_5",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 5,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    },
                    {
                      "name": "ASHCIHost001_DataDisk_6",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 6,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    },
                    {
                      "name": "ASHCIHost001_DataDisk_7",
                      "diskSizeGB": 256,
                      "createOption": "Empty",
                      "lun": 7,
                      "caching": "None",
                      "writeAcceleratorEnabled": false,
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      }
                    }
                  ]
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('windowsAdminUsername')]",
                  "adminPassword": "[parameters('windowsAdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": false
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'Bootstrap')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[uri(parameters('templateBaseUrl'), 'artifacts/Bootstrap.ps1')]"
                  ],
                  "commandToExecute": "[format('powershell.exe -ExecutionPolicy Bypass -File Bootstrap.ps1 -adminUsername {0} -adminPassword {1} -spnClientId {2} -spnClientSecret {3} -spnTenantId {4} -subscriptionId {5} -resourceGroup {6} -azureLocation {7} -stagingStorageAccountName {8} -workspaceName {9} -templateBaseUrl {10} -registerCluster {11} -deployAKSHCI {12} -deployResourceBridge {13} -natDNS {14}', parameters('windowsAdminUsername'), variables('encodedPassword'), parameters('spnClientId'), parameters('spnClientSecret'), parameters('spnTenantId'), subscription().subscriptionId, resourceGroup().name, parameters('location'), parameters('stagingStorageAccountName'), parameters('workspaceName'), parameters('templateBaseUrl'), parameters('registerCluster'), parameters('deployAKSHCI'), parameters('deployResourceBridge'), parameters('natDNS'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            }
          ],
          "outputs": {
            "adminUsername": {
              "type": "string",
              "value": "[parameters('windowsAdminUsername')]"
            },
            "publicIP": {
              "type": "string",
              "value": "[if(equals(parameters('deployBastion'), false()), concat(reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName')), '2021-03-01').ipAddress), '')]"
            },
            "base64Output": {
              "type": "string",
              "value": "[variables('encodedPassword')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networkDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'stagingStorageAccountDeployment')]"
      ]
    }
  ]
}