name: Azure API version check

on:
  push:
    branches:
      - release_checker

jobs:
  check-api-versions:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      
    - name: Find JSON, Terraform, and Bicep files
      run: |
        find . -type f \( -name "*.json" -o -name "*.tf" -o -name "*.bicep" \) \
        -not -path "./tests/*" \
        -not -path "./docs/*" \
        -print > file_list.txt

    - name: Check API versions
      run: |
        for filename in $(find . -type f -name "*.json" ! -path "./exclude/*" ! -path "./output.txt" ! -name "parameters.json" ! -name "parameters.prod.json"); do
          resourceType=$(jq -r '.type' "$filename" | cut -d'/' -f2)
          apiVersion=$(az provider show -n Microsoft.${resourceType} --query "resourceTypes[?resourceType=='${resourceType}'].apiVersions[0]" -o tsv)
          latestVersion=$(az provider show -n Microsoft.${resourceType} --query "resourceTypes[?resourceType=='${resourceType}'].apiVersions[-1]" -o tsv)
          echo "Checking $filename: ResourceType=$resourceType, APIVersion=$apiVersion"
          if [ "$apiVersion" != "$latestVersion" ]; then
            echo "$filename is using outdated API version $apiVersion (latest is $latestVersion)"
            echo "{\"filename\": \"$filename\", \"resourceType\": \"$resourceType\", \"currentVersion\": \"$apiVersion\", \"latestVersion\": \"$latestVersion\"}" >> output.txt
          fi
        done < file_list.txt
      shell: bash

    - name: Generate report
      run: |
        if [ -f "output.txt" ]; then
          cat output.txt | jq -s 'group_by(.ResourceType) | map({"ResourceType": .[0].ResourceType, "Count": length, "Files": [.[] | {"File": .Filename, "APIVersion": .APIVersion, "LatestAPIVersion": .LatestAPIVersion}]})' > report.json
        else
          echo "No outdated API versions found." > report.json
        fi
        
    - name: Display report
      run: |
        if [ -f "report.json" ]; then
          cat report.json
        else
          echo "No report found."
        fi
      
    - name: Upload report
      uses: actions/upload-artifact@v2
      with:
        name: API report
        path: report.json
